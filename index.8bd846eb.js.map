{"mappings":"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","sources":["node_modules/html2canvas/node_modules/tslib/tslib.es6.js","node_modules/src/css/layout/bounds.ts","node_modules/html2canvas/node_modules/src/Util.ts","node_modules/html2canvas/node_modules/src/Trie.ts","node_modules/html2canvas/node_modules/src/LineBreak.ts","node_modules/html2canvas/node_modules/src/linebreak-trie.ts","node_modules/src/css/syntax/tokenizer.ts","node_modules/src/css/syntax/parser.ts","node_modules/src/css/types/length-percentage.ts","node_modules/src/css/types/length.ts","node_modules/src/css/types/angle.ts","node_modules/src/css/types/color.ts","node_modules/src/css/property-descriptors/background-clip.ts","node_modules/src/css/types/image.ts","node_modules/src/css/property-descriptors/background-color.ts","node_modules/src/css/types/functions/gradient.ts","node_modules/src/css/types/functions/-prefix-linear-gradient.ts","node_modules/src/css/types/functions/-webkit-gradient.ts","node_modules/src/css/types/functions/radial-gradient.ts","node_modules/src/css/types/functions/-prefix-radial-gradient.ts","node_modules/src/css/property-descriptors/background-repeat.ts","node_modules/src/css/property-descriptors/background-image.ts","node_modules/src/css/types/functions/linear-gradient.ts","node_modules/src/css/property-descriptors/background-origin.ts","node_modules/src/css/property-descriptors/background-position.ts","node_modules/src/css/property-descriptors/background-size.ts","node_modules/src/css/property-descriptors/border-style.ts","node_modules/src/css/property-descriptors/border-color.ts","node_modules/src/css/property-descriptors/border-radius.ts","node_modules/src/css/property-descriptors/float.ts","node_modules/src/css/property-descriptors/border-width.ts","node_modules/src/css/property-descriptors/color.ts","node_modules/src/css/property-descriptors/direction.ts","node_modules/src/css/property-descriptors/display.ts","node_modules/src/css/property-descriptors/letter-spacing.ts","node_modules/src/css/property-descriptors/line-break.ts","node_modules/src/css/property-descriptors/line-height.ts","node_modules/src/css/property-descriptors/list-style-image.ts","node_modules/src/css/property-descriptors/list-style-position.ts","node_modules/src/css/property-descriptors/list-style-type.ts","node_modules/src/css/property-descriptors/overflow.ts","node_modules/src/css/property-descriptors/margin.ts","node_modules/src/css/property-descriptors/overflow-wrap.ts","node_modules/src/css/property-descriptors/padding.ts","node_modules/src/css/property-descriptors/text-align.ts","node_modules/src/css/property-descriptors/position.ts","node_modules/src/css/property-descriptors/text-transform.ts","node_modules/src/css/property-descriptors/text-shadow.ts","node_modules/src/css/property-descriptors/transform.ts","node_modules/src/css/property-descriptors/transform-origin.ts","node_modules/src/css/property-descriptors/visibility.ts","node_modules/src/css/property-descriptors/word-break.ts","node_modules/src/css/property-descriptors/z-index.ts","node_modules/src/css/types/time.ts","node_modules/src/css/property-descriptors/opacity.ts","node_modules/src/css/property-descriptors/text-decoration-color.ts","node_modules/src/css/property-descriptors/text-decoration-line.ts","node_modules/src/css/property-descriptors/font-family.ts","node_modules/src/css/property-descriptors/font-weight.ts","node_modules/src/css/property-descriptors/font-size.ts","node_modules/src/css/property-descriptors/font-variant.ts","node_modules/src/css/property-descriptors/font-style.ts","node_modules/src/core/bitwise.ts","node_modules/src/css/property-descriptors/content.ts","node_modules/src/css/property-descriptors/counter-increment.ts","node_modules/src/css/property-descriptors/counter-reset.ts","node_modules/src/css/property-descriptors/duration.ts","node_modules/src/css/property-descriptors/quotes.ts","node_modules/src/css/property-descriptors/box-shadow.ts","node_modules/src/css/property-descriptors/paint-order.ts","node_modules/src/css/property-descriptors/webkit-text-stroke-width.ts","node_modules/src/css/property-descriptors/webkit-text-stroke-color.ts","node_modules/src/css/index.ts","node_modules/src/core/debugger.ts","node_modules/src/dom/element-container.ts","node_modules/html2canvas/node_modules/src/grapheme-break-trie.ts","node_modules/html2canvas/node_modules/text-segmentation/node_modules/src/Util.ts","node_modules/html2canvas/node_modules/src/GraphemeBreak.ts","node_modules/html2canvas/node_modules/text-segmentation/node_modules/src/Trie.ts","node_modules/html2canvas/node_modules/text-segmentation/node_modules/utrie/node_modules/src/index.ts","node_modules/src/dom/document-cloner.ts","node_modules/src/core/features.ts","node_modules/src/css/layout/text.ts","node_modules/src/dom/text-container.ts","node_modules/src/dom/replaced-elements/image-element-container.ts","node_modules/src/dom/replaced-elements/canvas-element-container.ts","node_modules/src/dom/replaced-elements/svg-element-container.ts","node_modules/src/dom/elements/li-element-container.ts","node_modules/src/dom/elements/ol-element-container.ts","node_modules/src/dom/replaced-elements/input-element-container.ts","node_modules/src/dom/elements/select-element-container.ts","node_modules/src/dom/elements/textarea-element-container.ts","node_modules/src/dom/replaced-elements/iframe-element-container.ts","node_modules/src/dom/node-parser.ts","node_modules/src/css/types/functions/counter.ts","node_modules/src/core/cache-storage.ts","node_modules/src/render/path.ts","node_modules/src/render/bound-curves.ts","node_modules/src/render/bezier-curve.ts","node_modules/src/render/effects.ts","node_modules/src/render/stacking-context.ts","node_modules/src/render/border.ts","node_modules/src/render/box-sizing.ts","node_modules/src/render/background.ts","node_modules/src/core/util.ts","node_modules/src/render/font-metrics.ts","node_modules/src/render/renderer.ts","node_modules/src/render/canvas/canvas-renderer.ts","node_modules/src/render/vector.ts","node_modules/src/render/canvas/foreignobject-renderer.ts","node_modules/src/core/logger.ts","node_modules/src/core/context.ts","node_modules/src/index.ts","node_modules/wtf_wikipedia/builds/wtf_wikipedia-client.js","script.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/* wtf_wikipedia 9.0.1 MIT */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.wtf = factory());\n}(this, (function () { 'use strict';\n\n  function require$$0$a (e, n) {\n    return n = n || {}, new Promise(function (t, r) {\n      var s = new XMLHttpRequest(),\n          o = [],\n          u = [],\n          i = {},\n          a = function () {\n        return {\n          ok: 2 == (s.status / 100 | 0),\n          statusText: s.statusText,\n          status: s.status,\n          url: s.responseURL,\n          text: function () {\n            return Promise.resolve(s.responseText);\n          },\n          json: function () {\n            return Promise.resolve(s.responseText).then(JSON.parse);\n          },\n          blob: function () {\n            return Promise.resolve(new Blob([s.response]));\n          },\n          clone: a,\n          headers: {\n            keys: function () {\n              return o;\n            },\n            entries: function () {\n              return u;\n            },\n            get: function (e) {\n              return i[e.toLowerCase()];\n            },\n            has: function (e) {\n              return e.toLowerCase() in i;\n            }\n          }\n        };\n      };\n\n      for (var l in s.open(n.method || \"get\", e, !0), s.onload = function () {\n        s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (e, n, t) {\n          o.push(n = n.toLowerCase()), u.push([n, t]), i[n] = i[n] ? i[n] + \",\" + t : t;\n        }), t(a());\n      }, s.onerror = r, s.withCredentials = \"include\" == n.credentials, n.headers) s.setRequestHeader(l, n.headers[l]);\n\n      s.send(n.body || null);\n    });\n  }\n\n  var browser = self.fetch || (self.fetch = require$$0$a.default || require$$0$a);\n\n  /**\n   * Parses out the domain and title from a url\n   *\n   * @private\n   * @param {string} url The url that will be parsed\n   * @returns {{domain: string, title: string}} The domain and title of a url\n   */\n  const parseUrl$1 = function (url) {\n    let parsed = new URL(url);\n    let title = parsed.pathname.replace(/^\\/(wiki\\/)?/, '');\n    title = decodeURIComponent(title);\n    return {\n      domain: parsed.host,\n      title: title\n    };\n  };\n\n  var parseUrl_1 = parseUrl$1;\n\n  /**\n   * capitalizes the input\n   * hello -> Hello\n   * hello there -> Hello there\n   *\n   * @private\n   * @param {string} [str] the string that will be capitalized\n   * @returns {string} the capitalized string\n   */\n  function capitalise(str) {\n    if (str && typeof str === 'string') {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    return '';\n  }\n  /**\n   * trim whitespaces of the ends normalize 2 spaces into one and removes whitespaces before commas\n   *\n   * @private\n   * @param {string} [str] the string that will be processed\n   * @returns {string} the processed string\n   */\n\n\n  function trim_whitespace$1(str) {\n    if (str && typeof str === 'string') {\n      str = str.replace(/^\\s+/, '');\n      str = str.replace(/\\s+$/, '');\n      str = str.replace(/ {2}/, ' ');\n      str = str.replace(/\\s, /, ', ');\n      return str;\n    }\n\n    return '';\n  }\n  /**\n   * determines if an variable is an array or not\n   *\n   * @private\n   * @param {*} x the variable that needs to be checked\n   * @returns {boolean} whether the variable is an array\n   */\n\n\n  function isArray$4(x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  }\n  /**\n   *  determines if an variable is an object or not\n   *\n   * @private\n   * @param {*} x the variable that needs to be checked\n   * @returns {boolean} whether the variable is an object\n   */\n\n\n  function isObject$1(x) {\n    return x && Object.prototype.toString.call(x) === '[object Object]';\n  }\n\n  var helpers = {\n    capitalise,\n    trim_whitespace: trim_whitespace$1,\n    isArray: isArray$4,\n    isObject: isObject$1\n  };\n\n  var require$$0$9 = helpers;\n\n  const {\n    isArray: isArray$3\n  } = require$$0$9;\n  const isInterWiki = /(wikibooks|wikidata|wikimedia|wikinews|wikipedia|wikiquote|wikisource|wikispecies|wikiversity|wikivoyage|wiktionary|foundation|meta)\\.org/;\n  const defaults$c = {\n    action: 'query',\n    prop: 'revisions|pageprops',\n    // we use the 'revisions' api here, instead of the Raw api, for its CORS-rules..\n    rvprop: 'content',\n    maxlag: 5,\n    rvslots: 'main',\n    origin: '*',\n    format: 'json',\n    redirects: 'true'\n  };\n  /**\n   * turns a object into a query string\n   * \n   * @private\n   * @param {Object<string, string | number | boolean>} obj\n   * @returns {string} QueryString\n   */\n\n  const toQueryString = function (obj) {\n    return Object.entries(obj).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`).join('&');\n  };\n  /**\n   * cleans and prepares the tile by replacing the spaces with underscores (_) and trimming the white spaces of the ends\n   *\n   * @private\n   * @param {string} page the title that needs cleaning\n   * @returns {string} the cleaned title\n   */\n\n\n  const cleanTitle = page => {\n    return page.replace(/ /g, '_').trim();\n  };\n  /**\n   * generates the url for fetching the pages\n   * \n   * @private\n   * @param {import('.').fetchDefaults} options\n   * @returns {string} the url that can be used to make the fetch\n   */\n\n\n  const makeUrl$1 = function (options) {\n    let params = Object.assign({}, defaults$c); //default url\n\n    let apiPath = ''; //add support for third party apis\n\n    if (options.domain) {\n      //wikimedia is the only api that uses `/w/api` as its path. other wikis use other paths\n      let path = isInterWiki.test(options.domain) ? 'w/api.php' : options.path;\n      apiPath = `https://${options.domain}/${path}?`;\n    } else if (options.lang && options.wiki) {\n      apiPath = `https://${options.lang}.${options.wiki}.org/w/api.php?`;\n    } else {\n      return '';\n    }\n\n    if (!options.follow_redirects) {\n      delete params.redirects;\n    } //support numerical ids\n\n\n    let title = options.title;\n\n    if (typeof title === 'number') {\n      //single pageId\n      params.pageids = title;\n    } else if (typeof title === 'string') {\n      //single page title\n      params.titles = cleanTitle(title);\n    } else if (title !== undefined && isArray$3(title) && typeof title[0] === 'number') {\n      //pageid array\n      params.pageids = title.join('|');\n    } else if (title !== undefined && isArray$3(title) === true && typeof title[0] === 'string') {\n      //title array\n      params.titles = title.map(cleanTitle).join('|');\n    } else {\n      return '';\n    } //make it!\n\n\n    return `${apiPath}${toQueryString(params)}`;\n  };\n\n  var makeUrl_1 = makeUrl$1;\n\n  /**\n   * parses the media wiki api response to something we can use\n   *\n   * the data-format from mediawiki api is nutso\n   *\n   * @private\n   * @param {object} data\n   * @param {object} [options]\n   * @returns {*} result\n   */\n  const getResult$1 = function (data, options = {}) {\n    //get all the pagesIds from the result\n    let pages = Object.keys(data.query.pages); // map over the pageIds to parse out all the information\n\n    return pages.map(id => {\n      // get the page by pageID\n      let page = data.query.pages[id] || {}; // if the page is missing or not found than return null\n\n      if (page.hasOwnProperty('missing') || page.hasOwnProperty('invalid')) {\n        return null;\n      } // get the text from the object\n\n\n      let text = page.revisions[0]['*']; // if the text is not found in the regular place than it is at the other place\n\n      if (!text && page.revisions[0].slots) {\n        text = page.revisions[0].slots.main['*'];\n      }\n\n      page.pageprops = page.pageprops || {};\n      let domain = options.domain;\n\n      if (!domain && options.wiki) {\n        domain = `${options.wiki}.org`;\n      }\n\n      let meta = Object.assign({}, options, {\n        title: page.title,\n        pageID: page.pageid,\n        namespace: page.ns,\n        domain: domain,\n        wikidata: page.pageprops.wikibase_item,\n        description: page.pageprops['wikibase-shortdesc']\n      });\n      return {\n        wiki: text,\n        meta: meta\n      };\n    });\n  };\n\n  var getResult_1 = getResult$1;\n\n  /**\n   * helper for looping around all sections of a document\n   *\n   * @private\n   * @param {Document} doc the document with the sections\n   * @param {string} fn the function name of the function that will be called\n   * @param {string | number} [clue] the clue that will be used with the function\n   * @returns {Array|*} the array of item at the index of the clue\n   */\n  const sectionMap$1 = function (doc, fn, clue) {\n    let arr = [];\n    doc.sections().forEach(sec => {\n      let list = [];\n\n      if (typeof clue === 'string') {\n        list = sec[fn](clue);\n      } else {\n        list = sec[fn]();\n      }\n\n      list.forEach(t => {\n        arr.push(t);\n      });\n    });\n\n    if (typeof clue === 'number') {\n      if (arr[clue] === undefined) {\n        return [];\n      }\n\n      return [arr[clue]];\n    }\n\n    return arr;\n  };\n\n  var _sectionMap = sectionMap$1;\n\n  /**\n   * applies the the key values of defaults to options\n   *\n   * @private\n   * @param {object} options the user options\n   * @param {object} defaults the defaults\n   * @returns {object} the user options with the defaults applied\n   */\n  const setDefaults$1 = function (options, defaults) {\n    return Object.assign({}, defaults, options);\n  };\n\n  var setDefaults_1 = setDefaults$1;\n\n  var setDefaults = setDefaults_1;\n\n  /**\n   * @typedef DocumentToJsonOptions\n   * @property {boolean | undefined} title\n   * @property {boolean | undefined} pageID\n   * @property {boolean | undefined} categories\n   * @property {boolean | undefined} sections\n   * @property {boolean | undefined} coordinates\n   * @property {boolean | undefined} infoboxes\n   * @property {boolean | undefined} images\n   * @property {boolean | undefined} plaintext\n   * @property {boolean | undefined} citations\n   * @property {boolean | undefined} references\n   */\n\n  const defaults$b = {\n    title: true,\n    sections: true,\n    pageID: true,\n    categories: true\n  };\n  /**\n   * @typedef documentToJsonReturn\n   * @property {string | undefined} title\n   * @property {number | null | undefined} pageID\n   * @property {string[] | undefined} categories\n   * @property {object[] | undefined} sections\n   * @property {boolean | undefined} isRedirect\n   * @property {object | undefined} redirectTo\n   * @property {object[] | undefined} coordinates\n   * @property {object[] | undefined} infoboxes\n   * @property {Image[] | undefined} images\n   * @property {string | undefined} plaintext\n   * @property {object[] | undefined} references\n   */\n\n  /**\n   * an opinionated output of the most-wanted data\n   *\n   * @private\n   * @param {Document} doc\n   * @param {DocumentToJsonOptions} options\n   * @returns {documentToJsonReturn}\n   */\n\n  const toJSON$8 = function (doc, options) {\n    options = setDefaults(options, defaults$b);\n    /**\n     * @type {documentToJsonReturn}\n     */\n\n    let data = {};\n\n    if (options.title) {\n      data.title = doc.title();\n    }\n\n    if (options.pageID) {\n      data.pageID = doc.pageID();\n    }\n\n    if (options.categories) {\n      data.categories = doc.categories();\n    }\n\n    if (options.sections) {\n      data.sections = doc.sections().map(i => i.json(options));\n    }\n\n    if (doc.isRedirect() === true) {\n      data.isRedirect = true;\n      data.redirectTo = doc.redirectTo();\n      data.sections = [];\n    } //these are default-off\n\n\n    if (options.coordinates) {\n      data.coordinates = doc.coordinates();\n    }\n\n    if (options.infoboxes) {\n      data.infoboxes = doc.infoboxes().map(i => i.json(options));\n    }\n\n    if (options.images) {\n      data.images = doc.images().map(i => i.json(options));\n    }\n\n    if (options.plaintext) {\n      data.plaintext = doc.text(options);\n    }\n\n    if (options.citations || options.references) {\n      data.references = doc.references();\n    }\n\n    return data;\n  };\n\n  var toJson$9 = toJSON$8;\n\n  var categories$1 = ['category', //en\n  'abdeeling', //\tpdc\n  'bólkur', //\tfo\n  'catagóir', //\tga\n  'categori', //\tcy\n  'categoria', 'categoria', //\tco\n  'categoría', //\tes\n  'categorîa', //\tlij\n  'categorìa', //\tpms\n  'catégorie', 'categorie', 'catègorie', //\tfrp\n  'category', 'categuria', //\tlmo\n  'catigurìa', //\tscn\n  'class', //\tkw\n  'ẹ̀ka', //\tyo\n  'flocc', 'flocc', //\tang\n  'flokkur', 'grup', //\ttpi\n  'jamii', //\tsw\n  'kaarangay', //\twar\n  'kateggoría', //\tlad\n  'kategooria', //\tet\n  'kategori', //\tda\n  'kategorî', //\tku\n  'kategoria', //\teu\n  'kategória', //\thu\n  'kategorie', //de\n  'kategoriija', //\tse\n  'kategorija', //\tsl\n  'kategorio', //\teo\n  'kategoriya', 'kategoriýa', //\ttk\n  'kategoriye', //\tdiq\n  'kategory', //\tfy\n  'kategorya', //\ttl\n  'kateqoriya', //\taz\n  'katiguriya', //\tqu\n  'klad', //\tvo\n  'luokka', 'ñemohenda', //\tgn\n  'roinn', //-seòrsa\tgd\n  'ronney', //\tgv\n  'rummad', //\tbr\n  'setensele', //\tnso\n  'sokajy', //\tmg\n  'sumut', // atassuseq\tkl\n  'thể', // loại\tvi\n  'turkum', //\tuz\n  'категорија', 'категория', //\tru\n  'категорія', //\tuk\n  'катэгорыя', 'төркем', //\ttt\n  'קטגוריה', //\the\n  'تصنيف', 'تۈر', //\tug\n  'رده', 'श्रेणी', 'श्रेणी', //\thi\n  'বিষয়শ্রেণী', //\tbn\n  'หมวดหมู่', //\tth\n  '분류', //\tko\n  '분류', //ko\n  '分类' //\tza\n  //--\n  ];\n\n  var disambig_templates = ['dab', //en\n  'disamb', //en\n  'disambig', //en\n  'disambiguation', //en\n  'aðgreining', //is\n  'aimai', //ja\n  'ałtsʼáʼáztiin', //nv\n  'anlam ayrımı', //gag\n  'anlam ayrımı', //tr\n  'apartigilo', //eo\n  'argipen', //eu\n  'begriepskloorenge', //stq\n  'begriffsklärung', //als\n  'begriffsklärung', //de\n  'begriffsklärung', //pdc\n  'begriffsklearung', //bar\n  'bisongidila', //kg\n  'bkl', //pfl\n  'bokokani', //ln\n  'caddayn', //so\n  'clerheans', //kw\n  'cudakirin', //ku\n  'čvor', //bs\n  'db', //vls\n  'desambig', //nov\n  'desambigación', //an\n  'desambiguação', //pt\n  'desambiguació', //ca\n  'desambiguación', //es\n  'desambiguáncia', //ext\n  'desambiguasion', //lad\n  'desambiguassiù', //lmo\n  'desambigui', //lfn\n  'dezambiguizare', //ro\n  'dəqiqləşdirmə', //az\n  'disambigua', //it\n  'disambigua', //lij\n  'disambigua', //nap\n  'disambìgua', //sc\n  'disambigua', //scn\n  'disambiguasi', //id\n  'disambiguasi', //su\n  'discretiva', //la\n  'disheñvelout', //br\n  'disingkek', //min\n  'dixanbigua', //vec\n  'dixebra', //ast\n  'diżambigwazzjoni', //mt\n  'doorverwijspagina', //nl\n  'dp', //nl\n  'dp', //zea\n  'dubbelsinnig', //af\n  'dudalipen', //rmy\n  'dv', //nds_nl\n  'egyért', //hu\n  'fleiri týdningar', //fo\n  'fleirtyding', //nn\n  'flertydig', //da\n  'förgrening', //sv\n  'gì-ngiê', //cdo\n  'giklaro', //ceb\n  'gwahaniaethu', //cy\n  'homonimo', //io\n  'homónimos', //gl\n  'homonymie', //fr\n  'huaʻōlelo puana like', //haw\n  'idirdhealú', //ga\n  'khu-pia̍t', //zh_min_nan\n  'kthjellim', //sq\n  'kujekesa', //sn\n  'maana', //sw\n  'maneo bin', //diq\n  'mehrdüdig begreep', //nds\n  'menm non', //ht\n  'muardüüdag artiikel', //frr\n  'neibetsjuttings', //fy\n  'nozīmju atdalīšana', //lv\n  'nuorodinis', //lt\n  'nyahkekaburan', //ms\n  'omonimeye', //wa\n  'omonimia', //oc\n  'page dé frouque', //nrm\n  'paglilinaw', //tl\n  'panangilawlawag', //ilo\n  'pansayod', //war\n  'pejy mitovy anarana', //mg\n  'peker', //no\n  'razdvojba', //hr\n  'razločitev', //sl\n  'razvrstavanje', //sh\n  'reddaghey', //gv\n  'rozcestník', //cs\n  'rozlišovacia stránka', //sk\n  'sclerir noziun', //rm\n  'selvendyssivu', //olo\n  'soilleireachadh', //gd\n  'suzmunski', //jbo\n  'täpsustuslehekülg', //et\n  'täsmennyssivu', //fi\n  'telplänov', //vo\n  'tlahtolmelahuacatlaliztli', //nah\n  'trang định hướng', //vi\n  'ujednoznacznienie', //pl\n  'verdudeliking', //li\n  'wěcejwóznamowosć', //dsb\n  'wjacezmyslnosć', //hsb\n  'zambiguaçon', //mwl\n  'zeimeibu škiršona', //ltg\n  'αποσαφήνιση', //el\n  'айрық', //kk\n  'аҵакырацәа', //ab\n  'вишезначна одредница', //sr\n  'ибҳомзудоӣ', //tg\n  'кёб магъаналы', //krc\n  'күп мәгънәләр', //tt\n  'күп мәғәнәлелек', //ba\n  'мъногосъмꙑслиѥ', //cu\n  'неадназначнасць', //be\n  'неадназначнасьць', //be_x_old\n  'неоднозначность', //ru\n  'олон удхатай', //bxr\n  'појаснување', //mk\n  'пояснение', //bg\n  'са шумуд манавал', //lez\n  'салаа утгатай', //mn\n  'суолталар', //sah\n  'текмаанисиздик', //ky\n  'цо магіна гуреб', //av\n  'чеперушка', //rue\n  'чолхалла', //ce\n  'шуко ончыктымаш-влак', //mhr\n  'მრავალმნიშვნელოვანი', //ka\n  'բազմիմաստութիւն', //hyw\n  'բազմիմաստություն', //hy\n  'באדייטן', //yi\n  'פירושונים', //he\n  'ابهام‌زدایی', //fa\n  'توضيح', //ar\n  'توضيح', //arz\n  'دقیقلشدیرمه', //azb\n  'ڕوونکردنەوە', //ckb\n  'سلجهائپ', //sd\n  'ضد ابہام', //ur\n  'گجگجی بیری', //mzn\n  'نامبهمېدنه', //ps\n  'መንታ', //am\n  'अस्पष्टता', //ne\n  'बहुअर्थी', //bh\n  'बहुविकल्पी शब्द', //hi\n  'দ্ব্যর্থতা নিরসন', //bn\n  'ਗੁੰਝਲ-ਖੋਲ੍ਹ', //pa\n  'સંદિગ્ધ શીર્ષક', //gu\n  'பக்கவழி நெறிப்படுத்தல்', //ta\n  'అయోమయ నివృత్తి', //te\n  'ದ್ವಂದ್ವ ನಿವಾರಣೆ', //kn\n  'വിവക്ഷകൾ', //ml\n  'වක්‍රෝත්ති', //si\n  'แก้ความกำกวม', //th\n  'သံတူကြောင်းကွဲ', //my\n  'ណែនាំ', //km\n  '동음이의', //ko\n  '扤清楚', //gan\n  '搞清楚', //zh_yue\n  '曖昧さ回避', //ja\n  '消歧义', //zh\n  '釋義', //zh_classical\n  \"gestion dj'omònim\", //pms\n  \"sut'ichana qillqa\" //qu\n  // 'z', //vep\n  // 'သဵင်မိူၼ် တူၼ်ႈထႅဝ်ပႅၵ်ႇ', //shn\n  ];\n\n  // used in titles to denote disambiguation pages\n  // see 'Football_(disambiguation)'\n  var disambig_titles = ['disambiguation', //en\n  'homonymie', //fr\n  'توضيح', //ar\n  'desambiguação', //pt\n  'Begriffsklärung', //de\n  'disambigua', //it\n  '曖昧さ回避', //ja\n  '消歧義', //zh\n  '搞清楚', //zh-yue\n  'значения', //ru\n  'ابهام‌زدایی', //fa\n  'د ابہام', //ur\n  '동음이의', //ko\n  'dubbelsinnig', //af\n  'այլ կիրառումներ', //hy\n  'ujednoznacznienie' //pl\n  ];\n\n  var images = ['file', //en\n  'image', //en\n  'चित्र', //img\n  'archivo', //es\n  'attēls', //lv\n  'berkas', //id\n  'bestand', //nl\n  'datei', //de\n  'dosiero', //eo\n  'dosya', //lad\n  'fájl', //hu\n  'fasciculus', //la\n  'fichier', //fr\n  'fil', //da\n  'fitxategi', //eu\n  'fitxer', //ca\n  'gambar', //su\n  'imagem', //pt\n  'imej', //ms\n  'immagine', //it\n  'larawan', //tl\n  'lêer', //af\n  'plik', //pl\n  'restr', //br\n  'slika', //bs\n  'wêne', //ku\n  'wobraz', //dsb\n  'выява', //be\n  'податотека', //mk\n  'слика', //sr\n  'файл', //ru\n  'სურათი', //ka\n  'պատկեր', //hy\n  'קובץ', //he\n  'پرونده', //fa\n  'دوتنه', //ps\n  'ملف', //ar\n  'وێنە', //ckb\n  'चित्र', //hi\n  'ไฟล์', //th\n  '파일', //ko\n  'ファイル' //ja\n  ];\n\n  var infoboxes$1 = ['infobox', //en\n  'anfo', //mwl\n  'anuāmapa', //haw\n  'bilgi kutusu', //tr\n  'bilgi', //tr\n  'bilgiquti', //uz\n  'boaty', //mg\n  'boestkelaouiñ', //br\n  'bosca', //ga\n  'capsa', //la\n  'diehtokássa', //se\n  'faktamall', //sv\n  'ficha', //es\n  'generalni', //hr\n  'gwybodlen3', //cy\n  'info', //pt\n  'infobokis', //tpi\n  'infoboks', //da\n  'infochascha', //rm\n  'infokašćik', //dsb\n  'infokast', //et\n  'infokutija', //bs\n  'infolentelė', //lt\n  'infopolje', //sl\n  'informkesto', //eo\n  'infoskreine', //ltg\n  'infotaula', //eu\n  'inligtingskas', 'inligtingskas3', //af\n  'inligtingskas4', //af\n  'kishtey', //gv\n  'kotak', //su\n  'tertcita', //jbo\n  'tietolaatikko', //fi\n  'yerleşim bilgi kutusu', 'ynfoboks', //fy\n  'πλαίσιο', //el\n  'акарточка', //ab\n  'аҥа', //mhr\n  'инфобокс', //kk\n  'инфокутија', //sr\n  'инфокутия', //bg\n  'інфобокс', //rue\n  'канадский', 'картка', //be\n  'карточка', //ru\n  'карточка2', //mdf\n  'карточкарус', //ba\n  'картуш', //koi\n  'қуттӣ', //tg\n  'ინფოდაფა', //ka\n  'տեղեկաքարտ', //hy\n  'אינפאקעסטל', //yi\n  'תבנית', //he\n  'بطاقة', //ar\n  'ڄاڻخانو', //sd\n  'خانہ', //ur\n  'لغة', 'ज्ञानसन्दूक', //hi\n  'তথ্যছক', //bn\n  'ਜਾਣਕਾਰੀਡੱਬਾ', //pa\n  'సమాచారపెట్టె', //te\n  'තොරතුරුකොටුව', //si\n  'กล่องข้อมูล', //th\n  'ប្រអប់ព័ត៌មាន', //km\n  '정보상자', //ko\n  '明細' //zh_yue\n  ];\n\n  var redirects$2 = ['adkas', //br\n  'aýdaw', 'doorverwijzing', //nl\n  'ohjaus', 'patrz', //pl\n  'přesměruj', 'redirección', 'redireccion', 'redirección', //es\n  'redirecionamento', //pt\n  'redirect', //en\n  'redirection', 'redirection', //fr\n  'rinvia', //it\n  'tilvísun', 'uudelleenohjaus', 'weiterleitung', 'weiterleitung', //de\n  'yönlendi̇r', 'yönlendirme', 'yönlendi̇rme', //tr\n  'ανακατευθυνση', //el\n  'айдау', 'перанакіраваньне', 'перенаправлення', //uk\n  'пренасочување', //mk\n  'преусмери', 'преусмјери', 'تغییر_مسیر', 'تغییرمسیر', 'تغییرمسیر', //fa\n  'เปลี่ยนทาง', //th\n  'ប្តូរទីតាំងទៅ', //km\n  '転送', //ja\n  '重定向'];\n\n  var references = ['references', 'reference', 'einzelnachweise', 'referencias', 'références', 'notes et références', '脚注', 'referenser', 'bronnen', 'примечания'];\n\n  var require$$0$8 = categories$1;\n\n  var require$$1$8 = disambig_templates;\n\n  var require$$2$7 = disambig_titles;\n\n  var require$$3$4 = images;\n\n  var require$$4$4 = infoboxes$1;\n\n  var require$$5$3 = redirects$2;\n\n  var require$$6$2 = references;\n\n  /**\n   * wikipedia special terms lifted and augmented from parsoid parser april 2015\n   * and then manually on March 2020\n   *\n   * @private\n   * @type {{\n   *  images: string[],\n   *  references: string[],\n   *  redirects: string[],\n   *  infoboxes: string[],\n   *  categories: string[],\n   *   disambig: string[]\n   * }}\n   */\n\n  var i18n$1 = {\n    categories: require$$0$8,\n    disambig_templates: require$$1$8,\n    disambig_titles: require$$2$7,\n    images: require$$3$4,\n    infoboxes: require$$4$4,\n    redirects: require$$5$3,\n    references: require$$6$2 //specials: [\n    //'спэцыяльныя',\n    //'especial',\n    //'speciální',\n    //'spezial',\n    //'special',\n    //'ویژه',\n    //'toiminnot',\n    //'kerfissíða',\n    //'arnawlı',\n    //'spécial',\n    //'speciaal',\n    //'посебно',\n    //'özel',\n    //'特別'\n    //],\n    //users: [\n    //'удзельнік',\n    //'usuari',\n    //'uživatel',\n    //'benutzer',\n    //'user',\n    //'usuario',\n    //'کاربر',\n    //'käyttäjä',\n    //'notandi',\n    //'paydalanıwshı',\n    //'utilisateur',\n    //'gebruiker',\n    //'корисник',\n    //'kullanıcı',\n    //'利用者'\n    //],\n    //sources: [\n    ////blacklist these headings, as they're not plain-text\n    //'references',\n    //'see also',\n    //'external links',\n    //'further reading',\n    //'notes et références',\n    //'voir aussi',\n    //'liens externes',\n    //'参考文献', //references (ja)\n    //'脚注', //citations (ja)\n    //'関連項目', //see also (ja)\n    //'外部リンク' //external links (ja)\n    //]\n\n  };\n\n  //alt disambig-templates en-wikipedia uses\n  let d = ' disambiguation';\n  const templates$b = ['dab', 'dab', 'disamb', 'disambig', 'geodis', 'hndis', 'setindex', 'ship index', 'split dab', 'sport index', 'wp disambig', 'disambiguation cleanup', 'airport' + d, 'biology' + d, 'call sign' + d, 'caselaw' + d, 'chinese title' + d, 'genus' + d, 'hospital' + d, 'lake index', 'letter' + d, 'letter-number combination' + d, 'mathematical' + d, 'military unit' + d, 'mountainindex', 'number' + d, 'phonetics' + d, 'place name' + d, 'portal' + d, 'road' + d, 'school' + d, 'species latin name abbreviation' + d, 'species latin name' + d, 'station' + d, 'synagogue' + d, 'taxonomic authority' + d, 'taxonomy' + d].reduce((h, str) => {\n    h[str] = true;\n    return h;\n  }, {});\n  var _disambig = templates$b;\n\n  var i18n = i18n$1;\n\n  var alt_disambig = _disambig;\n\n  const inTitle = new RegExp('. \\\\((' + i18n.disambig_titles.join('|') + ')\\\\)$', 'i');\n  const i18n_templates = i18n.disambig_templates.reduce((h, str) => {\n    h[str] = true;\n    return h;\n  }, {}); // look for '... may refer to'\n\n  const byText = function (s) {\n    if (!s) {\n      return false;\n    }\n\n    let txt = s.text();\n\n    if (txt !== null && txt[0]) {\n      if (/. may (also)? refer to\\b/i.test(txt) === true) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Parses the wikitext to find out if this page is a disambiguation\n   *\n   * @private\n   * @param {Document} doc the document that is examined\n   * @returns {boolean} an indication if the document is a disambiguation page\n   */\n\n\n  const isDisambig$1 = function (doc) {\n    // check for a {{disambig}} template\n    let templates = doc.templates().map(tmpl => tmpl.json());\n    let found = templates.find(obj => {\n      return alt_disambig.hasOwnProperty(obj.template) || i18n_templates.hasOwnProperty(obj.template);\n    });\n\n    if (found) {\n      return true;\n    } // check for (disambiguation) in title\n\n\n    let title = doc.title();\n\n    if (title && inTitle.test(title) === true) {\n      return true;\n    } //try 'may refer to' on first line for en-wiki?\n\n\n    if (byText(doc.sentence(0)) === true || byText(doc.sentence(1)) === true) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var isDisambig_1 = isDisambig$1;\n\n  const defaults$a = {\n    caption: true,\n    alt: true,\n    links: true,\n    thumb: true,\n    url: true\n  }; //\n\n  const toJson$8 = function (img, options) {\n    options = setDefaults(options, defaults$a);\n    let json = {\n      file: img.file()\n    };\n\n    if (options.thumb !== false) {\n      json.thumb = img.thumbnail();\n    }\n\n    if (options.url !== false) {\n      json.url = img.url();\n    } //add captions\n\n\n    if (options.caption !== false && img.data.caption) {\n      json.caption = img.caption();\n\n      if (options.links !== false && img.data.caption.links()) {\n        json.links = img.links();\n      }\n    }\n\n    if (options.alt !== false && img.data.alt) {\n      json.alt = img.alt();\n    }\n\n    return json;\n  };\n\n  var toJson_1$3 = toJson$8;\n\n  var toJson$7 = toJson_1$3;\n\n  const server = 'wikipedia.org';\n\n  const encodeTitle = function (file) {\n    let title = file.replace(/^(image|file?):/i, ''); //titlecase it\n\n    title = title.charAt(0).toUpperCase() + title.substring(1); //spaces to underscores\n\n    title = title.trim().replace(/ /g, '_');\n    return title;\n  }; //the wikimedia image url is a little silly:\n\n\n  const makeSrc = function (file) {\n    let title = encodeTitle(file);\n    title = encodeURIComponent(title);\n    return title;\n  }; //the class for our image generation functions\n\n\n  const Image = function (data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  const methods$8 = {\n    file() {\n      return this.data.file || '';\n    },\n\n    alt() {\n      let str = this.data.alt || this.data.file || '';\n      str = str.replace(/^(file|image):/i, '');\n      str = str.replace(/\\.(jpg|jpeg|png|gif|svg)/i, '');\n      return str.replace(/_/g, ' ');\n    },\n\n    caption() {\n      if (this.data.caption) {\n        return this.data.caption.text();\n      }\n\n      return '';\n    },\n\n    links() {\n      if (this.data.caption) {\n        return this.data.caption.links();\n      }\n\n      return [];\n    },\n\n    url() {\n      // let lang = 'en' //this.language() || 'en' //hmm: get actual language?\n      let fileName = makeSrc(this.file());\n      let domain = this.data.domain || server;\n      let path = `wiki/Special:Redirect/file`;\n      return `https://${domain}/${path}/${fileName}`;\n    },\n\n    thumbnail(size) {\n      size = size || 300;\n      return this.url() + '?width=' + size;\n    },\n\n    format() {\n      let arr = this.file().split('.');\n\n      if (arr[arr.length - 1]) {\n        return arr[arr.length - 1].toLowerCase();\n      }\n\n      return null;\n    },\n\n    json: function (options) {\n      options = options || {};\n      return toJson$7(this, options);\n    },\n    text: function () {\n      return '';\n    },\n    wikitext: function () {\n      return this.data.wiki || '';\n    }\n  };\n  Object.keys(methods$8).forEach(k => {\n    Image.prototype[k] = methods$8[k];\n  });\n  Image.prototype.src = Image.prototype.url;\n  Image.prototype.thumb = Image.prototype.thumbnail;\n  var Image_1 = Image;\n\n  var languages$1 = {\n    aa: 'Afar',\n    //Afar\n    ab: 'Аҧсуа',\n    //Abkhazian\n    af: 'Afrikaans',\n    //Afrikaans\n    ak: 'Akana',\n    //Akan\n    als: 'Alemannisch',\n    //Alemannic\n    am: 'አማርኛ',\n    //Amharic\n    an: 'Aragonés',\n    //Aragonese\n    ang: 'Englisc',\n    //Anglo-Saxon\n    ar: 'العربية',\n    //Arabic\n    arc: 'ܣܘܪܬ',\n    //Aramaic\n    as: 'অসমীয়া',\n    //Assamese\n    ast: 'Asturianu',\n    //Asturian\n    av: 'Авар',\n    //Avar\n    ay: 'Aymar',\n    //Aymara\n    az: 'Azərbaycanca',\n    //Azerbaijani\n    ba: 'Башҡорт',\n    //Bashkir\n    bar: 'Boarisch',\n    //Bavarian\n    'bat-smg': 'Žemaitėška',\n    //Samogitian\n    bcl: 'Bikol',\n    //Bikol\n    be: 'Беларуская',\n    //Belarusian\n    'be-x-old': 'ltr',\n    //Belarusian\n    bg: 'Български',\n    //Bulgarian\n    bh: 'भोजपुरी',\n    //Bihari\n    bi: 'Bislama',\n    //Bislama\n    bm: 'Bamanankan',\n    //Bambara\n    bn: 'বাংলা',\n    //Bengali\n    bo: 'བོད་ཡིག',\n    //Tibetan\n    bpy: 'ltr',\n    //Bishnupriya\n    br: 'Brezhoneg',\n    //Breton\n    bs: 'Bosanski',\n    //Bosnian\n    bug: 'ᨅᨔ',\n    //Buginese\n    bxr: 'ltr',\n    //Buriat\n    ca: 'Català',\n    //Catalan\n    cdo: 'Chinese',\n    //Min\n    ce: 'Нохчийн',\n    //Chechen\n    ceb: 'Sinugboanong',\n    //Cebuano\n    ch: 'Chamoru',\n    //Chamorro\n    cho: 'Choctaw',\n    //Choctaw\n    chr: 'ᏣᎳᎩ',\n    //Cherokee\n    chy: 'Tsetsêhestâhese',\n    //Cheyenne\n    co: 'Corsu',\n    //Corsican\n    cr: 'Nehiyaw',\n    //Cree\n    cs: 'Česky',\n    //Czech\n    csb: 'Kaszëbsczi',\n    //Kashubian\n    cu: 'Slavonic',\n    //Old\n    cv: 'Чăваш',\n    //Chuvash\n    cy: 'Cymraeg',\n    //Welsh\n    da: 'Dansk',\n    //Danish\n    de: 'Deutsch',\n    //German\n    diq: 'Zazaki',\n    //Dimli\n    dsb: 'ltr',\n    //Lower\n    dv: 'ދިވެހިބަސް',\n    //Divehi\n    dz: 'ཇོང་ཁ',\n    //Dzongkha\n    ee: 'Ɛʋɛ',\n    //Ewe\n    far: 'فارسی',\n    //Farsi\n    el: 'Ελληνικά',\n    //Greek\n    en: 'English',\n    //English\n    eo: 'Esperanto',\n    //Esperanto\n    es: 'Español',\n    //Spanish\n    et: 'Eesti',\n    //Estonian\n    eu: 'Euskara',\n    //Basque\n    ext: 'Estremeñu',\n    //Extremaduran\n    ff: 'Fulfulde',\n    //Peul\n    fi: 'Suomi',\n    //Finnish\n    'fiu-vro': 'Võro',\n    //Võro\n    fj: 'Na',\n    //Fijian\n    fo: 'Føroyskt',\n    //Faroese\n    fr: 'Français',\n    //French\n    frp: 'Arpitan',\n    //Arpitan\n    fur: 'Furlan',\n    //Friulian\n    fy: 'ltr',\n    //West\n    ga: 'Gaeilge',\n    //Irish\n    gan: 'ltr',\n    //Gan\n    gd: 'ltr',\n    //Scottish\n    gil: 'Taetae',\n    //Gilbertese\n    gl: 'Galego',\n    //Galician\n    gn: \"Avañe'ẽ\",\n    //Guarani\n    got: 'gutisk',\n    //Gothic\n    gu: 'ગુજરાતી',\n    //Gujarati\n    gv: 'Gaelg',\n    //Manx\n    ha: 'هَوُسَ',\n    //Hausa\n    hak: 'ltr',\n    //Hakka\n    haw: 'Hawai`i',\n    //Hawaiian\n    he: 'עברית',\n    //Hebrew\n    hi: 'हिन्दी',\n    //Hindi\n    ho: 'ltr',\n    //Hiri\n    hr: 'Hrvatski',\n    //Croatian\n    ht: 'Krèyol',\n    //Haitian\n    hu: 'Magyar',\n    //Hungarian\n    hy: 'Հայերեն',\n    //Armenian\n    hz: 'Otsiherero',\n    //Herero\n    ia: 'Interlingua',\n    //Interlingua\n    id: 'Bahasa',\n    //Indonesian\n    ie: 'Interlingue',\n    //Interlingue\n    ig: 'Igbo',\n    //Igbo\n    ii: 'ltr',\n    //Sichuan\n    ik: 'Iñupiak',\n    //Inupiak\n    ilo: 'Ilokano',\n    //Ilokano\n    io: 'Ido',\n    //Ido\n    is: 'Íslenska',\n    //Icelandic\n    it: 'Italiano',\n    //Italian\n    iu: 'ᐃᓄᒃᑎᑐᑦ',\n    //Inuktitut\n    ja: '日本語',\n    //Japanese\n    jbo: 'Lojban',\n    //Lojban\n    jv: 'Basa',\n    //Javanese\n    ka: 'ქართული',\n    //Georgian\n    kg: 'KiKongo',\n    //Kongo\n    ki: 'Gĩkũyũ',\n    //Kikuyu\n    kj: 'Kuanyama',\n    //Kuanyama\n    kk: 'Қазақша',\n    //Kazakh\n    kl: 'Kalaallisut',\n    //Greenlandic\n    km: 'ភាសាខ្មែរ',\n    //Cambodian\n    kn: 'ಕನ್ನಡ',\n    //Kannada\n    khw: 'کھوار',\n    //Khowar\n    ko: '한국어',\n    //Korean\n    kr: 'Kanuri',\n    //Kanuri\n    ks: 'कश्मीरी',\n    //Kashmiri\n    ksh: 'Ripoarisch',\n    //Ripuarian\n    ku: 'Kurdî',\n    //Kurdish\n    kv: 'Коми',\n    //Komi\n    kw: 'Kernewek',\n    //Cornish\n    ky: 'Kırgızca',\n    //Kirghiz\n    la: 'Latina',\n    //Latin\n    lad: 'Dzhudezmo',\n    //Ladino\n    lan: 'Leb',\n    //Lango\n    lb: 'Lëtzebuergesch',\n    //Luxembourgish\n    lg: 'Luganda',\n    //Ganda\n    li: 'Limburgs',\n    //Limburgian\n    lij: 'Líguru',\n    //Ligurian\n    lmo: 'Lumbaart',\n    //Lombard\n    ln: 'Lingála',\n    //Lingala\n    lo: 'ລາວ',\n    //Laotian\n    lt: 'Lietuvių',\n    //Lithuanian\n    lv: 'Latviešu',\n    //Latvian\n    'map-bms': 'Basa',\n    //Banyumasan\n    mg: 'Malagasy',\n    //Malagasy\n    man: '官話',\n    //Mandarin\n    mh: 'Kajin',\n    //Marshallese\n    mi: 'Māori',\n    //Maori\n    min: 'Minangkabau',\n    //Minangkabau\n    mk: 'Македонски',\n    //Macedonian\n    ml: 'മലയാളം',\n    //Malayalam\n    mn: 'Монгол',\n    //Mongolian\n    mo: 'Moldovenească',\n    //Moldovan\n    mr: 'मराठी',\n    //Marathi\n    ms: 'Bahasa',\n    //Malay\n    mt: 'bil-Malti',\n    //Maltese\n    mus: 'Muskogee',\n    //Creek\n    my: 'Myanmasa',\n    //Burmese\n    na: 'Dorerin',\n    //Nauruan\n    nah: 'Nahuatl',\n    //Nahuatl\n    nap: 'Nnapulitano',\n    //Neapolitan\n    nd: 'ltr',\n    //North\n    nds: 'Plattdüütsch',\n    //Low German\n    'nds-nl': 'Saxon',\n    //Dutch\n    ne: 'नेपाली',\n    //Nepali\n    new: 'नेपालभाषा',\n    //Newar\n    ng: 'Oshiwambo',\n    //Ndonga\n    nl: 'Nederlands',\n    //Dutch\n    nn: 'ltr',\n    //Norwegian\n    no: 'Norsk',\n    //Norwegian\n    nr: 'ltr',\n    //South\n    nso: 'ltr',\n    //Northern\n    nrm: 'Nouormand',\n    //Norman\n    nv: 'Diné',\n    //Navajo\n    ny: 'Chi-Chewa',\n    //Chichewa\n    oc: 'Occitan',\n    //Occitan\n    oj: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n    //Ojibwa\n    om: 'Oromoo',\n    //Oromo\n    or: 'ଓଡ଼ିଆ',\n    //Oriya\n    os: 'Иронау',\n    //Ossetian\n    pa: 'ਪੰਜਾਬੀ',\n    //Panjabi\n    pag: 'Pangasinan',\n    //Pangasinan\n    pam: 'Kapampangan',\n    //Kapampangan\n    pap: 'Papiamentu',\n    //Papiamentu\n    pdc: 'ltr',\n    //Pennsylvania\n    pi: 'Pāli',\n    //Pali\n    pih: 'Norfuk',\n    //Norfolk\n    pl: 'Polski',\n    //Polish\n    pms: 'Piemontèis',\n    //Piedmontese\n    ps: 'پښتو',\n    //Pashto\n    pt: 'Português',\n    //Portuguese\n    qu: 'Runa',\n    //Quechua\n    rm: 'ltr',\n    //Raeto\n    rmy: 'Romani',\n    //Romani\n    rn: 'Kirundi',\n    //Kirundi\n    ro: 'Română',\n    //Romanian\n    'roa-rup': 'Armâneashti',\n    //Aromanian\n    ru: 'Русский',\n    //Russian\n    rw: 'Kinyarwandi',\n    //Rwandi\n    sa: 'संस्कृतम्',\n    //Sanskrit\n    sc: 'Sardu',\n    //Sardinian\n    scn: 'Sicilianu',\n    //Sicilian\n    sco: 'Scots',\n    //Scots\n    sd: 'सिनधि',\n    //Sindhi\n    se: 'ltr',\n    //Northern\n    sg: 'Sängö',\n    //Sango\n    sh: 'Srpskohrvatski',\n    //Serbo-Croatian\n    si: 'සිංහල',\n    //Sinhalese\n    simple: 'ltr',\n    //Simple\n    sk: 'Slovenčina',\n    //Slovak\n    sl: 'Slovenščina',\n    //Slovenian\n    sm: 'Gagana',\n    //Samoan\n    sn: 'chiShona',\n    //Shona\n    so: 'Soomaaliga',\n    //Somalia\n    sq: 'Shqip',\n    //Albanian\n    sr: 'Српски',\n    //Serbian\n    ss: 'SiSwati',\n    //Swati\n    st: 'ltr',\n    //Southern\n    su: 'Basa',\n    //Sundanese\n    sv: 'Svenska',\n    //Swedish\n    sw: 'Kiswahili',\n    //Swahili\n    ta: 'தமிழ்',\n    //Tamil\n    te: 'తెలుగు',\n    //Telugu\n    tet: 'Tetun',\n    //Tetum\n    tg: 'Тоҷикӣ',\n    //Tajik\n    th: 'ไทย',\n    //Thai\n    ti: 'ትግርኛ',\n    //Tigrinya\n    tk: 'Туркмен',\n    //Turkmen\n    tl: 'Tagalog',\n    //Tagalog\n    tlh: 'tlhIngan-Hol',\n    //Klingon\n    tn: 'Setswana',\n    //Tswana\n    to: 'Lea',\n    //Tonga\n    tpi: 'ltr',\n    //Tok\n    tr: 'Türkçe',\n    //Turkish\n    ts: 'Xitsonga',\n    //Tsonga\n    tt: 'Tatarça',\n    //Tatar\n    tum: 'chiTumbuka',\n    //Tumbuka\n    tw: 'Twi',\n    //Twi\n    ty: 'Reo',\n    //Tahitian\n    udm: 'Удмурт',\n    //Udmurt\n    ug: 'Uyƣurqə',\n    //Uyghur\n    uk: 'Українська',\n    //Ukrainian\n    ur: 'اردو',\n    //Urdu\n    uz: 'Ўзбек',\n    //Uzbek\n    ve: 'Tshivenḓa',\n    //Venda\n    vi: 'Việtnam',\n    //Vietnamese\n    vec: 'Vèneto',\n    //Venetian\n    vls: 'ltr',\n    //West\n    vo: 'Volapük',\n    //Volapük\n    wa: 'Walon',\n    //Walloon\n    war: 'Winaray',\n    //Waray-Waray\n    wo: 'Wollof',\n    //Wolof\n    xal: 'Хальмг',\n    //Kalmyk\n    xh: 'isiXhosa',\n    //Xhosa\n    yi: 'ייִדיש',\n    //Yiddish\n    yo: 'Yorùbá',\n    //Yoruba\n    za: 'Cuengh',\n    //Zhuang\n    zh: '中文',\n    //Chinese\n    'zh-classical': 'ltr',\n    //Classical\n    'zh-min-nan': 'Bân-lâm-gú',\n    //Minnan\n    'zh-yue': '粵語',\n    //Cantonese\n    zu: 'isiZulu' //Zulu\n\n  };\n  languages$1.aa;\n  languages$1.ab;\n  languages$1.af;\n  languages$1.ak;\n  languages$1.als;\n  languages$1.am;\n  languages$1.an;\n  languages$1.ang;\n  languages$1.ar;\n  languages$1.arc;\n  languages$1.as;\n  languages$1.ast;\n  languages$1.av;\n  languages$1.ay;\n  languages$1.az;\n  languages$1.ba;\n  languages$1.bar;\n  languages$1.bcl;\n  languages$1.be;\n  languages$1.bg;\n  languages$1.bh;\n  languages$1.bi;\n  languages$1.bm;\n  languages$1.bn;\n  languages$1.bo;\n  languages$1.bpy;\n  languages$1.br;\n  languages$1.bs;\n  languages$1.bug;\n  languages$1.bxr;\n  languages$1.ca;\n  languages$1.cdo;\n  languages$1.ce;\n  languages$1.ceb;\n  languages$1.ch;\n  languages$1.cho;\n  languages$1.chr;\n  languages$1.chy;\n  languages$1.co;\n  languages$1.cr;\n  languages$1.cs;\n  languages$1.csb;\n  languages$1.cu;\n  languages$1.cv;\n  languages$1.cy;\n  languages$1.da;\n  languages$1.de;\n  languages$1.diq;\n  languages$1.dsb;\n  languages$1.dv;\n  languages$1.dz;\n  languages$1.ee;\n  languages$1.far;\n  languages$1.el;\n  languages$1.en;\n  languages$1.eo;\n  languages$1.es;\n  languages$1.et;\n  languages$1.eu;\n  languages$1.ext;\n  languages$1.ff;\n  languages$1.fi;\n  languages$1.fj;\n  languages$1.fo;\n  languages$1.fr;\n  languages$1.frp;\n  languages$1.fur;\n  languages$1.fy;\n  languages$1.ga;\n  languages$1.gan;\n  languages$1.gd;\n  languages$1.gil;\n  languages$1.gl;\n  languages$1.gn;\n  languages$1.got;\n  languages$1.gu;\n  languages$1.gv;\n  languages$1.ha;\n  languages$1.hak;\n  languages$1.haw;\n  languages$1.he;\n  languages$1.hi;\n  languages$1.ho;\n  languages$1.hr;\n  languages$1.ht;\n  languages$1.hu;\n  languages$1.hy;\n  languages$1.hz;\n  languages$1.ia;\n  languages$1.id;\n  languages$1.ie;\n  languages$1.ig;\n  languages$1.ii;\n  languages$1.ik;\n  languages$1.ilo;\n  languages$1.io;\n  languages$1.is;\n  languages$1.it;\n  languages$1.iu;\n  languages$1.ja;\n  languages$1.jbo;\n  languages$1.jv;\n  languages$1.ka;\n  languages$1.kg;\n  languages$1.ki;\n  languages$1.kj;\n  languages$1.kk;\n  languages$1.kl;\n  languages$1.km;\n  languages$1.kn;\n  languages$1.khw;\n  languages$1.ko;\n  languages$1.kr;\n  languages$1.ks;\n  languages$1.ksh;\n  languages$1.ku;\n  languages$1.kv;\n  languages$1.kw;\n  languages$1.ky;\n  languages$1.la;\n  languages$1.lad;\n  languages$1.lan;\n  languages$1.lb;\n  languages$1.lg;\n  languages$1.li;\n  languages$1.lij;\n  languages$1.lmo;\n  languages$1.ln;\n  languages$1.lo;\n  languages$1.lt;\n  languages$1.lv;\n  languages$1.mg;\n  languages$1.man;\n  languages$1.mh;\n  languages$1.mi;\n  languages$1.min;\n  languages$1.mk;\n  languages$1.ml;\n  languages$1.mn;\n  languages$1.mo;\n  languages$1.mr;\n  languages$1.ms;\n  languages$1.mt;\n  languages$1.mus;\n  languages$1.my;\n  languages$1.na;\n  languages$1.nah;\n  languages$1.nap;\n  languages$1.nd;\n  languages$1.nds;\n  languages$1.ne;\n  languages$1.ng;\n  languages$1.nl;\n  languages$1.nn;\n  languages$1.no;\n  languages$1.nr;\n  languages$1.nso;\n  languages$1.nrm;\n  languages$1.nv;\n  languages$1.ny;\n  languages$1.oc;\n  languages$1.oj;\n  languages$1.om;\n  languages$1.or;\n  languages$1.os;\n  languages$1.pa;\n  languages$1.pag;\n  languages$1.pam;\n  languages$1.pap;\n  languages$1.pdc;\n  languages$1.pi;\n  languages$1.pih;\n  languages$1.pl;\n  languages$1.pms;\n  languages$1.ps;\n  languages$1.pt;\n  languages$1.qu;\n  languages$1.rm;\n  languages$1.rmy;\n  languages$1.rn;\n  languages$1.ro;\n  languages$1.ru;\n  languages$1.rw;\n  languages$1.sa;\n  languages$1.sc;\n  languages$1.scn;\n  languages$1.sco;\n  languages$1.sd;\n  languages$1.se;\n  languages$1.sg;\n  languages$1.sh;\n  languages$1.si;\n  languages$1.simple;\n  languages$1.sk;\n  languages$1.sl;\n  languages$1.sm;\n  languages$1.sn;\n  languages$1.so;\n  languages$1.sq;\n  languages$1.sr;\n  languages$1.ss;\n  languages$1.st;\n  languages$1.su;\n  languages$1.sv;\n  languages$1.sw;\n  languages$1.ta;\n  languages$1.te;\n  languages$1.tet;\n  languages$1.tg;\n  languages$1.th;\n  languages$1.ti;\n  languages$1.tk;\n  languages$1.tl;\n  languages$1.tlh;\n  languages$1.tn;\n  languages$1.to;\n  languages$1.tpi;\n  languages$1.tr;\n  languages$1.ts;\n  languages$1.tt;\n  languages$1.tum;\n  languages$1.tw;\n  languages$1.ty;\n  languages$1.udm;\n  languages$1.ug;\n  languages$1.uk;\n  languages$1.ur;\n  languages$1.uz;\n  languages$1.ve;\n  languages$1.vi;\n  languages$1.vec;\n  languages$1.vls;\n  languages$1.vo;\n  languages$1.wa;\n  languages$1.war;\n  languages$1.wo;\n  languages$1.xal;\n  languages$1.xh;\n  languages$1.yi;\n  languages$1.yo;\n  languages$1.za;\n  languages$1.zh;\n  languages$1.zu;\n\n  const wp = '.wikipedia.org/wiki/$1';\n  const wm = '.wikimedia.org/wiki/$1';\n  const w = 'www.';\n  var interwiki$1 = {\n    acronym: w + 'acronymfinder.com/$1.html',\n    advisory: 'advisory' + wm,\n    advogato: w + 'advogato.org/$1',\n    aew: 'wiki.arabeyes.org/$1',\n    appropedia: w + 'appropedia.org/$1',\n    aquariumwiki: w + 'theaquariumwiki.com/$1',\n    arborwiki: 'localwiki.org/ann-arbor/$1',\n    arxiv: 'arxiv.org/abs/$1',\n    atmwiki: w + 'otterstedt.de/wiki/index.php/$1',\n    baden: w + 'stadtwiki-baden-baden.de/wiki/$1/',\n    battlestarwiki: 'en.battlestarwiki.org/wiki/$1',\n    bcnbio: 'historiapolitica.bcn.cl/resenas_parlamentarias/wiki/$1',\n    beacha: w + 'beachapedia.org/$1',\n    betawiki: 'translatewiki.net/wiki/$1',\n    bibcode: 'adsabs.harvard.edu/abs/$1',\n    bibliowiki: 'wikilivres.org/wiki/$1',\n    bluwiki: 'bluwiki.com/go/$1',\n    blw: 'britainloves' + wp,\n    botwiki: 'botwiki.sno.cc/wiki/$1',\n    boxrec: w + 'boxrec.com/media/index.php?$1',\n    brickwiki: w + 'brickwiki.info/wiki/$1',\n    bugzilla: 'bugzilla.wikimedia.org/show_bug.cgi?id=$1',\n    bulba: 'bulbapedia.bulbagarden.net/wiki/$1',\n    c: 'commons' + wm,\n    c2: 'c2.com/cgi/wiki?$1',\n    c2find: 'c2.com/cgi/wiki?FindPage&value=$1',\n    cache: w + 'google.com/search?q=cache:$1',\n    ĉej: 'esperanto.blahus.cz/cxej/vikio/index.php/$1',\n    cellwiki: 'cell.wikia.com/wiki/$1',\n    centralwikia: 'community.wikia.com/wiki/$1',\n    chej: 'esperanto.blahus.cz/cxej/vikio/index.php/$1',\n    choralwiki: w + 'cpdl.org/wiki/index.php/$1',\n    citizendium: 'en.citizendium.org/wiki/$1',\n    ckwiss: w + 'ck-wissen.de/ckwiki/index.php?title=$1',\n    comixpedia: w + 'comixpedia.org/index.php?title=$1',\n    commons: 'commons' + wm,\n    communityscheme: 'community.schemewiki.org/?c=s&key=$1',\n    communitywiki: 'communitywiki.org/$1',\n    comune: 'rete.comuni-italiani.it/wiki/$1',\n    creativecommons: 'creativecommons.org/licenses/$1',\n    creativecommonswiki: 'wiki.creativecommons.org/$1',\n    cxej: 'esperanto.blahus.cz/cxej/vikio/index.php/$1',\n    dcc: w + 'dccwiki.com/$1',\n    dcdatabase: 'dc.wikia.com/$1',\n    dcma: 'christian-morgenstern.de/dcma/index.php?title=$1',\n    debian: 'wiki.debian.org/$1',\n    delicious: w + 'delicious.com/tag/$1',\n    devmo: 'developer.mozilla.org/en/docs/$1',\n    dictionary: w + 'dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=$1',\n    dict: w + 'dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=$1',\n    disinfopedia: 'sourcewatch.org/index.php/$1',\n    distributedproofreaders: w + 'pgdp.net/wiki/$1',\n    distributedproofreadersca: w + 'pgdpcanada.net/wiki/index.php/$1',\n    dmoz: 'curlie.org/$1',\n    dmozs: 'curlie.org/search?q=$1',\n    doi: 'doi.org/$1',\n    donate: 'donate' + wm,\n    doom_wiki: 'doom.wikia.com/wiki/$1',\n    download: 'releases.wikimedia.org/$1',\n    dbdump: 'dumps.wikimedia.org/$1/latest/',\n    dpd: 'lema.rae.es/dpd/?key=$1',\n    drae: 'dle.rae.es/?w=$1',\n    dreamhost: 'wiki.dreamhost.com/index.php/$1',\n    drumcorpswiki: w + 'drumcorpswiki.com/index.php/$1',\n    dwjwiki: w + 'suberic.net/cgi-bin/dwj/wiki.cgi?$1',\n    eĉei: w + 'ikso.net/cgi-bin/wiki.pl?$1',\n    ecoreality: w + 'EcoReality.org/wiki/$1',\n    ecxei: w + 'ikso.net/cgi-bin/wiki.pl?$1',\n    elibre: 'enciclopedia.us.es/index.php/$1',\n    emacswiki: w + 'emacswiki.org/emacs?$1',\n    encyc: 'encyc.org/wiki/$1',\n    energiewiki: w + 'netzwerk-energieberater.de/wiki/index.php/$1',\n    englyphwiki: 'en.glyphwiki.org/wiki/$1',\n    enkol: 'enkol.pl/$1',\n    eokulturcentro: 'esperanto.toulouse.free.fr/nova/wikini/wakka.php?wiki=$1',\n    esolang: 'esolangs.org/wiki/$1',\n    etherpad: 'etherpad.wikimedia.org/$1',\n    ethnologue: w + 'ethnologue.com/language/$1',\n    ethnologuefamily: w + 'ethnologue.com/show_family.asp?subid=$1',\n    evowiki: 'wiki.cotch.net/index.php/$1',\n    exotica: w + 'exotica.org.uk/wiki/$1',\n    fanimutationwiki: 'wiki.animutationportal.com/index.php/$1',\n    fedora: 'fedoraproject.org/wiki/$1',\n    finalfantasy: 'finalfantasy.wikia.com/wiki/$1',\n    finnix: w + 'finnix.org/$1',\n    flickruser: w + 'flickr.com/people/$1',\n    flickrphoto: w + 'flickr.com/photo.gne?id=$1',\n    floralwiki: w + 'floralwiki.co.uk/wiki/$1',\n    foldoc: 'foldoc.org/$1',\n    foundation: 'foundation' + wm,\n    foundationsite: 'wikimediafoundation.org/$1',\n    foxwiki: 'fox.wikis.com/wc.dll?Wiki~$1',\n    freebio: 'freebiology.org/wiki/$1',\n    freebsdman: w + 'FreeBSD.org/cgi/man.cgi?apropos=1&query=$1',\n    freeculturewiki: 'wiki.freeculture.org/index.php/$1',\n    freedomdefined: 'freedomdefined.org/$1',\n    freefeel: 'freefeel.org/wiki/$1',\n    freekiwiki: 'wiki.freegeek.org/index.php/$1',\n    // freenode: 'irc://irc.freenode.net/$1',\n    freesoft: 'directory.fsf.org/wiki/$1',\n    ganfyd: 'ganfyd.org/index.php?title=$1',\n    gardenology: w + 'gardenology.org/wiki/$1',\n    gausswiki: 'gauss.ffii.org/$1',\n    gentoo: 'wiki.gentoo.org/wiki/$1',\n    genwiki: 'wiki.genealogy.net/index.php/$1',\n    gerrit: 'gerrit.wikimedia.org/r/$1',\n    git: 'gerrit.wikimedia.org/g/$1',\n    google: w + 'google.com/search?q=$1',\n    googledefine: w + 'google.com/search?q=define:$1',\n    googlegroups: 'groups.google.com/groups?q=$1',\n    guildwarswiki: 'wiki.guildwars.com/wiki/$1',\n    guildwiki: 'guildwars.wikia.com/wiki/$1',\n    guc: 'tools.wmflabs.org/guc/?user=$1',\n    gucprefix: 'tools.wmflabs.org/guc/?isPrefixPattern=1&src=rc&user=$1',\n    gutenberg: w + 'gutenberg.org/etext/$1',\n    gutenbergwiki: w + 'gutenberg.org/wiki/$1',\n    hackerspaces: 'hackerspaces.org/wiki/$1',\n    h2wiki: 'halowiki.net/p/$1',\n    hammondwiki: w + 'dairiki.org/HammondWiki/index.php3?$1',\n    hdl: 'hdl.handle.net/$1',\n    heraldik: 'heraldik-wiki.de/wiki/$1',\n    heroeswiki: 'heroeswiki.com/$1',\n    horizonlabs: 'horizon.wikimedia.org/$1',\n    hrwiki: w + 'hrwiki.org/index.php/$1',\n    hrfwiki: 'fanstuff.hrwiki.org/index.php/$1',\n    hupwiki: 'wiki.hup.hu/index.php/$1',\n    iarchive: 'archive.org/details/$1',\n    imdbname: w + 'imdb.com/name/nm$1/',\n    imdbtitle: w + 'imdb.com/title/tt$1/',\n    imdbcompany: w + 'imdb.com/company/co$1/',\n    imdbcharacter: w + 'imdb.com/character/ch$1/',\n    incubator: 'incubator' + wm,\n    infosecpedia: 'infosecpedia.org/wiki/$1',\n    infosphere: 'theinfosphere.org/$1',\n    // irc: 'irc://irc.freenode.net/$1',\n    // ircs: 'ircs://irc.freenode.net/$1',\n    // ircrc: 'irc://irc.wikimedia.org/$1',\n    // rcirc: 'irc://irc.wikimedia.org/$1',\n    'iso639-3': 'iso639-3.sil.org/code/$1',\n    issn: w + 'worldcat.org/issn/$1',\n    iuridictum: 'iuridictum.pecina.cz/w/$1',\n    jaglyphwiki: 'glyphwiki.org/wiki/$1',\n    jefo: 'esperanto-jeunes.org/wiki/$1',\n    jerseydatabase: 'jerseydatabase.com/wiki.php?id=$1',\n    jira: 'jira.toolserver.org/browse/$1',\n    jspwiki: w + 'ecyrd.com/JSPWiki/Wiki.jsp?page=$1',\n    jstor: w + 'jstor.org/journals/$1',\n    kamelo: 'kamelopedia.mormo.org/index.php/$1',\n    karlsruhe: 'ka.stadtwiki.net/$1',\n    kinowiki: 'kino.skripov.com/index.php/$1',\n    komicawiki: 'wiki.komica.org/?$1',\n    kontuwiki: 'kontu.wiki/$1',\n    wikitech: 'wikitech' + wm,\n    libreplanet: 'libreplanet.org/wiki/$1',\n    linguistlist: 'linguistlist.org/forms/langs/LLDescription.cfm?code=$1',\n    linuxwiki: w + 'linuxwiki.de/$1',\n    linuxwikide: w + 'linuxwiki.de/$1',\n    liswiki: 'liswiki.org/wiki/$1',\n    literateprograms: 'en.literateprograms.org/$1',\n    livepedia: w + 'livepedia.gr/index.php?title=$1',\n    localwiki: 'localwiki.org/$1',\n    lojban: 'mw.lojban.org/papri/$1',\n    lostpedia: 'lostpedia.wikia.com/wiki/$1',\n    lqwiki: 'wiki.linuxquestions.org/wiki/$1',\n    luxo: 'tools.wmflabs.org/guc/?user=$1',\n    mail: 'lists.wikimedia.org/mailman/listinfo/$1',\n    mailarchive: 'lists.wikimedia.org/pipermail/$1',\n    mariowiki: w + 'mariowiki.com/$1',\n    marveldatabase: w + 'marveldatabase.com/wiki/index.php/$1',\n    meatball: 'meatballwiki.org/wiki/$1',\n    mw: w + 'mediawiki.org/wiki/$1',\n    mediazilla: 'bugzilla.wikimedia.org/$1',\n    memoryalpha: 'memory-alpha.fandom.com/wiki/$1',\n    metawiki: 'meta' + wm,\n    metawikimedia: 'meta' + wm,\n    metawikipedia: 'meta' + wm,\n    mineralienatlas: w + 'mineralienatlas.de/lexikon/index.php/$1',\n    moinmoin: 'moinmo.in/$1',\n    monstropedia: w + 'monstropedia.org/?title=$1',\n    mosapedia: 'mosapedia.de/wiki/index.php/$1',\n    mozcom: 'mozilla.wikia.com/wiki/$1',\n    mozillawiki: 'wiki.mozilla.org/$1',\n    mozillazinekb: 'kb.mozillazine.org/$1',\n    musicbrainz: 'musicbrainz.org/doc/$1',\n    mediawikiwiki: w + 'mediawiki.org/wiki/$1',\n    mwod: w + 'merriam-webster.com/dictionary/$1',\n    mwot: w + 'merriam-webster.com/thesaurus/$1',\n    nkcells: w + 'nkcells.info/index.php?title=$1',\n    nara: 'catalog.archives.gov/id/$1',\n    nosmoke: 'no-smok.net/nsmk/$1',\n    nost: 'nostalgia.' + wp,\n    nostalgia: 'nostalgia.' + wp,\n    oeis: 'oeis.org/$1',\n    oldwikisource: 'wikisource.org/wiki/$1',\n    olpc: 'wiki.laptop.org/go/$1',\n    omegawiki: w + 'omegawiki.org/Expression:$1',\n    onelook: w + 'onelook.com/?ls=b&w=$1',\n    openlibrary: 'openlibrary.org/$1',\n    openstreetmap: 'wiki.openstreetmap.org/wiki/$1',\n    openwetware: 'openwetware.org/wiki/$1',\n    opera7wiki: 'operawiki.info/$1',\n    organicdesign: w + 'organicdesign.co.nz/$1',\n    orthodoxwiki: 'orthodoxwiki.org/$1',\n    osmwiki: 'wiki.openstreetmap.org/wiki/$1',\n    otrs: 'ticket.wikimedia.org/otrs/index.pl?Action=AgentTicketZoom&TicketID=$1',\n    otrswiki: 'otrs-wiki' + wm,\n    ourmedia: w + 'socialtext.net/ourmedia/index.cgi?$1',\n    outreach: 'outreach' + wm,\n    outreachwiki: 'outreach' + wm,\n    owasp: w + 'owasp.org/index.php/$1',\n    panawiki: 'wiki.alairelibre.net/index.php?title=$1',\n    patwiki: 'gauss.ffii.org/$1',\n    personaltelco: 'personaltelco.net/wiki/$1',\n    petscan: 'petscan.wmflabs.org/?psid=$1',\n    phab: 'phabricator.wikimedia.org/$1',\n    phabricator: 'phabricator.wikimedia.org/$1',\n    phwiki: w + 'pocketheaven.com/ph/wiki/index.php?title=$1',\n    phpwiki: 'phpwiki.sourceforge.net/phpwiki/index.php?$1',\n    planetmath: 'planetmath.org/node/$1',\n    pmeg: w + 'bertilow.com/pmeg/$1',\n    pmid: w + 'ncbi.nlm.nih.gov/pubmed/$1?dopt=Abstract',\n    pokewiki: 'pokewiki.de/$1',\n    pokéwiki: 'pokewiki.de/$1',\n    policy: 'policy.wikimedia.org/$1',\n    proofwiki: w + 'proofwiki.org/wiki/$1',\n    pyrev: w + 'mediawiki.org/wiki/Special:Code/pywikipedia/$1',\n    pythoninfo: 'wiki.python.org/moin/$1',\n    pythonwiki: w + 'pythonwiki.de/$1',\n    pywiki: 'c2.com/cgi/wiki?$1',\n    psycle: 'psycle.sourceforge.net/wiki/$1',\n    quality: 'quality' + wm,\n    quarry: 'quarry.wmflabs.org/$1',\n    regiowiki: 'regiowiki.at/wiki/$1',\n    rev: w + 'mediawiki.org/wiki/Special:Code/MediaWiki/$1',\n    revo: 'purl.org/NET/voko/revo/art/$1.html',\n    rfc: 'tools.ietf.org/html/rfc$1',\n    rheinneckar: 'rhein-neckar-wiki.de/$1',\n    robowiki: 'robowiki.net/?$1',\n    rodovid: 'en.rodovid.org/wk/$1',\n    reuterswiki: 'glossary.reuters.com/index.php/$1',\n    rowiki: 'wiki.rennkuckuck.de/index.php/$1',\n    rt: 'rt.wikimedia.org/Ticket/Display.html?id=$1',\n    // rtfm: 'ftp://rtfm.mit.edu/pub/faqs/$1',\n    s23wiki: 's23.org/wiki/$1',\n    scholar: 'scholar.google.com/scholar?q=$1',\n    schoolswp: 'schools-' + wp,\n    scores: 'imslp.org/wiki/$1',\n    scoutwiki: 'en.scoutwiki.org/$1',\n    scramble: w + 'scramble.nl/wiki/index.php?title=$1',\n    seapig: w + 'seapig.org/$1',\n    seattlewiki: 'seattle.wikia.com/wiki/$1',\n    slwiki: 'wiki.secondlife.com/wiki/$1',\n    'semantic-mw': w + 'semantic-mediawiki.org/wiki/$1',\n    senseislibrary: 'senseis.xmp.net/?$1',\n    sharemap: 'sharemap.org/$1',\n    silcode: w + 'sil.org/iso639-3/documentation.asp?id=$1',\n    slashdot: 'slashdot.org/article.pl?sid=$1',\n    sourceforge: 'sourceforge.net/$1',\n    spcom: 'spcom' + wm,\n    species: 'species' + wm,\n    squeak: 'wiki.squeak.org/squeak/$1',\n    stats: 'stats.wikimedia.org/$1',\n    stewardry: 'tools.wmflabs.org/meta/stewardry/?wiki=$1',\n    strategy: 'strategy' + wm,\n    strategywiki: 'strategywiki.org/wiki/$1',\n    sulutil: 'meta.wikimedia.org/wiki/Special:CentralAuth/$1',\n    swtrain: 'train.spottingworld.com/$1',\n    svn: 'svn.wikimedia.org/viewvc/mediawiki/$1?view=log',\n    swinbrain: 'swinbrain.ict.swin.edu.au/wiki/$1',\n    tabwiki: w + 'tabwiki.com/index.php/$1',\n    tclerswiki: 'wiki.tcl.tk/$1',\n    technorati: w + 'technorati.com/search/$1',\n    tenwiki: 'ten.' + wp,\n    testwiki: 'test.' + wp,\n    testwikidata: 'test.wikidata.org/wiki/$1',\n    test2wiki: 'test2.' + wp,\n    tfwiki: 'tfwiki.net/wiki/$1',\n    thelemapedia: w + 'thelemapedia.org/index.php/$1',\n    theopedia: w + 'theopedia.com/$1',\n    thinkwiki: w + 'thinkwiki.org/wiki/$1',\n    ticket: 'ticket.wikimedia.org/otrs/index.pl?Action=AgentTicketZoom&TicketNumber=$1',\n    tmbw: 'tmbw.net/wiki/$1',\n    tmnet: w + 'technomanifestos.net/?$1',\n    tmwiki: w + 'EasyTopicMaps.com/?page=$1',\n    toolforge: 'tools.wmflabs.org/$1',\n    toollabs: 'tools.wmflabs.org/$1',\n    tools: 'toolserver.org/$1',\n    tswiki: w + 'mediawiki.org/wiki/Toolserver:$1',\n    translatewiki: 'translatewiki.net/wiki/$1',\n    tviv: 'tviv.org/wiki/$1',\n    tvtropes: w + 'tvtropes.org/pmwiki/pmwiki.php/Main/$1',\n    twiki: 'twiki.org/cgi-bin/view/$1',\n    tyvawiki: w + 'tyvawiki.org/wiki/$1',\n    umap: 'umap.openstreetmap.fr/$1',\n    uncyclopedia: 'en.uncyclopedia.co/wiki/$1',\n    unihan: w + 'unicode.org/cgi-bin/GetUnihanData.pl?codepoint=$1',\n    unreal: 'wiki.beyondunreal.com/wiki/$1',\n    urbandict: w + 'urbandictionary.com/define.php?term=$1',\n    usej: w + 'tejo.org/usej/$1',\n    usemod: w + 'usemod.com/cgi-bin/wiki.pl?$1',\n    usability: 'usability' + wm,\n    utrs: 'utrs.wmflabs.org/appeal.php?id=$1',\n    vikidia: 'fr.vikidia.org/wiki/$1',\n    vlos: 'tusach.thuvienkhoahoc.com/wiki/$1',\n    vkol: 'kol.coldfront.net/thekolwiki/index.php/$1',\n    voipinfo: w + 'voip-info.org/wiki/view/$1',\n    votewiki: 'vote' + wm,\n    werelate: w + 'werelate.org/wiki/$1',\n    wg: 'wg-en.' + wp,\n    wikia: w + 'wikia.com/wiki/w:c:$1',\n    wikiasite: w + 'wikia.com/wiki/w:c:$1',\n    wikiapiary: 'wikiapiary.com/wiki/$1',\n    wikibooks: 'en.wikibooks.org/wiki/$1',\n    wikichristian: w + 'wikichristian.org/index.php?title=$1',\n    wikicities: w + 'wikia.com/wiki/w:$1',\n    wikicity: w + 'wikia.com/wiki/w:c:$1',\n    wikiconference: 'wikiconference.org/wiki/$1',\n    wikidata: w + 'wikidata.org/wiki/$1',\n    wikif1: w + 'wikif1.org/$1',\n    wikifur: 'en.wikifur.com/wiki/$1',\n    wikihow: w + 'wikihow.com/$1',\n    wikiindex: 'wikiindex.org/$1',\n    wikilemon: 'wiki.illemonati.com/$1',\n    wikilivres: 'wikilivres.org/wiki/$1',\n    wikilivresru: 'wikilivres.ru/$1',\n    'wikimac-de': 'apfelwiki.de/wiki/Main/$1',\n    wikimedia: 'foundation' + wm,\n    wikinews: 'en.wikinews.org/wiki/$1',\n    wikinfo: 'wikinfo.org/w/index.php/$1',\n    wikinvest: 'meta.wikimedia.org/wiki/Interwiki_map/discontinued#Wikinvest',\n    wikiotics: 'wikiotics.org/$1',\n    wikipapers: 'wikipapers.referata.com/wiki/$1',\n    wikipedia: 'en.' + wp,\n    wikipediawikipedia: 'en.wikipedia.org/wiki/Wikipedia:$1',\n    wikiquote: 'en.wikiquote.org/wiki/$1',\n    wikisophia: 'wikisophia.org/index.php?title=$1',\n    wikisource: 'en.wikisource.org/wiki/$1',\n    wikispecies: 'species' + wm,\n    wikispot: 'wikispot.org/?action=gotowikipage&v=$1',\n    wikiskripta: w + 'wikiskripta.eu/index.php/$1',\n    labsconsole: 'wikitech' + wm,\n    wikiti: 'wikiti.denglend.net/index.php?title=$1',\n    wikiversity: 'en.wikiversity.org/wiki/$1',\n    wikivoyage: 'en.wikivoyage.org/wiki/$1',\n    betawikiversity: 'beta.wikiversity.org/wiki/$1',\n    wikiwikiweb: 'c2.com/cgi/wiki?$1',\n    wiktionary: 'en.wiktionary.org/wiki/$1',\n    wipipedia: 'wipipedia.org/index.php/$1',\n    wlug: w + 'wlug.org.nz/$1',\n    wmam: 'am' + wm,\n    wmar: w + 'wikimedia.org.ar/wiki/$1',\n    wmat: 'mitglieder.wikimedia.at/$1',\n    wmau: 'wikimedia.org.au/wiki/$1',\n    wmbd: 'bd' + wm,\n    wmbe: 'be' + wm,\n    wmbr: 'br' + wm,\n    wmca: 'ca' + wm,\n    wmch: w + 'wikimedia.ch/$1',\n    wmcl: w + 'wikimediachile.cl/index.php?title=$1',\n    wmcn: 'cn' + wm,\n    wmco: 'co' + wm,\n    wmcz: w + 'wikimedia.cz/web/$1',\n    wmdc: 'wikimediadc.org/wiki/$1',\n    securewikidc: 'secure.wikidc.org/$1',\n    wmde: 'wikimedia.de/wiki/$1',\n    wmdk: 'dk' + wm,\n    wmee: 'ee' + wm,\n    wmec: 'ec' + wm,\n    wmes: w + 'wikimedia.es/wiki/$1',\n    wmet: 'ee' + wm,\n    wmfdashboard: 'outreachdashboard.wmflabs.org/$1',\n    wmfi: 'fi' + wm,\n    wmfr: 'wikimedia.fr/$1',\n    wmge: 'ge' + wm,\n    wmhi: 'hi' + wm,\n    wmhk: 'meta.wikimedia.org/wiki/Wikimedia_Hong_Kong',\n    wmhu: 'wikimedia.hu/wiki/$1',\n    wmid: 'id' + wm,\n    wmil: w + 'wikimedia.org.il/$1',\n    wmin: 'wiki.wikimedia.in/$1',\n    wmit: 'wiki.wikimedia.it/wiki/$1',\n    wmke: 'meta.wikimedia.org/wiki/Wikimedia_Kenya',\n    wmmk: 'mk' + wm,\n    wmmx: 'mx' + wm,\n    wmnl: 'nl' + wm,\n    wmnyc: 'nyc' + wm,\n    wmno: 'no' + wm,\n    'wmpa-us': 'pa-us' + wm,\n    wmph: 'meta.wikimedia.org/wiki/Wikimedia_Philippines',\n    wmpl: 'pl' + wm,\n    wmpt: 'pt' + wm,\n    wmpunjabi: 'punjabi' + wm,\n    wmromd: 'romd' + wm,\n    wmrs: 'rs' + wm,\n    wmru: 'ru' + wm,\n    wmse: 'se' + wm,\n    wmsk: 'wikimedia.sk/$1',\n    wmtr: 'tr' + wm,\n    wmtw: 'wikimedia.tw/wiki/index.php5/$1',\n    wmua: 'ua' + wm,\n    wmuk: 'wikimedia.org.uk/wiki/$1',\n    wmve: 'wikimedia.org.ve/wiki/$1',\n    wmza: 'wikimedia.org.za/wiki/$1',\n    wm2005: 'wikimania2005' + wm,\n    wm2006: 'wikimania2006' + wm,\n    wm2007: 'wikimania2007' + wm,\n    wm2008: 'wikimania2008' + wm,\n    wm2009: 'wikimania2009' + wm,\n    wm2010: 'wikimania2010' + wm,\n    wm2011: 'wikimania2011' + wm,\n    wm2012: 'wikimania2012' + wm,\n    wm2013: 'wikimania2013' + wm,\n    wm2014: 'wikimania2014' + wm,\n    wm2015: 'wikimania2015' + wm,\n    wm2016: 'wikimania2016' + wm,\n    wm2017: 'wikimania2017' + wm,\n    wm2018: 'wikimania2018' + wm,\n    wmania: 'wikimania' + wm,\n    wikimania: 'wikimania' + wm,\n    wmteam: 'wikimaniateam' + wm,\n    wmf: 'foundation' + wm,\n    wmfblog: 'blog.wikimedia.org/$1',\n    wmdeblog: 'blog.wikimedia.de/$1',\n    wookieepedia: 'starwars.wikia.com/wiki/$1',\n    wowwiki: w + 'wowwiki.com/$1',\n    wqy: 'wqy.sourceforge.net/cgi-bin/index.cgi?$1',\n    wurmpedia: 'wurmpedia.com/index.php/$1',\n    viaf: 'viaf.org/viaf/$1',\n    zrhwiki: w + 'zrhwiki.ch/wiki/$1',\n    zum: 'wiki.zum.de/$1',\n    zwiki: w + 'zwiki.org/$1',\n    m: 'meta' + wm,\n    meta: 'meta' + wm,\n    sep11: 'sep11.' + wp,\n    d: w + 'wikidata.org/wiki/$1',\n    minnan: 'zh-min-nan.' + wp,\n    nb: 'no.' + wp,\n    'zh-cfr': 'zh-min-nan.' + wp,\n    'zh-cn': 'zh.' + wp,\n    'zh-tw': 'zh.' + wp,\n    nan: 'zh-min-nan.' + wp,\n    vro: 'fiu-vro.' + wp,\n    cmn: 'zh.' + wp,\n    lzh: 'zh-classical.' + wp,\n    rup: 'roa-rup.' + wp,\n    gsw: 'als.' + wp,\n    'be-tarask': 'be-x-old.' + wp,\n    sgs: 'bat-smg.' + wp,\n    egl: 'eml.' + wp,\n    w: 'en.' + wp,\n    wikt: 'en.wiktionary.org/wiki/$1',\n    q: 'en.wikiquote.org/wiki/$1',\n    b: 'en.wikibooks.org/wiki/$1',\n    n: 'en.wikinews.org/wiki/$1',\n    s: 'en.wikisource.org/wiki/$1',\n    chapter: 'en' + wm,\n    v: 'en.wikiversity.org/wiki/$1',\n    voy: 'en.wikivoyage.org/wiki/$1'\n  };\n  interwiki$1.acronym;\n  interwiki$1.advisory;\n  interwiki$1.advogato;\n  interwiki$1.aew;\n  interwiki$1.appropedia;\n  interwiki$1.aquariumwiki;\n  interwiki$1.arborwiki;\n  interwiki$1.arxiv;\n  interwiki$1.atmwiki;\n  interwiki$1.baden;\n  interwiki$1.battlestarwiki;\n  interwiki$1.bcnbio;\n  interwiki$1.beacha;\n  interwiki$1.betawiki;\n  interwiki$1.bibcode;\n  interwiki$1.bibliowiki;\n  interwiki$1.bluwiki;\n  interwiki$1.blw;\n  interwiki$1.botwiki;\n  interwiki$1.boxrec;\n  interwiki$1.brickwiki;\n  interwiki$1.bugzilla;\n  interwiki$1.bulba;\n  interwiki$1.c;\n  interwiki$1.c2;\n  interwiki$1.c2find;\n  interwiki$1.cache;\n  interwiki$1.cellwiki;\n  interwiki$1.centralwikia;\n  interwiki$1.chej;\n  interwiki$1.choralwiki;\n  interwiki$1.citizendium;\n  interwiki$1.ckwiss;\n  interwiki$1.comixpedia;\n  interwiki$1.commons;\n  interwiki$1.communityscheme;\n  interwiki$1.communitywiki;\n  interwiki$1.comune;\n  interwiki$1.creativecommons;\n  interwiki$1.creativecommonswiki;\n  interwiki$1.cxej;\n  interwiki$1.dcc;\n  interwiki$1.dcdatabase;\n  interwiki$1.dcma;\n  interwiki$1.debian;\n  interwiki$1.delicious;\n  interwiki$1.devmo;\n  interwiki$1.dictionary;\n  interwiki$1.dict;\n  interwiki$1.disinfopedia;\n  interwiki$1.distributedproofreaders;\n  interwiki$1.distributedproofreadersca;\n  interwiki$1.dmoz;\n  interwiki$1.dmozs;\n  interwiki$1.doi;\n  interwiki$1.donate;\n  interwiki$1.doom_wiki;\n  interwiki$1.download;\n  interwiki$1.dbdump;\n  interwiki$1.dpd;\n  interwiki$1.drae;\n  interwiki$1.dreamhost;\n  interwiki$1.drumcorpswiki;\n  interwiki$1.dwjwiki;\n  interwiki$1.ecoreality;\n  interwiki$1.ecxei;\n  interwiki$1.elibre;\n  interwiki$1.emacswiki;\n  interwiki$1.encyc;\n  interwiki$1.energiewiki;\n  interwiki$1.englyphwiki;\n  interwiki$1.enkol;\n  interwiki$1.eokulturcentro;\n  interwiki$1.esolang;\n  interwiki$1.etherpad;\n  interwiki$1.ethnologue;\n  interwiki$1.ethnologuefamily;\n  interwiki$1.evowiki;\n  interwiki$1.exotica;\n  interwiki$1.fanimutationwiki;\n  interwiki$1.fedora;\n  interwiki$1.finalfantasy;\n  interwiki$1.finnix;\n  interwiki$1.flickruser;\n  interwiki$1.flickrphoto;\n  interwiki$1.floralwiki;\n  interwiki$1.foldoc;\n  interwiki$1.foundation;\n  interwiki$1.foundationsite;\n  interwiki$1.foxwiki;\n  interwiki$1.freebio;\n  interwiki$1.freebsdman;\n  interwiki$1.freeculturewiki;\n  interwiki$1.freedomdefined;\n  interwiki$1.freefeel;\n  interwiki$1.freekiwiki;\n  interwiki$1.freesoft;\n  interwiki$1.ganfyd;\n  interwiki$1.gardenology;\n  interwiki$1.gausswiki;\n  interwiki$1.gentoo;\n  interwiki$1.genwiki;\n  interwiki$1.gerrit;\n  interwiki$1.git;\n  interwiki$1.google;\n  interwiki$1.googledefine;\n  interwiki$1.googlegroups;\n  interwiki$1.guildwarswiki;\n  interwiki$1.guildwiki;\n  interwiki$1.guc;\n  interwiki$1.gucprefix;\n  interwiki$1.gutenberg;\n  interwiki$1.gutenbergwiki;\n  interwiki$1.hackerspaces;\n  interwiki$1.h2wiki;\n  interwiki$1.hammondwiki;\n  interwiki$1.hdl;\n  interwiki$1.heraldik;\n  interwiki$1.heroeswiki;\n  interwiki$1.horizonlabs;\n  interwiki$1.hrwiki;\n  interwiki$1.hrfwiki;\n  interwiki$1.hupwiki;\n  interwiki$1.iarchive;\n  interwiki$1.imdbname;\n  interwiki$1.imdbtitle;\n  interwiki$1.imdbcompany;\n  interwiki$1.imdbcharacter;\n  interwiki$1.incubator;\n  interwiki$1.infosecpedia;\n  interwiki$1.infosphere;\n  interwiki$1.issn;\n  interwiki$1.iuridictum;\n  interwiki$1.jaglyphwiki;\n  interwiki$1.jefo;\n  interwiki$1.jerseydatabase;\n  interwiki$1.jira;\n  interwiki$1.jspwiki;\n  interwiki$1.jstor;\n  interwiki$1.kamelo;\n  interwiki$1.karlsruhe;\n  interwiki$1.kinowiki;\n  interwiki$1.komicawiki;\n  interwiki$1.kontuwiki;\n  interwiki$1.wikitech;\n  interwiki$1.libreplanet;\n  interwiki$1.linguistlist;\n  interwiki$1.linuxwiki;\n  interwiki$1.linuxwikide;\n  interwiki$1.liswiki;\n  interwiki$1.literateprograms;\n  interwiki$1.livepedia;\n  interwiki$1.localwiki;\n  interwiki$1.lojban;\n  interwiki$1.lostpedia;\n  interwiki$1.lqwiki;\n  interwiki$1.luxo;\n  interwiki$1.mail;\n  interwiki$1.mailarchive;\n  interwiki$1.mariowiki;\n  interwiki$1.marveldatabase;\n  interwiki$1.meatball;\n  interwiki$1.mw;\n  interwiki$1.mediazilla;\n  interwiki$1.memoryalpha;\n  interwiki$1.metawiki;\n  interwiki$1.metawikimedia;\n  interwiki$1.metawikipedia;\n  interwiki$1.mineralienatlas;\n  interwiki$1.moinmoin;\n  interwiki$1.monstropedia;\n  interwiki$1.mosapedia;\n  interwiki$1.mozcom;\n  interwiki$1.mozillawiki;\n  interwiki$1.mozillazinekb;\n  interwiki$1.musicbrainz;\n  interwiki$1.mediawikiwiki;\n  interwiki$1.mwod;\n  interwiki$1.mwot;\n  interwiki$1.nkcells;\n  interwiki$1.nara;\n  interwiki$1.nosmoke;\n  interwiki$1.nost;\n  interwiki$1.nostalgia;\n  interwiki$1.oeis;\n  interwiki$1.oldwikisource;\n  interwiki$1.olpc;\n  interwiki$1.omegawiki;\n  interwiki$1.onelook;\n  interwiki$1.openlibrary;\n  interwiki$1.openstreetmap;\n  interwiki$1.openwetware;\n  interwiki$1.opera7wiki;\n  interwiki$1.organicdesign;\n  interwiki$1.orthodoxwiki;\n  interwiki$1.osmwiki;\n  interwiki$1.otrs;\n  interwiki$1.otrswiki;\n  interwiki$1.ourmedia;\n  interwiki$1.outreach;\n  interwiki$1.outreachwiki;\n  interwiki$1.owasp;\n  interwiki$1.panawiki;\n  interwiki$1.patwiki;\n  interwiki$1.personaltelco;\n  interwiki$1.petscan;\n  interwiki$1.phab;\n  interwiki$1.phabricator;\n  interwiki$1.phwiki;\n  interwiki$1.phpwiki;\n  interwiki$1.planetmath;\n  interwiki$1.pmeg;\n  interwiki$1.pmid;\n  interwiki$1.pokewiki;\n  interwiki$1.policy;\n  interwiki$1.proofwiki;\n  interwiki$1.pyrev;\n  interwiki$1.pythoninfo;\n  interwiki$1.pythonwiki;\n  interwiki$1.pywiki;\n  interwiki$1.psycle;\n  interwiki$1.quality;\n  interwiki$1.quarry;\n  interwiki$1.regiowiki;\n  interwiki$1.rev;\n  interwiki$1.revo;\n  interwiki$1.rfc;\n  interwiki$1.rheinneckar;\n  interwiki$1.robowiki;\n  interwiki$1.rodovid;\n  interwiki$1.reuterswiki;\n  interwiki$1.rowiki;\n  interwiki$1.rt;\n  interwiki$1.s23wiki;\n  interwiki$1.scholar;\n  interwiki$1.schoolswp;\n  interwiki$1.scores;\n  interwiki$1.scoutwiki;\n  interwiki$1.scramble;\n  interwiki$1.seapig;\n  interwiki$1.seattlewiki;\n  interwiki$1.slwiki;\n  interwiki$1.senseislibrary;\n  interwiki$1.sharemap;\n  interwiki$1.silcode;\n  interwiki$1.slashdot;\n  interwiki$1.sourceforge;\n  interwiki$1.spcom;\n  interwiki$1.species;\n  interwiki$1.squeak;\n  interwiki$1.stats;\n  interwiki$1.stewardry;\n  interwiki$1.strategy;\n  interwiki$1.strategywiki;\n  interwiki$1.sulutil;\n  interwiki$1.swtrain;\n  interwiki$1.svn;\n  interwiki$1.swinbrain;\n  interwiki$1.tabwiki;\n  interwiki$1.tclerswiki;\n  interwiki$1.technorati;\n  interwiki$1.tenwiki;\n  interwiki$1.testwiki;\n  interwiki$1.testwikidata;\n  interwiki$1.test2wiki;\n  interwiki$1.tfwiki;\n  interwiki$1.thelemapedia;\n  interwiki$1.theopedia;\n  interwiki$1.thinkwiki;\n  interwiki$1.ticket;\n  interwiki$1.tmbw;\n  interwiki$1.tmnet;\n  interwiki$1.tmwiki;\n  interwiki$1.toolforge;\n  interwiki$1.toollabs;\n  interwiki$1.tools;\n  interwiki$1.tswiki;\n  interwiki$1.translatewiki;\n  interwiki$1.tviv;\n  interwiki$1.tvtropes;\n  interwiki$1.twiki;\n  interwiki$1.tyvawiki;\n  interwiki$1.umap;\n  interwiki$1.uncyclopedia;\n  interwiki$1.unihan;\n  interwiki$1.unreal;\n  interwiki$1.urbandict;\n  interwiki$1.usej;\n  interwiki$1.usemod;\n  interwiki$1.usability;\n  interwiki$1.utrs;\n  interwiki$1.vikidia;\n  interwiki$1.vlos;\n  interwiki$1.vkol;\n  interwiki$1.voipinfo;\n  interwiki$1.votewiki;\n  interwiki$1.werelate;\n  interwiki$1.wg;\n  interwiki$1.wikia;\n  interwiki$1.wikiasite;\n  interwiki$1.wikiapiary;\n  interwiki$1.wikibooks;\n  interwiki$1.wikichristian;\n  interwiki$1.wikicities;\n  interwiki$1.wikicity;\n  interwiki$1.wikiconference;\n  interwiki$1.wikidata;\n  interwiki$1.wikif1;\n  interwiki$1.wikifur;\n  interwiki$1.wikihow;\n  interwiki$1.wikiindex;\n  interwiki$1.wikilemon;\n  interwiki$1.wikilivres;\n  interwiki$1.wikilivresru;\n  interwiki$1.wikimedia;\n  interwiki$1.wikinews;\n  interwiki$1.wikinfo;\n  interwiki$1.wikinvest;\n  interwiki$1.wikiotics;\n  interwiki$1.wikipapers;\n  interwiki$1.wikipedia;\n  interwiki$1.wikipediawikipedia;\n  interwiki$1.wikiquote;\n  interwiki$1.wikisophia;\n  interwiki$1.wikisource;\n  interwiki$1.wikispecies;\n  interwiki$1.wikispot;\n  interwiki$1.wikiskripta;\n  interwiki$1.labsconsole;\n  interwiki$1.wikiti;\n  interwiki$1.wikiversity;\n  interwiki$1.wikivoyage;\n  interwiki$1.betawikiversity;\n  interwiki$1.wikiwikiweb;\n  interwiki$1.wiktionary;\n  interwiki$1.wipipedia;\n  interwiki$1.wlug;\n  interwiki$1.wmam;\n  interwiki$1.wmar;\n  interwiki$1.wmat;\n  interwiki$1.wmau;\n  interwiki$1.wmbd;\n  interwiki$1.wmbe;\n  interwiki$1.wmbr;\n  interwiki$1.wmca;\n  interwiki$1.wmch;\n  interwiki$1.wmcl;\n  interwiki$1.wmcn;\n  interwiki$1.wmco;\n  interwiki$1.wmcz;\n  interwiki$1.wmdc;\n  interwiki$1.securewikidc;\n  interwiki$1.wmde;\n  interwiki$1.wmdk;\n  interwiki$1.wmee;\n  interwiki$1.wmec;\n  interwiki$1.wmes;\n  interwiki$1.wmet;\n  interwiki$1.wmfdashboard;\n  interwiki$1.wmfi;\n  interwiki$1.wmfr;\n  interwiki$1.wmge;\n  interwiki$1.wmhi;\n  interwiki$1.wmhk;\n  interwiki$1.wmhu;\n  interwiki$1.wmid;\n  interwiki$1.wmil;\n  interwiki$1.wmin;\n  interwiki$1.wmit;\n  interwiki$1.wmke;\n  interwiki$1.wmmk;\n  interwiki$1.wmmx;\n  interwiki$1.wmnl;\n  interwiki$1.wmnyc;\n  interwiki$1.wmno;\n  interwiki$1.wmph;\n  interwiki$1.wmpl;\n  interwiki$1.wmpt;\n  interwiki$1.wmpunjabi;\n  interwiki$1.wmromd;\n  interwiki$1.wmrs;\n  interwiki$1.wmru;\n  interwiki$1.wmse;\n  interwiki$1.wmsk;\n  interwiki$1.wmtr;\n  interwiki$1.wmtw;\n  interwiki$1.wmua;\n  interwiki$1.wmuk;\n  interwiki$1.wmve;\n  interwiki$1.wmza;\n  interwiki$1.wm2005;\n  interwiki$1.wm2006;\n  interwiki$1.wm2007;\n  interwiki$1.wm2008;\n  interwiki$1.wm2009;\n  interwiki$1.wm2010;\n  interwiki$1.wm2011;\n  interwiki$1.wm2012;\n  interwiki$1.wm2013;\n  interwiki$1.wm2014;\n  interwiki$1.wm2015;\n  interwiki$1.wm2016;\n  interwiki$1.wm2017;\n  interwiki$1.wm2018;\n  interwiki$1.wmania;\n  interwiki$1.wikimania;\n  interwiki$1.wmteam;\n  interwiki$1.wmf;\n  interwiki$1.wmfblog;\n  interwiki$1.wmdeblog;\n  interwiki$1.wookieepedia;\n  interwiki$1.wowwiki;\n  interwiki$1.wqy;\n  interwiki$1.wurmpedia;\n  interwiki$1.viaf;\n  interwiki$1.zrhwiki;\n  interwiki$1.zum;\n  interwiki$1.zwiki;\n  interwiki$1.m;\n  interwiki$1.meta;\n  interwiki$1.sep11;\n  interwiki$1.d;\n  interwiki$1.minnan;\n  interwiki$1.nb;\n  interwiki$1.nan;\n  interwiki$1.vro;\n  interwiki$1.cmn;\n  interwiki$1.lzh;\n  interwiki$1.rup;\n  interwiki$1.gsw;\n  interwiki$1.sgs;\n  interwiki$1.egl;\n  interwiki$1.w;\n  interwiki$1.wikt;\n  interwiki$1.q;\n  interwiki$1.b;\n  interwiki$1.n;\n  interwiki$1.s;\n  interwiki$1.chapter;\n  interwiki$1.v;\n  interwiki$1.voy;\n\n  var languages = languages$1;\n\n  var wikis = interwiki$1;\n\n  //so we have to whitelist allowable interwiki links\n  //add language prefixes too..\n\n  Object.keys(languages).forEach(k => {\n    wikis[k] = k + '.wikipedia.org/wiki/$1';\n  }); //this is predictably very complicated.\n  // https://meta.wikimedia.org/wiki/Help:Interwiki_linking\n\n  const parseInterwiki = function (obj) {\n    let str = obj.page || '';\n\n    if (str.indexOf(':') !== -1) {\n      let m = str.match(/^(.*):(.*)/);\n\n      if (m === null) {\n        return obj;\n      }\n\n      let site = m[1] || '';\n      site = site.toLowerCase();\n\n      if (site.indexOf(':') !== -1) {\n        let [, wiki, lang] = site.match(/^:?(.*):(.*)/); //only allow interwikis to these specific places\n\n        if (wikis.hasOwnProperty(wiki) && languages.hasOwnProperty(lang) === false) {\n          return obj;\n        }\n\n        obj.wiki = {\n          wiki: wiki,\n          lang: lang\n        };\n      } else {\n        if (wikis.hasOwnProperty(site) === false) {\n          return obj;\n        }\n\n        obj.wiki = site;\n      }\n\n      obj.page = m[2];\n    }\n\n    return obj;\n  };\n\n  var interwiki = parseInterwiki;\n\n  var parse_interwiki = interwiki;\n\n  const ignore_links = /^:?(category|catégorie|kategorie|categoría|categoria|categorie|kategoria|تصنيف|image|file|fichier|datei|media):/i;\n  const external_link = /\\[(https?|news|ftp|mailto|gopher|irc)(:\\/\\/[^\\]| ]{4,1500})([| ].*?)?\\]/g;\n  const link_reg = /\\[\\[(.{0,160}?)\\]\\]([a-z]+)?/gi; //allow dangling suffixes - \"[[flanders]]s\"\n\n  const external_links = function (links, str) {\n    str.replace(external_link, function (raw, protocol, link, text) {\n      text = text || '';\n      links.push({\n        type: 'external',\n        site: protocol + link,\n        text: text.trim(),\n        raw: raw\n      });\n      return text;\n    });\n    return links;\n  };\n\n  const internal_links = function (links, str) {\n    //regular links\n    str.replace(link_reg, function (raw, s, suffix) {\n      let txt = null; //make a copy of original\n\n      let link = s;\n\n      if (s.match(/\\|/)) {\n        //replacement link [[link|text]]\n        s = s.replace(/\\[\\[(.{2,100}?)\\]\\](\\w{0,10})/g, '$1$2'); //remove ['s and keep suffix\n\n        link = s.replace(/(.{2,100})\\|.{0,200}/, '$1'); //replaced links\n\n        txt = s.replace(/.{2,100}?\\|/, ''); //handle funky case of [[toronto|]]\n\n        if (txt === null && link.match(/\\|$/)) {\n          link = link.replace(/\\|$/, '');\n          txt = link;\n        }\n      } //kill off non-wikipedia namespaces\n\n\n      if (link.match(ignore_links)) {\n        return s;\n      } //kill off just these just-anchor links [[#history]]\n      // if (link.match(/^#/i)) {\n      //   console.log(s)\n      //   return s\n      // }\n      //remove anchors from end [[toronto#history]]\n\n\n      let obj = {\n        page: link,\n        raw: raw\n      };\n      obj.page = obj.page.replace(/#(.*)/, (a, b) => {\n        obj.anchor = b;\n        return '';\n      }); //grab any fr:Paris parts\n\n      obj = parse_interwiki(obj);\n\n      if (obj.wiki) {\n        obj.type = 'interwiki';\n      }\n\n      if (txt !== null && txt !== obj.page) {\n        obj.text = txt;\n      } //finally, support [[link]]'s apostrophe\n\n\n      if (suffix) {\n        obj.text = obj.text || obj.page;\n        obj.text += suffix.trim();\n      } //titlecase it, if necessary\n\n\n      if (obj.page && /^[A-Z]/.test(obj.page) === false) {\n        if (!obj.text) {\n          obj.text = obj.page;\n        }\n\n        obj.page = obj.page;\n      }\n\n      links.push(obj);\n      return s;\n    });\n    return links;\n  }; //grab an array of internal links in the text\n\n\n  const parse_links = function (str) {\n    let links = []; //first, parse external links\n\n    links = external_links(links, str); //internal links\n\n    links = internal_links(links, str);\n\n    if (links.length === 0) {\n      return undefined;\n    }\n\n    return links;\n  };\n\n  var parse$8 = parse_links;\n\n  var parseLinks$1 = parse$8;\n\n  const REDIRECT_REGEX = new RegExp('^[ \\n\\t]*?#(' + i18n.redirects.join('|') + ') *?(\\\\[\\\\[.{2,180}?\\\\]\\\\])', 'i');\n\n  const isRedirect = function (wiki) {\n    //too long to be a redirect?\n    if (!wiki || wiki.length > 500) {\n      return false;\n    }\n\n    return REDIRECT_REGEX.test(wiki);\n  };\n\n  const parse$7 = function (wiki) {\n    let m = wiki.match(REDIRECT_REGEX);\n\n    if (m && m[2]) {\n      let links = parseLinks$1(m[2]) || [];\n      return links[0];\n    }\n\n    return {};\n  };\n\n  var redirects$1 = {\n    isRedirect: isRedirect,\n    parse: parse$7\n  };\n\n  //okay, i know you're not supposed to regex html, but...\n  //https://en.wikipedia.org/wiki/Help:HTML_in_wikitext\n  //these are things we throw-away\n  //these will mess-up if they're nested, but they're not usually.\n  const ignore$2 = ['table', 'code', 'score', 'data', 'categorytree', 'charinsert', 'hiero', 'imagemap', 'inputbox', 'nowiki', 'poem', 'references', 'source', 'syntaxhighlight', 'timeline'];\n  const openTag = `< ?(${ignore$2.join('|')}) ?[^>]{0,200}?>`;\n  const closeTag = `< ?/ ?(${ignore$2.join('|')}) ?>`;\n  const anyChar = '\\\\s\\\\S'; //including newline\n\n  const noThanks = new RegExp(`${openTag}[${anyChar}]+?${closeTag}`, 'gi');\n\n  const kill_xml$1 = function (wiki) {\n    //(<ref> tags are parsed in Section class) - luckily, refs can't be recursive.\n    //types of html/xml that we want to trash completely.\n    wiki = wiki.replace(noThanks, ' '); //some xml-like fragments we can also kill\n\n    wiki = wiki.replace(/ ?< ?(span|div|table|data) [a-zA-Z0-9=%.\\-#:;'\" ]{2,100}\\/? ?> ?/g, ' '); //<ref name=\"asd\">\n    //only kill ref tags if they are selfclosing\n\n    wiki = wiki.replace(/ ?< ?(ref) [a-zA-Z0-9=\" ]{2,100}\\/ ?> ?/g, ' '); //<ref name=\"asd\"/>\n    // convert these html tags to known formatting\n\n    wiki = wiki.replace(/<i>(.*?)<\\/i>/g, `''$1''`);\n    wiki = wiki.replace(/<b>(.*?)<\\/b>/g, `'''$1'''`); // these are better-handled with templates\n\n    wiki = wiki.replace(/<sub>(.*?)<\\/sub>/g, `{{sub|$1}}`);\n    wiki = wiki.replace(/<sup>(.*?)<\\/sup>/g, `{{sup|$1}}`); //some formatting xml, we'll keep their insides though\n\n    wiki = wiki.replace(/ ?<[ /]?(p|sub|sup|span|nowiki|div|table|br|tr|td|th|pre|pre2|hr)[ /]?> ?/g, ' '); //<sub>, </sub>\n\n    wiki = wiki.replace(/ ?<[ /]?(abbr|bdi|bdo|blockquote|cite|del|dfn|em|ins|kbd|mark|q|s|small)[ /]?> ?/g, ' '); //<abbr>, </abbr>\n\n    wiki = wiki.replace(/ ?<[ /]?h[0-9][ /]?> ?/g, ' '); //<h2>, </h2>\n\n    wiki = wiki.replace(/ ?< ?br ?\\/> ?/g, '\\n'); //<br />\n\n    return wiki.trim();\n  };\n\n  var kill_xml_1 = kill_xml$1;\n\n  var kill_xml = kill_xml_1;\n\n  /**\n   * removes unnecessary strings from the wikitext\n   * it is mostly-formatting stuff can be cleaned-up first, to make life easier\n   *\n   * @private\n   * @param {string} wiki the wikitext that needs processing\n   * @returns {string} the processed text\n   */\n\n  function preProcess$1(wiki) {\n    //remove comments\n    wiki = wiki.replace(/<!--[\\s\\S]{0,2000}?-->/g, '');\n    wiki = wiki.replace(/__(NOTOC|NOEDITSECTION|FORCETOC|TOC)__/gi, ''); //signitures\n\n    wiki = wiki.replace(/~{2,3}/g, ''); //windows newlines\n\n    wiki = wiki.replace(/\\r/g, ''); //japanese periods - '。'\n\n    wiki = wiki.replace(/\\u3002/g, '. '); //horizontal rule\n\n    wiki = wiki.replace(/----/g, ''); //formatting for templates-in-templates...\n\n    wiki = wiki.replace(/\\{\\{\\}\\}/g, ' – ');\n    wiki = wiki.replace(/\\{\\{\\\\\\}\\}/g, ' / '); //space\n\n    wiki = wiki.replace(/&nbsp;/g, ' '); //give it the inglorious send-off it deserves..\n\n    wiki = kill_xml(wiki); //({{template}},{{template}}) leaves empty parentheses\n\n    wiki = wiki.replace(/\\([,;: ]+\\)/g, ''); //these templates just screw things up, too\n\n    wiki = wiki.replace(/\\{\\{(baseball|basketball) (primary|secondary) (style|color).*?\\}\\}/i, '');\n    return wiki;\n  }\n\n  var preProcess_1 = preProcess$1;\n\n  //dumpster-dive throws everything into mongodb  - github.com/spencermountain/dumpster-dive\n  //mongo has some opinions about what characters are allowed as keys and ids.\n  //https://stackoverflow.com/questions/12397118/mongodb-dot-in-key-name/30254815#30254815\n  const specialChar = /[\\\\.$]/;\n  /**\n   * this function encodes a string to make it mongodb compatible.\n   * https://stackoverflow.com/questions/12397118/mongodb-dot-in-key-name/30254815#30254815\n   *\n   * @param {string} str\n   * @returns {string} the encoded string\n   */\n\n  const encodeStr = function (str) {\n    if (typeof str !== 'string') {\n      str = '';\n    }\n\n    str = str.replace(/\\\\/g, '\\\\\\\\');\n    str = str.replace(/^\\$/, '\\\\u0024');\n    str = str.replace(/\\./g, '\\\\u002e');\n    return str;\n  };\n\n  const encodeObj = function (obj = {}) {\n    let keys = Object.keys(obj);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      if (specialChar.test(keys[i]) === true) {\n        let str = encodeStr(keys[i]);\n\n        if (str !== keys[i]) {\n          obj[str] = obj[keys[i]];\n          delete obj[keys[i]];\n        }\n      }\n    }\n\n    return obj;\n  };\n\n  var encode$1 = {\n    encodeObj: encodeObj\n  };\n\n  var encode = encode$1;\n\n  const defaults$9 = {\n    headers: true,\n    depth: true,\n    paragraphs: true,\n    images: true,\n    tables: true,\n    templates: true,\n    infoboxes: true,\n    lists: true,\n    references: true\n  };\n  /**\n   *\n   * @param {Section} section\n   * @param {sectionToJsonOptions} options\n   * @returns {object}\n   */\n\n  const toJSON$7 = function (section, options) {\n    options = setDefaults(options, defaults$9);\n    /**\n     * @type {object}\n     */\n\n    let data = {};\n\n    if (options.headers === true) {\n      data.title = section.title();\n    }\n\n    if (options.depth === true) {\n      data.depth = section.depth();\n    } //these return objects\n\n\n    if (options.paragraphs === true) {\n      let paragraphs = section.paragraphs().map(p => p.json(options));\n\n      if (paragraphs.length > 0) {\n        data.paragraphs = paragraphs;\n      }\n    } //image json data\n\n\n    if (options.images === true) {\n      let images = section.images().map(img => img.json(options));\n\n      if (images.length > 0) {\n        data.images = images;\n      }\n    } //table json data\n\n\n    if (options.tables === true) {\n      let tables = section.tables().map(t => t.json(options));\n\n      if (tables.length > 0) {\n        data.tables = tables;\n      }\n    } //template json data\n\n\n    if (options.templates === true) {\n      let templates = section.templates().map(tmpl => tmpl.json());\n\n      if (templates.length > 0) {\n        data.templates = templates; //encode them, for mongodb\n\n        if (options.encode === true) {\n          data.templates.forEach(t => encode.encodeObj(t));\n        }\n      }\n    } //infobox json data\n\n\n    if (options.infoboxes === true) {\n      let infoboxes = section.infoboxes().map(i => i.json(options));\n\n      if (infoboxes.length > 0) {\n        data.infoboxes = infoboxes;\n      }\n    } //list json data\n\n\n    if (options.lists === true) {\n      let lists = section.lists().map(list => list.json(options));\n\n      if (lists.length > 0) {\n        data.lists = lists;\n      }\n    } //list references - default true\n\n\n    if (options.references === true || options.citations === true) {\n      let references = section.references().map(ref => ref.json(options));\n\n      if (references.length > 0) {\n        data.references = references;\n      }\n    } //default off\n\n\n    if (options.sentences === true) {\n      data.sentences = section.sentences().map(s => s.json(options));\n    }\n\n    return data;\n  };\n\n  var toJson$6 = toJSON$7;\n\n  const defaults$8 = {\n    type: 'internal'\n  };\n\n  const Link = function (data) {\n    data = data || {};\n    data = Object.assign({}, defaults$8, data);\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  const methods$7 = {\n    text: function (str) {\n      if (str !== undefined) {\n        this.data.text = str;\n      }\n\n      let txt = this.data.text || this.data.page || ''; // remove bold/italics\n\n      txt = txt.replace(/'{2,}/g, '');\n      return txt;\n    },\n    json: function () {\n      let obj = {\n        text: this.data.text,\n        type: this.type()\n      };\n\n      if (obj.type === 'internal') {\n        obj.page = this.page();\n      } else if (obj.type === 'interwiki') {\n        obj.wiki = this.wiki();\n      } else {\n        obj.site = this.site();\n      }\n\n      let anchor = this.anchor();\n\n      if (anchor) {\n        obj.anchor = anchor;\n      }\n\n      return obj;\n    },\n    wikitext: function () {\n      let txt = this.data.raw || '';\n      return txt;\n    },\n    page: function (str) {\n      if (str !== undefined) {\n        this.data.page = str;\n      }\n\n      return this.data.page;\n    },\n    anchor: function (str) {\n      if (str !== undefined) {\n        this.data.anchor = str;\n      }\n\n      return this.data.anchor || '';\n    },\n    wiki: function (str) {\n      if (str !== undefined) {\n        this.data.wiki = str;\n      }\n\n      return this.data.wiki;\n    },\n    type: function (str) {\n      if (str !== undefined) {\n        this.data.type = str;\n      }\n\n      return this.data.type;\n    },\n    site: function (str) {\n      if (str !== undefined) {\n        this.data.site = str;\n      }\n\n      return this.data.site;\n    },\n    //create a url for any type of link\n    href: function () {\n      let type = this.type();\n\n      if (type === 'external') {\n        return this.site();\n      }\n\n      let page = this.page();\n      page = page.replace(/ /g, '_');\n      page = encodeURIComponent(page);\n      let url = '';\n\n      if (type === 'interwiki') {\n        let wiki = this.wiki();\n        url = 'https://en.wikipedia.org/wiki/$1';\n\n        if (wikis.hasOwnProperty(wiki)) {\n          url = 'http://' + wikis[this.wiki()];\n        }\n\n        url = url.replace(/\\$1/g, page);\n      } else {\n        //internal link\n        url = `./${this.page()}`;\n      } //add anchor on the end\n\n\n      if (this.anchor()) {\n        url += '#' + this.anchor();\n      }\n\n      return url;\n    }\n  };\n  Object.keys(methods$7).forEach(k => {\n    Link.prototype[k] = methods$7[k];\n  });\n  var Link_1 = Link;\n\n  var require$$5$2 = Link_1;\n\n  // const cat_reg = new RegExp('\\\\[\\\\[:?(' + i18n.categories.join('|') + '):[^\\\\]\\\\]]{2,80}\\\\]\\\\]', 'gi')\n  //return only rendered text of wiki links\n\n  const removeLinks = function (line) {\n    // [[File:with|Size]]\n    line = line.replace(/\\[\\[File:(.{2,80}?)\\|([^\\]]+)\\]\\](\\w{0,5})/g, '$1');\n    return line;\n  };\n\n  const getLinks = function (data) {\n    let wiki = data.text;\n    let links = parseLinks$1(wiki) || [];\n    data.links = links.map(link => {\n      wiki = wiki.replace(link.raw, link.text || link.page || ''); // delete link.raw\n\n      return new require$$5$2(link);\n    });\n    wiki = removeLinks(wiki);\n    data.text = wiki;\n  };\n\n  var link = getLinks;\n\n  //handle the bold/italics\n  const formatting = function (obj) {\n    let bolds = [];\n    let italics = [];\n    let wiki = obj.text || ''; //bold and italics combined 5 's\n\n    wiki = wiki.replace(/'''''(.{0,200}?)'''''/g, (a, b) => {\n      bolds.push(b);\n      italics.push(b);\n      return b;\n    }); //''''four'''' → bold with quotes\n\n    wiki = wiki.replace(/''''(.{0,200}?)''''/g, (a, b) => {\n      bolds.push(`'${b}'`);\n      return `'${b}'`;\n    }); //'''bold'''\n\n    wiki = wiki.replace(/'''(.{0,200}?)'''/g, (a, b) => {\n      bolds.push(b);\n      return b;\n    }); //''italic''\n\n    wiki = wiki.replace(/''(.{0,200}?)''/g, (a, b) => {\n      italics.push(b);\n      return b;\n    }); //pack it all up..\n\n    obj.text = wiki;\n\n    if (bolds.length > 0) {\n      obj.fmt = obj.fmt || {};\n      obj.fmt.bold = bolds;\n    }\n\n    if (italics.length > 0) {\n      obj.fmt = obj.fmt || {};\n      obj.fmt.italic = italics;\n    }\n\n    return obj;\n  };\n\n  var formatting_1 = formatting;\n\n  const isNumber = /^[0-9,.]+$/;\n  const defaults$7 = {\n    text: true,\n    links: true,\n    formatting: true,\n    numbers: true\n  };\n\n  const toJSON$6 = function (s, options) {\n    options = setDefaults(options, defaults$7);\n    let data = {};\n    let text = s.text();\n\n    if (options.text === true) {\n      data.text = text;\n    } //add number field\n\n\n    if (options.numbers === true && isNumber.test(text)) {\n      let num = Number(text.replace(/,/g, ''));\n\n      if (isNaN(num) === false) {\n        data.number = num;\n      }\n    }\n\n    if (options.links && s.links().length > 0) {\n      data.links = s.links().map(l => l.json());\n    }\n\n    if (options.formatting && s.data.fmt) {\n      data.formatting = s.data.fmt;\n    }\n\n    return data;\n  };\n\n  var toJson$5 = toJSON$6;\n\n  var toJSON$5 = toJson$5;\n\n  const Sentence = function (data = {}) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  const methods$6 = {\n    links: function (n) {\n      let arr = this.data.links || [];\n\n      if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        let link = arr.find(o => o.page === n);\n        return link === undefined ? [] : [link];\n      }\n\n      return arr;\n    },\n    interwiki: function () {\n      return this.links().filter(l => l.wiki !== undefined);\n    },\n    bolds: function () {\n      if (this.data && this.data.fmt && this.data.fmt.bold) {\n        return this.data.fmt.bold || [];\n      }\n\n      return [];\n    },\n    italics: function () {\n      if (this.data && this.data.fmt && this.data.fmt.italic) {\n        return this.data.fmt.italic || [];\n      }\n\n      return [];\n    },\n    text: function (str) {\n      if (str !== undefined && typeof str === 'string') {\n        //set the text?\n        this.data.text = str;\n      }\n\n      return this.data.text || '';\n    },\n    json: function (options) {\n      return toJSON$5(this, options);\n    },\n    wikitext: function () {\n      return this.data.wiki || '';\n    },\n    isEmpty: function () {\n      return this.data.text === '';\n    }\n  };\n  Object.keys(methods$6).forEach(k => {\n    Sentence.prototype[k] = methods$6[k];\n  }); // aliases\n\n  const singular$3 = {\n    links: 'link',\n    bolds: 'bold',\n    italics: 'italic'\n  };\n  Object.keys(singular$3).forEach(k => {\n    let sing = singular$3[k];\n\n    Sentence.prototype[sing] = function (clue) {\n      let arr = this[k](clue);\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr[0];\n    };\n  });\n  Sentence.prototype.plaintext = Sentence.prototype.text;\n  var Sentence_1 = Sentence;\n\n  //these are used for the sentence-splitter\n  var _abbreviations = ['ad', 'adj', 'adm', 'adv', 'al', 'alta', 'approx', 'apr', 'apt', 'arc', 'ariz', 'assn', 'asst', 'atty', 'aug', 'ave', 'ba', 'bc', 'bl', 'bldg', 'blvd', 'brig', 'bros', 'ca', 'cal', 'calif', 'capt', 'cca', 'cg', 'cl', 'cm', 'cmdr', 'co', 'col', 'colo', 'comdr', 'conn', 'corp', 'cpl', 'cres', 'ct', 'cyn', 'dak', 'dec', 'def', 'dept', 'det', 'dg', 'dist', 'dl', 'dm', 'dr', 'ea', 'eg', 'eng', 'esp', 'esq', 'est', 'etc', 'ex', 'exp', 'feb', 'fem', 'fig', 'fl oz', 'fl', 'fla', 'fm', 'fr', 'ft', 'fy', 'ga', 'gal', 'gb', 'gen', 'gov', 'hg', 'hon', 'hr', 'hrs', 'hwy', 'hz', 'ia', 'ida', 'ie', 'inc', 'inf', 'jan', 'jd', 'jr', 'jul', 'jun', 'kan', 'kans', 'kb', 'kg', 'km', 'kmph', 'lat', 'lb', 'lit', 'llb', 'lm', 'lng', 'lt', 'ltd', 'lx', 'ma', 'maj', 'mar', 'masc', 'mb', 'md', 'messrs', 'mg', 'mi', 'min', 'minn', 'misc', 'mister', 'ml', 'mlle', 'mm', 'mme', 'mph', 'mps', 'mr', 'mrs', 'ms', 'mstr', 'mt', 'neb', 'nebr', 'nee', 'no', 'nov', 'oct', 'okla', 'ont', 'op', 'ord', 'oz', 'pa', 'pd', 'penn', 'penna', 'phd', 'pl', 'pp', 'pref', 'prob', 'prof', 'pron', 'ps', 'psa', 'pseud', 'pt', 'pvt', 'qt', 'que', 'rb', 'rd', 'rep', 'reps', 'res', 'rev', 'sask', 'sec', 'sen', 'sens', 'sep', 'sept', 'sfc', 'sgt', 'sir', 'situ', 'sq ft', 'sq', 'sr', 'ss', 'st', 'supt', 'surg', 'tb', 'tbl', 'tbsp', 'tce', 'td', 'tel', 'temp', 'tenn', 'tex', 'tsp', 'univ', 'usafa', 'ut', 'va', 'vb', 'ver', 'vet', 'vitro', 'vivo', 'vol', 'vs', 'vt', 'wis', 'wisc', 'wr', 'wy', 'wyo', 'yb', 'µg'];\n\n  var literalAbbreviations = _abbreviations;\n\n  //@spencermountain MIT\n  //(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n  // Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n  // @spencermountain 2015 MIT\n\n  const abbreviations = literalAbbreviations.concat('[^]][^]]');\n  const abbrev_reg = new RegExp(\"(^| |')(\" + abbreviations.join('|') + `)[.!?] ?$`, 'i');\n  const acronym_reg = /[ .'][A-Z].? *?$/i;\n  const elipses_reg = /\\.{3,} +?$/;\n  const circa_reg = / c\\.\\s$/;\n  const hasWord = /\\p{Letter}/iu; //turn a nested array into one array\n\n  const flatten = function (arr) {\n    let all = [];\n    arr.forEach(function (a) {\n      all = all.concat(a);\n    });\n    return all;\n  };\n\n  const naiive_split = function (text) {\n    //first, split by newline\n    let splits = text.split(/(\\n+)/);\n    splits = splits.filter(s => s.match(/\\S/)); //split by period, question-mark, and exclamation-mark\n\n    splits = splits.map(function (str) {\n      return str.split(/(\\S.+?[.!?]\"?)(?=\\s|$)/g); //\\u3002\n    });\n    return flatten(splits);\n  }; // if this looks like a period within a wikipedia link, return false\n\n\n  const isBalanced = function (str) {\n    str = str || '';\n    const open = str.split(/\\[\\[/) || [];\n    const closed = str.split(/\\]\\]/) || [];\n\n    if (open.length > closed.length) {\n      return false;\n    } //make sure quotes are closed too\n\n\n    const quotes = str.match(/\"/g);\n\n    if (quotes && quotes.length % 2 !== 0 && str.length < 900) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const sentence_parser = function (text) {\n    let sentences = []; //first do a greedy-split..\n\n    let chunks = []; //ensure it 'smells like' a sentence\n\n    if (!text || typeof text !== 'string' || text.trim().length === 0) {\n      return sentences;\n    } // This was the splitter regex updated to fix quoted punctuation marks.\n    // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n    // todo: look for side effects in this regex replacement:\n\n\n    let splits = naiive_split(text); //filter-out the grap ones\n\n    for (let i = 0; i < splits.length; i++) {\n      let s = splits[i];\n\n      if (!s || s === '') {\n        continue;\n      } //this is meaningful whitespace\n\n\n      if (!s.match(/\\S/)) {\n        //add it to the last one\n        if (chunks[chunks.length - 1]) {\n          chunks[chunks.length - 1] += s;\n          continue;\n        } else if (splits[i + 1]) {\n          //add it to the next one\n          splits[i + 1] = s + splits[i + 1];\n          continue;\n        }\n      }\n\n      chunks.push(s);\n    } //detection of non-sentence chunks\n\n\n    const isSentence = function (hmm) {\n      if (hmm.match(abbrev_reg) || hmm.match(acronym_reg) || hmm.match(elipses_reg) || hmm.match(circa_reg)) {\n        return false;\n      } //too short? - no consecutive letters\n\n\n      if (hasWord.test(hmm) === false) {\n        return false;\n      }\n\n      if (!isBalanced(hmm)) {\n        return false;\n      }\n\n      return true;\n    }; //loop through these chunks, and join the non-sentence chunks back together..\n\n\n    for (let i = 0; i < chunks.length; i++) {\n      //should this chunk be combined with the next one?\n      if (chunks[i + 1] && !isSentence(chunks[i])) {\n        chunks[i + 1] = chunks[i] + (chunks[i + 1] || ''); //.replace(/ +/g, ' ');\n      } else if (chunks[i] && chunks[i].length > 0) {\n        //this chunk is a proper sentence..\n        sentences.push(chunks[i]);\n        chunks[i] = '';\n      }\n    } //if we never got a sentence, return the given text\n\n\n    if (sentences.length === 0) {\n      return [text];\n    }\n\n    return sentences;\n  };\n\n  var parse$6 = sentence_parser;\n\n  var parseLinks = link;\n\n  var parseFmt = formatting_1;\n\n  var require$$2$6 = Sentence_1;\n\n  var sentenceParser = parse$6;\n\n  /**\n   * This function removes some final characters from the sentence\n   *\n   * @private\n   * @param {string} line the wiki text for processing\n   * @returns {string} the processed string\n   */\n\n  function postprocess(line) {\n    //remove empty parentheses (sometimes caused by removing templates)\n    line = line.replace(/\\([,;: ]*\\)/g, ''); //these semi-colons in parentheses are particularly troublesome\n\n    line = line.replace(/\\( *(; ?)+/g, '('); //dangling punctuation\n\n    line = require$$0$9.trim_whitespace(line);\n    line = line.replace(/ +\\.$/, '.');\n    return line;\n  }\n  /**\n   * returns one sentence object\n   *\n   * @param {string} str create a object from a sentence\n   * @returns {Sentence} the Sentence created from the text\n   */\n\n\n  function fromText(str) {\n    let obj = {\n      wiki: str,\n      text: str\n    }; //pull-out the [[links]]\n\n    parseLinks(obj);\n    obj.text = postprocess(obj.text); //pull-out the bolds and ''italics''\n\n    obj = parseFmt(obj); //pull-out things like {{start date|...}}\n\n    return new require$$2$6(obj);\n  } //used for consistency with other class-definitions\n\n\n  const byParagraph = function (paragraph) {\n    //array of texts\n    let sentences = sentenceParser(paragraph.wiki); //sentence objects\n\n    sentences = sentences.map(fromText); //remove :indented first line, as it is often a disambiguation\n\n    if (sentences[0] && sentences[0].text() && sentences[0].text()[0] === ':') {\n      sentences = sentences.slice(1);\n    }\n\n    paragraph.sentences = sentences;\n  };\n\n  var _04Sentence = {\n    fromText: fromText,\n    byParagraph: byParagraph\n  };\n\n  /**\n   * removes the top and bottom off the template\n   * so it removes tje '{{' and '}}'\n   *\n   * @private\n   * @param {string} tmpl the string to be striped\n   * @returns {string} the striped string\n   */\n  const strip$1 = function (tmpl) {\n    tmpl = tmpl.replace(/^\\{\\{/, '');\n    tmpl = tmpl.replace(/\\}\\}$/, '');\n    return tmpl;\n  };\n\n  var _strip = strip$1;\n\n  //normalize template names\n  const fmtName$1 = function (name) {\n    name = (name || '').trim();\n    name = name.toLowerCase();\n    name = name.replace(/_/g, ' ');\n    return name;\n  };\n\n  var _fmtName = fmtName$1;\n\n  /**\n   * turn {{name|one|two|three}} into [name, one, two, three]\n   *\n   * @private\n   * @param {string} tmpl the template text\n   * @returns {string[]} a array containing all the split parameters\n   */\n  const pipeSplitter$1 = function (tmpl) {\n    //start with a naive '|' split\n    let arr = tmpl.split(/\\n?\\|/); //we've split by '|', which is pretty lame\n    //look for broken-up links and fix them :/\n\n    arr.forEach((a, i) => {\n      if (a === null) {\n        return;\n      } //has '[[' but no ']]'\n      //has equal number of opening and closing tags. handle nested case '[[[[' ']]'\n\n\n      if (/\\[\\[[^\\]]+$/.test(a) || /\\{\\{[^}]+$/.test(a) || a.split('{{').length !== a.split('}}').length || a.split('[[').length !== a.split(']]').length) {\n        arr[i + 1] = arr[i] + '|' + arr[i + 1]; //@ts-expect-error we can ignore this error because we filter out all nulls later in\n\n        arr[i] = null;\n      }\n    }); //cleanup any mistakes we've made\n\n    arr = arr.filter(a => a !== null);\n    arr = arr.map(a => (a || '').trim()); //remove empty fields, only at the end:\n\n    for (let i = arr.length - 1; i >= 0; i -= 1) {\n      if (arr[i] === '') {\n        arr.pop();\n      }\n\n      break;\n    }\n\n    return arr;\n  };\n\n  var _01PipeSplitter = pipeSplitter$1;\n\n  //every value in {{tmpl|a|b|c}} needs a name\n  //here we come up with names for them\n  const hasKey = /^[\\p{Letter}0-9._\\- '()]+=/iu; //templates with these properties are asking for trouble\n\n  const reserved = {\n    template: true,\n    list: true,\n    prototype: true\n  };\n  /**\n   * @typedef parseKeyReturn\n   * @property {string} val\n   * @property {string} key\n   */\n\n  /**\n   * turn 'key=val' into {key:key, val:val}\n   *\n   * @param {string} str the string that will be parsed\n   * @returns {parseKeyReturn} the spit string\n   */\n\n  const parseKey = function (str) {\n    let parts = str.split('=');\n    let key = parts[0] || '';\n    key = key.toLowerCase().trim();\n    let val = parts.slice(1).join('='); //don't let it be called 'template'..\n\n    if (reserved.hasOwnProperty(key)) {\n      key = '_' + key;\n    }\n\n    return {\n      key: key,\n      val: val.trim()\n    };\n  };\n  /**\n   * turn [a, b=v, c] into {'1':a, b:v, '2':c}\n   *\n   * @private\n   * @param {string[]} arr the array of parameters\n   * @param {string[]} [order] the order in which the parameters are returned\n   * @returns {object} and object with the names as the keys and the values as the values\n   */\n\n\n  const keyMaker$1 = function (arr, order) {\n    let keyIndex = 0;\n    return arr.reduce((h, str = '') => {\n      str = str.trim(); //support named keys - 'foo=bar'\n\n      if (hasKey.test(str) === true) {\n        let res = parseKey(str);\n\n        if (res.key) {\n          h[res.key] = res.val;\n          return h;\n        }\n      } //if the current index is present in the order array then we have a name for the key\n\n\n      if (order && order[keyIndex]) {\n        let key = order[keyIndex];\n        h[key] = str;\n      } else {\n        h.list = h.list || [];\n        h.list.push(str);\n      }\n\n      keyIndex += 1;\n      return h;\n    }, {});\n  };\n\n  var _02KeyMaker = keyMaker$1;\n\n  const whoCares = {\n    classname: true,\n    style: true,\n    align: true,\n    margin: true,\n    left: true,\n    break: true,\n    boxsize: true,\n    framestyle: true,\n    item_style: true,\n    collapsible: true,\n    list_style_type: true,\n    'list-style-type': true,\n    colwidth: true\n  }; //remove wiki-cruft & some styling info from templates\n\n  const cleanup$2 = function (obj) {\n    Object.keys(obj).forEach(k => {\n      if (whoCares[k.toLowerCase()] === true) {\n        delete obj[k];\n      } //remove empty values, too\n\n\n      if (obj[k] === null || obj[k] === '') {\n        delete obj[k];\n      }\n    });\n    return obj;\n  };\n\n  var _03Cleanup = cleanup$2;\n\n  var strip = _strip;\n\n  var fmtName = _fmtName;\n\n  var require$$0$7 = _04Sentence;\n\n  var pipeSplitter = _01PipeSplitter;\n\n  var keyMaker = _02KeyMaker;\n\n  var cleanup$1 = _03Cleanup;\n\n  const parseSentence$7 = require$$0$7.fromText;\n  /**\n   * most templates just want plaintext...\n   *\n   * @private\n   * @param {str} str\n   * @param {'json' | 'raw'} [fmt]\n   * @returns {string} text\n   */\n\n  const makeFormat = function (str, fmt) {\n    let s = parseSentence$7(str); //support various output formats\n\n    if (fmt === 'json') {\n      return s.json();\n    } else if (fmt === 'raw') {\n      return s;\n    } //default to flat text\n\n\n    return s.text();\n  };\n  /**\n   * parses the parameters of a template to a usable format\n   *\n   * @private\n   * @param {string} tmpl the template text\n   * @param {string[]} [order] the order in which the parameters are returned\n   * @param {'json' | 'raw'} [fmt] whether you wan to parse the text of the template the raw object or just the text\n   * @returns {object} the parameters of the template in a usable format\n   */\n\n\n  const parser = function (tmpl, order = [], fmt) {\n    //remove {{}}'s and split based on pipes\n    tmpl = strip(tmpl || '');\n    let arr = pipeSplitter(tmpl); //get template name\n\n    let name = arr.shift(); //name each value\n\n    let obj = keyMaker(arr, order); //remove wiki-junk\n\n    obj = cleanup$1(obj); //is this a infobox/reference?\n    //let known = isKnown(obj);\n    //using '|1=content' is an escaping-thing..\n\n    if (obj['1'] && order[0] && obj.hasOwnProperty(order[0]) === false) {\n      //move it over..\n      obj[order[0]] = obj['1'];\n      delete obj['1'];\n    }\n\n    Object.keys(obj).forEach(k => {\n      if (k === 'list') {\n        obj[k] = obj[k].map(v => makeFormat(v, fmt));\n        return;\n      }\n\n      obj[k] = makeFormat(obj[k], fmt);\n    }); //add the template name\n\n    if (name) {\n      obj.template = fmtName(name);\n    }\n\n    return obj;\n  };\n\n  var toJSON$4 = parser;\n\n  const Reference = function (data, wiki) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n    Object.defineProperty(this, 'wiki', {\n      enumerable: false,\n      value: wiki\n    });\n  };\n\n  const methods$5 = {\n    title: function () {\n      let data = this.data;\n      return data.title || data.encyclopedia || data.author || '';\n    },\n    links: function (n) {\n      let arr = [];\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } //grab a specific link..\n\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        let link = arr.find(o => o.page() === n);\n        return link === undefined ? [] : [link];\n      }\n\n      return arr || [];\n    },\n    text: function () {\n      return ''; //nah, skip these.\n    },\n    wikitext: function () {\n      return this.wiki || '';\n    },\n    json: function (options = {}) {\n      let json = this.data || {}; //encode them, for mongodb\n\n      if (options.encode === true) {\n        json = Object.assign({}, json);\n        json = encode.encodeObj(json);\n      }\n\n      return json;\n    }\n  };\n  Object.keys(methods$5).forEach(k => {\n    Reference.prototype[k] = methods$5[k];\n  });\n  var Reference_1 = Reference;\n\n  var toJSON$3 = toJSON$4;\n\n  var require$$7$1 = Reference_1;\n\n  const parseSentence$6 = require$$0$7.fromText; //structured Cite templates - <ref>{{Cite..</ref>\n\n  const hasCitation = function (str) {\n    return /^ *\\{\\{ *(cite|citation)/i.test(str) && /\\}\\} *$/.test(str) && /citation needed/i.test(str) === false;\n  };\n\n  const parseCitation = function (tmpl) {\n    let obj = toJSON$3(tmpl);\n    obj.type = obj.template.replace(/cite /, '');\n    obj.template = 'citation';\n    return obj;\n  }; //handle unstructured ones - <ref>some text</ref>\n\n\n  const parseInline = function (str) {\n    let obj = parseSentence$6(str) || {};\n    return {\n      template: 'citation',\n      type: 'inline',\n      data: {},\n      inline: obj\n    };\n  }; //parse <ref></ref> xml tags\n\n\n  const parseRefs = function (section) {\n    let references = [];\n    let wiki = section._wiki;\n    wiki = wiki.replace(/ ?<ref>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function (all, tmpl) {\n      if (hasCitation(tmpl)) {\n        let obj = parseCitation(tmpl);\n\n        if (obj) {\n          references.push({\n            json: obj,\n            wiki: all\n          });\n        }\n\n        wiki = wiki.replace(tmpl, '');\n      } else {\n        references.push({\n          json: parseInline(tmpl),\n          wiki: all\n        });\n      }\n\n      return ' ';\n    }); //<ref name=\"\"/>\n\n    wiki = wiki.replace(/ ?<ref [^>]{0,200}?\\/> ?/gi, ' '); //<ref name=\"\"></ref>\n\n    wiki = wiki.replace(/ ?<ref [^>]{0,200}>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function (all, tmpl) {\n      if (hasCitation(tmpl)) {\n        let obj = parseCitation(tmpl);\n\n        if (obj) {\n          references.push({\n            json: obj,\n            wiki: tmpl\n          });\n        }\n\n        wiki = wiki.replace(tmpl, '');\n      } else {\n        references.push({\n          json: parseInline(tmpl),\n          wiki: all\n        });\n      }\n\n      return ' ';\n    }); //now that we're done with xml, do a generic + dangerous xml-tag removal\n\n    wiki = wiki.replace(/ ?<[ /]?[a-z0-9]{1,8}[a-z0-9=\" ]{2,20}[ /]?> ?/g, ' '); //<samp name=\"asd\">\n\n    section._references = references.map(obj => new require$$7$1(obj.json, obj.wiki));\n    section._wiki = wiki;\n  };\n\n  var reference = parseRefs;\n\n  var require$$4$3 = reference;\n\n  const {\n    trim_whitespace\n  } = require$$0$9;\n  const parseSentence$5 = require$$0$7.fromText;\n  const heading_reg = /^(={1,5})(.{1,200}?)={1,5}$/;\n  /**\n   * @typedef fakeSection\n   * @property {string} title\n   * @property {null | number} depth\n   * @property {string} wiki\n   */\n\n  /**\n   * estimates the depth of a section and parses the title to a normal format\n   *\n   * @private\n   * @param {fakeSection} section\n   * @param {string} str\n   * @returns {fakeSection} section the depth in a object\n   */\n\n  const parseHeading = function (section, str) {\n    let m = str.match(heading_reg);\n\n    if (!m) {\n      section.title = '';\n      section.depth = 0;\n      return section;\n    }\n\n    let title = m[2] || '';\n    title = parseSentence$5(title).text(); //amazingly, you can see inline {{templates}} in this text, too\n    //... let's not think about that now.\n\n    title = title.replace(/\\{\\{.+?\\}\\}/, ''); //same for references (i know..)\n\n    let obj = {\n      _wiki: title\n    };\n    require$$4$3(obj);\n    title = obj._wiki; //trim leading/trailing whitespace\n\n    title = trim_whitespace(title);\n    let depth = 0;\n\n    if (m[1]) {\n      depth = m[1].length - 2;\n    }\n\n    section.title = title;\n    section.depth = depth;\n    return section;\n  };\n\n  var heading = parseHeading;\n\n  //remove top-bottoms\n  const cleanup = function (lines) {\n    lines = lines.filter(line => {\n      //a '|+' row is a 'table caption', remove it.\n      return line && /^\\|\\+/.test(line) !== true;\n    });\n\n    if (/^\\{\\|/.test(lines[0]) === true) {\n      lines.shift();\n    }\n\n    if (/^\\|\\}/.test(lines[lines.length - 1]) === true) {\n      lines.pop();\n    }\n\n    if (/^\\|-/.test(lines[0]) === true) {\n      lines.shift();\n    }\n\n    return lines;\n  }; //turn newline seperated into '|-' seperated\n\n\n  const findRows$1 = function (lines) {\n    let rows = [];\n    let row = [];\n    lines = cleanup(lines);\n\n    for (let i = 0; i < lines.length; i += 1) {\n      let line = lines[i]; //'|-' is a row-seperator\n\n      if (/^\\|-/.test(line) === true) {\n        //okay, we're done the row\n        if (row.length > 0) {\n          rows.push(row);\n          row = [];\n        }\n      } else {\n        //look for '||' inline row-splitter\n        line = line.split(/(?:\\|\\||!!)/); //eslint-disable-line\n        //support newline -> '||'\n\n        if (!line[0] && line[1]) {\n          line.shift();\n        }\n\n        line.forEach(l => {\n          l = l.replace(/^\\| */, '');\n          l = l.trim();\n          row.push(l);\n        });\n      }\n    } //finish the last one\n\n\n    if (row.length > 0) {\n      rows.push(row);\n    }\n\n    return rows;\n  };\n\n  var _findRows = findRows$1;\n\n  const getRowSpan = /.*rowspan *= *[\"']?([0-9]+)[\"']?[ |]*/;\n  const getColSpan = /.*colspan *= *[\"']?([0-9]+)[\"']?[ |]*/; //colspans stretch ←left/right→\n\n  const doColSpan = function (rows) {\n    rows.forEach(row => {\n      row.forEach((str, c) => {\n        let m = str.match(getColSpan);\n\n        if (m !== null) {\n          let num = parseInt(m[1], 10); //...maybe if num is so big, and centered, remove it?\n          // if (num > 3) {\n          //   rows[r] = []\n          //   return\n          // }\n          //splice-in n empty columns right here\n\n          row[c] = str.replace(getColSpan, '');\n\n          for (let i = 1; i < num; i += 1) {\n            row.splice(c + 1, 0, '');\n          }\n        }\n      });\n    });\n    rows = rows.filter(r => r.length > 0);\n    return rows;\n  }; //colspans stretch up/down\n\n\n  const doRowSpan = function (rows) {\n    rows.forEach((row, r) => {\n      row.forEach((str, c) => {\n        let m = str.match(getRowSpan);\n\n        if (m !== null) {\n          let num = parseInt(m[1], 10); //copy this cell down n rows\n\n          str = str.replace(getRowSpan, '');\n          row[c] = str;\n\n          for (let i = r + 1; i < r + num; i += 1) {\n            if (!rows[i]) {\n              break;\n            }\n\n            rows[i].splice(c, 0, str);\n          }\n        }\n      });\n    });\n    return rows;\n  }; //\n\n\n  const handleSpans$1 = function (rows) {\n    rows = doColSpan(rows);\n    rows = doRowSpan(rows);\n    return rows;\n  };\n\n  var _spans = handleSpans$1;\n\n  var findRows = _findRows;\n\n  var handleSpans = _spans;\n\n  const parseSentence$4 = require$$0$7.fromText;\n  const isHeading = /^!/; //common ones\n\n  const headings$1 = {\n    name: true,\n    age: true,\n    born: true,\n    date: true,\n    year: true,\n    city: true,\n    country: true,\n    population: true,\n    count: true,\n    number: true\n  }; //additional table-cruft to remove before parseLine method\n\n  const cleanText = function (str) {\n    str = parseSentence$4(str).text(); //anything before a single-pipe is styling, so remove it\n\n    if (str.match(/\\|/)) {\n      str = str.replace(/.+\\| ?/, ''); //class=\"unsortable\"|title\n    }\n\n    str = str.replace(/style=['\"].*?[\"']/, ''); //'!' is used as a highlighed-column\n\n    str = str.replace(/^!/, ''); // str = str.replace(/\\(.*?\\)/, '')\n\n    str = str.trim(); // str = str.toLowerCase()\n\n    return str;\n  };\n\n  const skipSpanRow = function (row) {\n    row = row || [];\n    let len = row.length;\n    let hasTxt = row.filter(str => str).length; //does it have 3 empty spaces?\n\n    if (len - hasTxt > 3) {\n      return true;\n    }\n\n    return false;\n  }; //remove non-header span rows\n\n\n  const removeMidSpans = function (rows) {\n    rows = rows.filter(row => {\n      if (row.length === 1 && row[0] && isHeading.test(row[0]) && /rowspan/i.test(row[0]) === false) {\n        return false;\n      }\n\n      return true;\n    });\n    return rows;\n  }; //'!' starts a header-row\n\n\n  const findHeaders = function (rows = []) {\n    let headers = []; // is the first-row just a ton of colspan?\n\n    if (skipSpanRow(rows[0])) {\n      rows.shift();\n    }\n\n    let first = rows[0];\n\n    if (first && first[0] && first[1] && (/^!/.test(first[0]) || /^!/.test(first[1]))) {\n      headers = first.map(h => {\n        h = h.replace(/^! */, '');\n        h = cleanText(h);\n        return h;\n      });\n      rows.shift();\n    } //try the second row, too (overwrite first-row, if it exists)\n\n\n    first = rows[0];\n\n    if (first && first[0] && first[1] && /^!/.test(first[0]) && /^!/.test(first[1])) {\n      first.forEach((h, i) => {\n        h = h.replace(/^! */, '');\n        h = cleanText(h);\n\n        if (Boolean(h) === true) {\n          headers[i] = h;\n        }\n      });\n      rows.shift();\n    }\n\n    return headers;\n  }; //turn headers, array into an object\n\n\n  const parseRow = function (arr, headers) {\n    let row = {};\n    arr.forEach((str, i) => {\n      let h = headers[i] || 'col' + (i + 1);\n      let s = parseSentence$4(str);\n      s.text(cleanText(s.text()));\n      row[h] = s;\n    });\n    return row;\n  }; //should we use the first row as a the headers?\n\n\n  const firstRowHeader = function (rows) {\n    if (rows.length <= 3) {\n      return [];\n    }\n\n    let headers = rows[0].slice(0);\n    headers = headers.map(h => {\n      h = h.replace(/^! */, '');\n      h = parseSentence$4(h).text();\n      h = cleanText(h);\n      h = h.toLowerCase();\n      return h;\n    });\n\n    for (let i = 0; i < headers.length; i += 1) {\n      if (headings$1.hasOwnProperty(headers[i])) {\n        rows.shift();\n        return headers;\n      }\n    }\n\n    return [];\n  }; //turn a {|...table string into an array of arrays\n\n\n  const parseTable = function (wiki) {\n    let lines = wiki.replace(/\\r/g, '').replace(/\\n(\\s*[^|!{\\s])/g, ' $1') //remove unecessary newlines\n    .split(/\\n/).map(l => l.trim());\n    let rows = findRows(lines);\n    rows = rows.filter(r => r);\n\n    if (rows.length === 0) {\n      return [];\n    } //remove non-header span rows\n\n\n    rows = removeMidSpans(rows); //support colspan, rowspan...\n\n    rows = handleSpans(rows); //grab the header rows\n\n    let headers = findHeaders(rows);\n\n    if (!headers || headers.length <= 1) {\n      headers = firstRowHeader(rows);\n      let want = rows[rows.length - 1] || []; //try the second row\n\n      if (headers.length <= 1 && want.length > 2) {\n        headers = firstRowHeader(rows.slice(1));\n\n        if (headers.length > 0) {\n          rows = rows.slice(2); //remove them\n        }\n      }\n    } //index each column by it's header\n\n\n    let table = rows.map(arr => {\n      return parseRow(arr, headers);\n    });\n    return table;\n  };\n\n  var parse$5 = parseTable;\n\n  const toJson$4 = function (tables, options) {\n    return tables.map(table => {\n      let row = {};\n      Object.keys(table).forEach(k => {\n        row[k] = table[k].json(); //(they're sentence objects)\n      }); //encode them, for mongodb\n\n      if (options.encode === true) {\n        row = encode.encodeObj(row);\n      }\n\n      return row;\n    });\n  };\n\n  var toJson_1$2 = toJson$4;\n\n  var toJson$3 = toJson_1$2;\n\n  const defaults$6 = {};\n\n  const normalize$1 = function (key = '') {\n    key = key.toLowerCase();\n    key = key.replace(/[_-]/g, ' ');\n    key = key.replace(/\\(.*?\\)/, '');\n    key = key.trim();\n    return key;\n  };\n\n  const Table = function (data, wiki = '') {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n    Object.defineProperty(this, '_wiki', {\n      enumerable: false,\n      value: wiki\n    });\n  };\n\n  const methods$4 = {\n    links(n) {\n      let links = [];\n      this.data.forEach(r => {\n        Object.keys(r).forEach(k => {\n          links = links.concat(r[k].links());\n        });\n      });\n\n      if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        let link = links.find(o => o.page() === n);\n        return link === undefined ? [] : [link];\n      }\n\n      return links;\n    },\n\n    get(keys) {\n      // normalize mappings\n      let have = this.data[0] || {};\n      let mapping = Object.keys(have).reduce((h, k) => {\n        h[normalize$1(k)] = k;\n        return h;\n      }, {}); // string gets a flat-list\n\n      if (typeof keys === 'string') {\n        let key = normalize$1(keys);\n        key = mapping[key] || key;\n        return this.data.map(row => {\n          return row[key] ? row[key].text() : null;\n        });\n      } // array gets obj-list\n\n\n      keys = keys.map(normalize$1).map(k => mapping[k] || k);\n      return this.data.map(row => {\n        return keys.reduce((h, k) => {\n          if (row[k]) {\n            h[k] = row[k].text();\n          } else {\n            h[k] = '';\n          }\n\n          return h;\n        }, {});\n      });\n    },\n\n    keyValue(options) {\n      let rows = this.json(options);\n      rows.forEach(row => {\n        Object.keys(row).forEach(k => {\n          row[k] = row[k].text;\n        });\n      });\n      return rows;\n    },\n\n    json(options) {\n      options = setDefaults(options, defaults$6);\n      return toJson$3(this.data, options);\n    },\n\n    text() {\n      return '';\n    },\n\n    wikitext() {\n      return this._wiki || '';\n    }\n\n  };\n  methods$4.keyvalue = methods$4.keyValue;\n  methods$4.keyval = methods$4.keyValue;\n  Object.keys(methods$4).forEach(k => {\n    Table.prototype[k] = methods$4[k];\n  });\n  var Table_1 = Table;\n\n  var tableParser = parse$5;\n\n  var require$$8$1 = Table_1;\n\n  const openReg = /^\\s*\\{\\|/;\n  const closeReg = /^\\s*\\|\\}/; //tables can be recursive, so looky-here.\n\n  const findTables = function (section) {\n    let list = [];\n    let wiki = section._wiki;\n    let lines = wiki.split('\\n');\n    let stack = [];\n\n    for (let i = 0; i < lines.length; i += 1) {\n      //start a table\n      if (openReg.test(lines[i]) === true) {\n        stack.push(lines[i]);\n        continue;\n      } //close a table\n\n\n      if (closeReg.test(lines[i]) === true) {\n        stack[stack.length - 1] += '\\n' + lines[i];\n        let table = stack.pop();\n        list.push(table);\n        continue;\n      } //keep-going on one\n\n\n      if (stack.length > 0) {\n        stack[stack.length - 1] += '\\n' + lines[i];\n      }\n    } //work-em together for a Table class\n\n\n    let tables = [];\n    list.forEach(str => {\n      if (str) {\n        //also re-remove a newline at the end of the table (awkward)\n        wiki = wiki.replace(str + '\\n', '');\n        wiki = wiki.replace(str, '');\n        let data = tableParser(str);\n\n        if (data && data.length > 0) {\n          tables.push(new require$$8$1(data, str));\n        }\n      }\n    });\n\n    if (tables.length > 0) {\n      section._tables = tables;\n    }\n\n    section._wiki = wiki;\n  };\n\n  var table = findTables;\n\n  const defaults$5 = {\n    sentences: true\n  };\n\n  const toJson$2 = function (p, options) {\n    options = setDefaults(options, defaults$5);\n    let data = {};\n\n    if (options.sentences === true) {\n      data.sentences = p.sentences().map(s => s.json(options));\n    }\n\n    return data;\n  };\n\n  var toJson_1$1 = toJson$2;\n\n  var toJSON$2 = toJson_1$1;\n\n  const defaults$4 = {\n    sentences: true,\n    lists: true,\n    images: true\n  };\n\n  const Paragraph = function (data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  const methods$3 = {\n    sentences: function () {\n      return this.data.sentences || [];\n    },\n    references: function () {\n      return this.data.references;\n    },\n    lists: function () {\n      return this.data.lists;\n    },\n\n    images() {\n      return this.data.images || [];\n    },\n\n    links: function (clue) {\n      let arr = [];\n      this.sentences().forEach(s => {\n        arr = arr.concat(s.links(clue));\n      });\n\n      if (typeof clue === 'string') {\n        //grab a specific link like .links('Fortnight')\n        clue = clue.charAt(0).toUpperCase() + clue.substring(1); //titlecase it\n\n        let link = arr.find(o => o.page() === clue);\n        return link === undefined ? [] : [link];\n      }\n\n      return arr || [];\n    },\n\n    interwiki() {\n      let arr = [];\n      this.sentences().forEach(s => {\n        arr = arr.concat(s.interwiki());\n      });\n      return arr || [];\n    },\n\n    text: function (options) {\n      options = setDefaults(options, defaults$4);\n      let str = this.sentences().map(s => s.text(options)).join(' ');\n      this.lists().forEach(list => {\n        str += '\\n' + list.text();\n      });\n      return str;\n    },\n    json: function (options) {\n      options = setDefaults(options, defaults$4);\n      return toJSON$2(this, options);\n    },\n    wikitext: function () {\n      return this.data.wiki;\n    }\n  };\n  methods$3.citations = methods$3.references;\n  Object.keys(methods$3).forEach(k => {\n    Paragraph.prototype[k] = methods$3[k];\n  }); // aliases\n\n  const singular$2 = {\n    sentences: 'sentence',\n    references: 'reference',\n    citation: 'citations',\n    lists: 'list',\n    images: 'image',\n    links: 'link'\n  };\n  Object.keys(singular$2).forEach(k => {\n    let sing = singular$2[k];\n\n    Paragraph.prototype[sing] = function (clue) {\n      let arr = this[k](clue);\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr[0];\n    };\n  });\n  var Paragraph_1 = Paragraph;\n\n  const opener = '[';\n  const closer = ']';\n  /**\n   *\n   * find all the pairs of '[[...[[..]]...]]' in the text\n   * used to properly root out recursive template calls, [[.. [[...]] ]]\n   * basically just adds open tags, and subtracts closing tags\n   *\n   * @private\n   * @param {string} text the text in which is searched in\n   * @returns {string[]} all the links in the text\n   */\n\n  function nested_find$1(text) {\n    let out = [];\n    let last = [];\n    const chars = text.split('');\n    let open = 0;\n\n    for (let i = 0; i < chars.length; i++) {\n      const c = text[i]; //increment open tag\n\n      if (c === opener) {\n        open += 1;\n      } //decrement close tag\n      else if (c === closer) {\n        open -= 1;\n\n        if (open < 0) {\n          open = 0;\n        }\n      } else if (last.length === 0) {\n        //If we're not inside of a pair of delimiters, we can discard the current letter.\n        //The return of this function is only used to extract images.\n        continue;\n      }\n\n      last.push(c);\n\n      if (open === 0 && last.length > 0) {\n        //first, fix botched parse\n        let open_count = 0;\n        let close_count = 0;\n\n        for (let j = 0; j < last.length; j++) {\n          if (last[j] === opener) {\n            open_count++;\n          } else if (last[j] === closer) {\n            close_count++;\n          }\n        } //is it botched?\n\n\n        if (open_count > close_count) {\n          last.push(closer);\n        } //looks good, keep it\n\n\n        out.push(last.join(''));\n        last = [];\n      }\n    }\n\n    return out;\n  }\n\n  var nested_find_1 = nested_find$1;\n\n  var require$$3$3 = Image_1;\n\n  var nested_find = nested_find_1;\n\n  const parseSentence$3 = require$$0$7.fromText; //regexes:\n\n  const isFile = new RegExp('(' + i18n.images.join('|') + '):', 'i');\n  let fileNames = `(${i18n.images.join('|')})`;\n  const file_reg = new RegExp(fileNames + ':(.+?)[\\\\||\\\\]]', 'iu'); //style directives for Wikipedia:Extended_image_syntax\n\n  const imgLayouts = {\n    thumb: true,\n    thumbnail: true,\n    border: true,\n    right: true,\n    left: true,\n    center: true,\n    top: true,\n    bottom: true,\n    none: true,\n    upright: true,\n    baseline: true,\n    middle: true,\n    sub: true,\n    super: true\n  }; //images are usually [[image:my_pic.jpg]]\n\n  const oneImage = function (img, doc) {\n    let m = img.match(file_reg);\n\n    if (m === null || !m[2]) {\n      return null;\n    }\n\n    let file = `${m[1]}:${m[2] || ''}`;\n    file = file.trim(); //titlecase it\n\n    let title = file.charAt(0).toUpperCase() + file.substring(1); //spaces to underscores\n\n    title = title.replace(/ /g, '_');\n\n    if (title) {\n      let obj = {\n        file: file,\n        lang: doc._lang,\n        domain: doc._domain,\n        wiki: img\n      }; //try to grab other metadata, too\n\n      img = img.replace(/^\\[\\[/, '');\n      img = img.replace(/\\]\\]$/, ''); //https://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax\n      //- [[File:Name|Type|Border|Location|Alignment|Size|link=Link|alt=Alt|lang=Langtag|Caption]]\n\n      let imgData = toJSON$3(img);\n      let arr = imgData.list || []; //parse-out alt text, if explicitly given\n\n      if (imgData.alt) {\n        obj.alt = imgData.alt;\n      } //remove 'thumb' and things\n\n\n      arr = arr.filter(str => imgLayouts.hasOwnProperty(str) === false);\n\n      if (arr[arr.length - 1]) {\n        obj.caption = parseSentence$3(arr[arr.length - 1]);\n      }\n\n      return new require$$3$3(obj);\n    }\n\n    return null;\n  };\n\n  const parseImages = function (paragraph, doc) {\n    let wiki = paragraph.wiki; //parse+remove scary '[[ [[]] ]]' stuff\n\n    let matches = nested_find(wiki);\n    matches.forEach(function (s) {\n      if (isFile.test(s) === true) {\n        paragraph.images = paragraph.images || [];\n        let img = oneImage(s, doc);\n\n        if (img) {\n          paragraph.images.push(img);\n        }\n\n        wiki = wiki.replace(s, '');\n      }\n    });\n    paragraph.wiki = wiki;\n  };\n\n  var image = parseImages;\n\n  const defaults$3 = {};\n\n  const toText$2 = (list, options) => {\n    return list.map(s => {\n      let str = s.text(options);\n      return ' * ' + str;\n    }).join('\\n');\n  };\n\n  const List = function (data, wiki = '') {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n    Object.defineProperty(this, 'wiki', {\n      enumerable: false,\n      value: wiki\n    });\n  };\n\n  const methods$2 = {\n    lines() {\n      return this.data;\n    },\n\n    links(clue) {\n      let links = [];\n      this.lines().forEach(s => {\n        links = links.concat(s.links());\n      });\n\n      if (typeof clue === 'string') {\n        //grab a link like .links('Fortnight')\n        clue = clue.charAt(0).toUpperCase() + clue.substring(1); //titlecase it\n\n        let link = links.find(o => o.page() === clue);\n        return link === undefined ? [] : [link];\n      }\n\n      return links;\n    },\n\n    json(options) {\n      options = setDefaults(options, defaults$3);\n      return this.lines().map(s => s.json(options));\n    },\n\n    text() {\n      return toText$2(this.data);\n    },\n\n    wikitext() {\n      return this.wiki || '';\n    }\n\n  };\n  Object.keys(methods$2).forEach(k => {\n    List.prototype[k] = methods$2[k];\n  });\n  var List_1 = List;\n\n  var require$$6$1 = List_1;\n\n  const parseSentence$2 = require$$0$7.fromText;\n  const list_reg = /^[#*:;|]+/;\n  const bullet_reg = /^\\*+[^:,|]{4}/;\n  const number_reg = /^ ?#[^:,|]{4}/;\n  const has_word = /[a-z_0-9\\]}]/i; // does it start with a bullet point or something?\n\n  const isList = function (line) {\n    return list_reg.test(line) || bullet_reg.test(line) || number_reg.test(line);\n  }; //make bullets/numbers into human-readable *'s\n\n\n  const cleanList = function (list) {\n    let number = 1;\n    list = list.filter(l => l);\n\n    for (let i = 0; i < list.length; i++) {\n      let line = list[i]; //add # numberings formatting\n\n      if (line.match(number_reg)) {\n        line = line.replace(/^ ?#*/, number + ') ');\n        line = line + '\\n';\n        number += 1;\n      } else if (line.match(list_reg)) {\n        number = 1;\n        line = line.replace(list_reg, '');\n      }\n\n      list[i] = parseSentence$2(line);\n    }\n\n    return list;\n  };\n\n  const grabList = function (lines, i) {\n    let sub = [];\n\n    for (let o = i; o < lines.length; o++) {\n      if (isList(lines[o])) {\n        sub.push(lines[o]);\n      } else {\n        break;\n      }\n    }\n\n    sub = sub.filter(a => a && has_word.test(a));\n    sub = cleanList(sub);\n    return sub;\n  };\n\n  const parseList = function (paragraph) {\n    let wiki = paragraph.wiki;\n    let lines = wiki.split(/\\n/g);\n    let lists = [];\n    let theRest = [];\n\n    for (let i = 0; i < lines.length; i++) {\n      if (isList(lines[i])) {\n        let sub = grabList(lines, i);\n\n        if (sub.length > 0) {\n          lists.push(sub);\n          i += sub.length - 1;\n        }\n      } else {\n        theRest.push(lines[i]);\n      }\n    }\n\n    paragraph.lists = lists.map(l => new require$$6$1(l, wiki));\n    paragraph.wiki = theRest.join('\\n');\n  };\n\n  var list$1 = parseList;\n\n  var require$$1$7 = Paragraph_1;\n\n  var require$$1$6 = image;\n\n  var require$$2$5 = list$1;\n\n  const parseSentences = require$$0$7.byParagraph;\n  const twoNewLines = /\\r?\\n\\r?\\n/;\n  const parse$4 = {\n    image: require$$1$6,\n    list: require$$2$5\n  };\n\n  const parseParagraphs = function (section, doc) {\n    let wiki = section._wiki;\n    let paragraphs = wiki.split(twoNewLines); //don't create empty paragraphs\n\n    paragraphs = paragraphs.filter(p => p && p.trim().length > 0);\n    paragraphs = paragraphs.map(str => {\n      let paragraph = {\n        wiki: str,\n        lists: [],\n        sentences: [],\n        images: []\n      }; //parse the lists\n\n      parse$4.list(paragraph); //parse images\n\n      parse$4.image(paragraph, doc); //parse the sentences\n\n      parseSentences(paragraph);\n      return new require$$1$7(paragraph);\n    });\n    section._wiki = wiki;\n    section._paragraphs = paragraphs;\n  };\n\n  var _03Paragraph = parseParagraphs;\n\n  const open = '{';\n  const close = '}'; //grab all first-level recursions of '{{...}}'\n\n  const findFlat$1 = function (wiki) {\n    let depth = 0;\n    let list = [];\n    let carry = [];\n\n    for (let i = wiki.indexOf(open); i !== -1 && i < wiki.length; depth > 0 ? i++ : i = wiki.indexOf(open, i + 1)) {\n      let c = wiki[i]; //open it\n\n      if (c === open) {\n        depth += 1;\n      } //close it\n\n\n      if (depth > 0) {\n        if (c === close) {\n          depth -= 1;\n\n          if (depth === 0) {\n            carry.push(c);\n            let tmpl = carry.join('');\n            carry = []; //last check\n\n            if (/\\{\\{/.test(tmpl) && /\\}\\}/.test(tmpl)) {\n              list.push(tmpl);\n            }\n\n            continue;\n          }\n        } //require two '{{' to open it\n\n\n        if (depth === 1 && c !== open && c !== close) {\n          depth = 0;\n          carry = [];\n          continue;\n        }\n\n        carry.push(c);\n      }\n    }\n\n    return list;\n  };\n\n  var _02Flat = findFlat$1;\n\n  //templates are usually '{{name|stuff}}'\n\n  const getName$1 = function (tmpl) {\n    let name = null; //{{name|foo}}\n\n    if (/^\\{\\{[^\\n]+\\|/.test(tmpl)) {\n      name = (tmpl.match(/^\\{\\{(.+?)\\|/) || [])[1];\n    } else if (tmpl.indexOf('\\n') !== -1) {\n      // {{name \\n...\n      name = (tmpl.match(/^\\{\\{(.+)\\n/) || [])[1];\n    } else {\n      //{{name here}}\n      name = (tmpl.match(/^\\{\\{(.+?)\\}\\}$/) || [])[1];\n    }\n\n    if (name) {\n      name = name.replace(/:.*/, '');\n      name = fmtName(name);\n    }\n\n    return name || null;\n  };\n\n  var _getName = getName$1;\n\n  var findFlat = _02Flat;\n\n  var getName = _getName;\n\n  const hasTemplate = /\\{\\{/;\n\n  const parseTemplate$2 = function (tmpl) {\n    // this is some unexplained Lua thing\n    tmpl = tmpl.replace(/#invoke:/, '');\n    return {\n      body: tmpl,\n      name: getName(tmpl),\n      children: []\n    };\n  };\n\n  const doEach = function (obj) {\n    // peel-off top-level\n    let wiki = obj.body.substr(2);\n    wiki = wiki.replace(/\\}\\}$/, ''); // get our child templates\n\n    obj.children = findFlat(wiki);\n    obj.children = obj.children.map(parseTemplate$2);\n\n    if (obj.children.length === 0) {\n      return obj;\n    } // recurse through children\n\n\n    obj.children.forEach(ch => {\n      let inside = ch.body.substr(2);\n\n      if (hasTemplate.test(inside)) {\n        return doEach(ch); //keep going\n      }\n\n      return null;\n    });\n    return obj;\n  }; // return a nested structure of all templates\n\n\n  const findTemplates$1 = function (wiki) {\n    let list = findFlat(wiki);\n    list = list.map(parseTemplate$2);\n    list = list.map(doEach);\n    return list;\n  };\n\n  var _01Nested = findTemplates$1;\n\n  //we explicitly ignore these, because they sometimes have resolve some data\n  const list = [//https://en.wikipedia.org/wiki/category:templates_with_no_visible_output\n  'anchor', 'defaultsort', 'use list-defined references', 'void', //https://en.wikipedia.org/wiki/Category:Protection_templates\n  'pp', 'pp-move-indef', 'pp-semi-indef', 'pp-vandalism', //https://en.wikipedia.org/wiki/Template:R\n  'r', //out-of-scope still - https://en.wikipedia.org/wiki/Template:Tag\n  '#tag', //https://en.wikipedia.org/wiki/Template:Navboxes\n  // 'navboxes',\n  // 'reflist',\n  // 'ref-list',\n  'div col', // 'authority control',\n  //https://en.wikipedia.org/wiki/Template:Citation_needed\n  // 'better source',\n  // 'citation needed',\n  // 'clarify',\n  // 'cite quote',\n  // 'dead link',\n  // 'by whom',\n  // 'dubious',\n  // 'when',\n  // 'who',\n  // 'quantify',\n  // 'refimprove',\n  // 'weasel inline',\n  //https://en.wikipedia.org/wiki/Template:End\n  'pope list end', 'shipwreck list end', 'starbox end', 'end box', 'end', 's-end'];\n  const ignore$1 = list.reduce((h, str) => {\n    h[str] = true;\n    return h;\n  }, {});\n  var _ignore = ignore$1;\n\n  var _infoboxes = {\n    'gnf protein box': true,\n    'automatic taxobox': true,\n    'chembox ': true,\n    editnotice: true,\n    geobox: true,\n    hybridbox: true,\n    ichnobox: true,\n    infraspeciesbox: true,\n    mycomorphbox: true,\n    oobox: true,\n    'paraphyletic group': true,\n    speciesbox: true,\n    subspeciesbox: true,\n    'starbox short': true,\n    taxobox: true,\n    nhlteamseason: true,\n    'asian games bid': true,\n    'canadian federal election results': true,\n    'dc thomson comic strip': true,\n    'daytona 24 races': true,\n    edencharacter: true,\n    'moldova national football team results': true,\n    samurai: true,\n    protein: true,\n    'sheet authority': true,\n    'order-of-approx': true,\n    'bacterial labs': true,\n    'medical resources': true,\n    ordination: true,\n    'hockey team coach': true,\n    'hockey team gm': true,\n    'pro hockey team': true,\n    'hockey team player': true,\n    'hockey team start': true,\n    mlbbioret: true\n  };\n  _infoboxes.editnotice;\n  _infoboxes.geobox;\n  _infoboxes.hybridbox;\n  _infoboxes.ichnobox;\n  _infoboxes.infraspeciesbox;\n  _infoboxes.mycomorphbox;\n  _infoboxes.oobox;\n  _infoboxes.speciesbox;\n  _infoboxes.subspeciesbox;\n  _infoboxes.taxobox;\n  _infoboxes.nhlteamseason;\n  _infoboxes.edencharacter;\n  _infoboxes.samurai;\n  _infoboxes.protein;\n  _infoboxes.ordination;\n  _infoboxes.mlbbioret;\n\n  var infoboxes = _infoboxes;\n\n  const i18nReg = new RegExp('^(subst.)?(' + i18n.infoboxes.join('|') + ')[: \\n]', 'i'); //some looser ones\n\n  const startReg = /^infobox /i;\n  const endReg = / infobox$/i;\n  const yearIn = /^year in [A-Z]/i; //some known ones from\n  //https://en.wikipedia.org/wiki/Wikipedia:List_of_infoboxes\n  //and https://en.wikipedia.org/wiki/Category:Infobox_templates\n\n  const isInfobox = function (name) {\n    //known\n    if (infoboxes.hasOwnProperty(name) === true) {\n      return true;\n    }\n\n    if (i18nReg.test(name)) {\n      return true;\n    }\n\n    if (startReg.test(name) || endReg.test(name)) {\n      return true;\n    } //these are also infoboxes: 'Year in Belarus'\n\n\n    if (yearIn.test(name)) {\n      return true;\n    }\n\n    return false;\n  }; //turns template data into good infobox data\n\n\n  const fmtInfobox = function (obj = {}) {\n    let m = obj.template.match(i18nReg);\n    let type = obj.template;\n\n    if (m && m[0]) {\n      type = type.replace(m[0], '');\n    }\n\n    type = type.trim();\n    let infobox = {\n      template: 'infobox',\n      type: type,\n      data: obj\n    };\n    delete infobox.data.template; //already have this.\n\n    delete infobox.data.list; //just in case!\n\n    return infobox;\n  };\n\n  var _infobox = {\n    isInfobox: isInfobox,\n    format: fmtInfobox\n  };\n\n  let aliases$1 = {\n    imdb: 'imdb name',\n    'imdb episodess': 'imdb episode',\n    localday: 'currentday',\n    localdayname: 'currentdayname',\n    localyear: 'currentyear',\n    'birth date based on age at death': 'birth based on age as of date',\n    'bare anchored list': 'anchored list',\n    cvt: 'convert',\n    cricon: 'flagicon',\n    sfrac: 'frac',\n    sqrt: 'radic',\n    'unreferenced section': 'unreferenced',\n    redir: 'redirect',\n    sisterlinks: 'sister project links',\n    'main article': 'main'\n  }; //multiple aliases\n\n  let multi = {\n    date: ['byline', 'dateline'],\n    //wikinews\n    citation: ['cite', 'source', 'source-pr', 'source-science'],\n    flagcountry: ['cr', 'cr-rt'],\n    trunc: ['str left', 'str crop'],\n    percentage: ['pct', 'percentage'],\n    rnd: ['rndfrac', 'rndnear'],\n    abbr: ['tooltip', 'abbrv', 'define'],\n    sfn: ['sfnref', 'harvid', 'harvnb'],\n    'birth date and age': ['death date and age', 'bda'],\n    currentmonth: ['localmonth', 'currentmonthname', 'currentmonthabbrev'],\n    currency: ['monnaie', 'unité', 'nombre', 'nb', 'iso4217'],\n    coord: ['coor', 'coor title dms', 'coor title dec', 'coor dms', 'coor dm', 'coor dec'],\n    'columns-list': ['cmn', 'col-list', 'columnslist', 'collist'],\n    nihongo: ['nihongo2', 'nihongo3', 'nihongo-s', 'nihongo foot'],\n    plainlist: ['flatlist', 'plain list'],\n    'winning percentage': ['winpct', 'winperc'],\n    'collapsible list': ['nblist', 'nonbulleted list', 'ubl', 'ublist', 'ubt', 'unbullet', 'unbulleted list', 'unbulleted', 'unbulletedlist', 'vunblist'],\n    'election box begin': ['election box begin no change', 'election box begin no party', 'election box begin no party no change', 'election box inline begin', 'election box inline begin no change'],\n    'election box candidate': ['election box candidate for alliance', 'election box candidate minor party', 'election box candidate no party link no change', 'election box candidate with party link', 'election box candidate with party link coalition 1918', 'election box candidate with party link no change', 'election box inline candidate', 'election box inline candidate no change', 'election box inline candidate with party link', 'election box inline candidate with party link no change', 'election box inline incumbent'],\n    '4teambracket': ['2teambracket', '4team2elimbracket', '8teambracket', '16teambracket', '32teambracket', '4roundbracket-byes', 'cwsbracket', 'nhlbracket', 'nhlbracket-reseed', '4teambracket-nhl', '4teambracket-ncaa', '4teambracket-mma', '4teambracket-mlb', '16teambracket-two-reseeds', '8teambracket-nhl', '8teambracket-mlb', '8teambracket-ncaa', '8teambracket-afc', '8teambracket-afl', '8teambracket-tennis3', '8teambracket-tennis5', '16teambracket-nhl', '16teambracket-nhl divisional', '16teambracket-nhl-reseed', '16teambracket-nba', '16teambracket-swtc', '16teambracket-afc', '16teambracket-tennis3', '16teambracket-tennis5'],\n    start: ['end', 'birth', 'death', 'start date', 'end date', 'birth date', 'death date', 'start date and age', 'end date and age', 'dob'],\n    'start-date': ['end-date', 'birth-date', 'death-date', 'birth-date and age', 'birth-date and given age', 'death-date and age', 'death-date and given age'],\n    tl: ['lts', 't', 'tfd links', 'tiw', 'tltt', 'tetl', 'tsetl', 'ti', 'tic', 'tiw', 'tlt', 'ttl', 'twlh', 'tl2', 'tlu', 'demo', 'hatnote', 'xpd', 'para', 'elc', 'xtag', 'mli', 'mlix', '#invoke', 'url' //https://en.wikipedia.org/wiki/Template:URL\n    ]\n  }; // - other languages -\n  // Polish, {{IPAc-pl}}\t{{IPAc-pl|'|sz|cz|e|ć|i|n}} → [ˈʂt͡ʂɛt͡ɕin]\n  // Portuguese, {{IPAc-pt}}\t{{IPAc-pt|p|o|<|r|t|u|'|g|a|l|lang=pt}} and {{IPAc-pt|b|r|a|'|s|i|l|lang=br}} → [puɾtuˈɣaɫ] and [bɾaˈsiw]\n\n  Object.keys(languages).forEach(lang => {\n    aliases$1['ipa-' + lang] = 'ipa';\n    aliases$1['ipac-' + lang] = 'ipac';\n  }); // add each alias in\n\n  Object.keys(multi).forEach(k => {\n    multi[k].forEach(str => {\n      aliases$1[str] = k;\n    });\n  });\n  var aliases_1 = aliases$1;\n\n  var hardcoded = {\n    '·': '·',\n    dot: '·',\n    middot: '·',\n    '•': ' • ',\n    ',': ',',\n    '1/2': '1⁄2',\n    '1/3': '1⁄3',\n    '2/3': '2⁄3',\n    '1/4': '1⁄4',\n    '3/4': '3⁄4',\n    '–': '–',\n    ndash: '–',\n    'en dash': '–',\n    'spaced ndash': ' – ',\n    '—': '—',\n    mdash: '—',\n    'em dash': '—',\n    'number sign': '#',\n    ibeam: 'I',\n    '&': '&',\n    ';': ';',\n    ampersand: '&',\n    snds: ' – ',\n    snd: ' – ',\n    '^': ' ',\n    '!': '|',\n    '\\\\': ' /',\n    '`': '`',\n    '=': '=',\n    bracket: '[',\n    '[': '[',\n    '*': '*',\n    asterisk: '*',\n    'long dash': '———',\n    clear: '\\n\\n',\n    'h.': 'ḥ',\n    profit: '▲',\n    loss: '▼',\n    gain: '▲'\n  };\n  hardcoded.dot;\n  hardcoded.middot;\n  hardcoded.ndash;\n  hardcoded.mdash;\n  hardcoded.ibeam;\n  hardcoded.ampersand;\n  hardcoded.snds;\n  hardcoded.snd;\n  hardcoded.bracket;\n  hardcoded.asterisk;\n  hardcoded.clear;\n  hardcoded.profit;\n  hardcoded.loss;\n  hardcoded.gain;\n\n  let templates$a = {\n    p1: 0,\n    p2: 1,\n    p3: 2,\n    resize: 1,\n    //https://en.wikipedia.org/wiki/Template:Resize\n    lang: 1,\n    'rtl-lang': 1,\n    l: 2,\n    h: 1,\n    //https://en.wikipedia.org/wiki/Template:Hover_title\n    sort: 1 //https://en.wikipedia.org/wiki/Template:Sort\n\n  }; //templates that we simply grab their insides as plaintext\n\n  let zeros = ['defn', 'lino', //https://en.wikipedia.org/wiki/Template:Linum\n  'finedetail', //https://en.wikipedia.org/wiki/Template:Finedetail\n  'nobold', 'noitalic', 'nocaps', 'vanchor', //https://en.wikipedia.org/wiki/Template:Visible_anchor\n  'rnd', 'date', //Explictly-set dates - https://en.wikipedia.org/wiki/Template:Date\n  'taste', 'monthname', 'baseball secondary style', 'lang-de', 'nowrap', 'nobr', 'big', 'cquote', 'pull quote', 'small', 'smaller', 'midsize', 'larger', 'big', 'kbd', 'bigger', 'large', 'mono', 'strongbad', 'stronggood', 'huge', 'xt', 'xt2', '!xt', 'xtn', 'xtd', 'dc', 'dcr', 'mxt', '!mxt', 'mxtn', 'mxtd', 'bxt', '!bxt', 'bxtn', 'bxtd', 'delink', //https://en.wikipedia.org/wiki/Template:Delink\n  'pre', 'var', 'mvar', 'pre2', 'code'];\n  zeros.forEach(k => {\n    templates$a[k] = 0;\n  }); //https://en.wikipedia.org/wiki/Category:Lang-x_templates\n\n  Object.keys(languages).forEach(k => {\n    templates$a['lang-' + k] = 0;\n  });\n  var shorthand$1 = templates$a;\n\n  const percentage = function (obj) {\n    if (!obj.numerator && !obj.denominator) {\n      return null;\n    }\n\n    let perc = Number(obj.numerator) / Number(obj.denominator);\n    perc *= 100;\n    let dec = Number(obj.decimals);\n\n    if (isNaN(dec)) {\n      dec = 1;\n    }\n\n    perc = perc.toFixed(dec);\n    return Number(perc);\n  };\n\n  const toNumber = function (str = '') {\n    if (typeof str === 'number') {\n      return str;\n    }\n\n    str = str.replace(/,/g, '');\n    str = str.replace(/−/g, '-');\n    let num = Number(str);\n\n    if (isNaN(num)) {\n      return str;\n    }\n\n    return num;\n  };\n\n  const getLang = function (name) {\n    //grab the language from the template name - 'ipa-de'\n    let lang = name.match(/ipac?-(.+)/);\n\n    if (lang !== null) {\n      if (languages.hasOwnProperty(lang[1]) === true) {\n        return languages[lang[1]].english_title;\n      }\n\n      return lang[1];\n    }\n\n    return null;\n  };\n\n  const titlecase$1 = str => {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n  };\n\n  const sisterProjects = {\n    wikt: 'wiktionary',\n    commons: 'commons',\n    c: 'commons',\n    commonscat: 'commonscat',\n    n: 'wikinews',\n    q: 'wikiquote',\n    s: 'wikisource',\n    a: 'wikiauthor',\n    b: 'wikibooks',\n    voy: 'wikivoyage',\n    v: 'wikiversity',\n    d: 'wikidata',\n    species: 'wikispecies',\n    m: 'meta',\n    mw: 'mediawiki'\n  };\n  var _lib$3 = {\n    titlecase: titlecase$1,\n    sisterProjects: sisterProjects,\n    getLang: getLang,\n    percentage: percentage,\n    toNumber: toNumber\n  };\n\n  var lib$1 = _lib$3;\n\n  var functions$2 = {\n    //https://en.wikipedia.org/wiki/Template:Ra\n    ra: tmpl => {\n      let obj = toJSON$3(tmpl, ['hours', 'minutes', 'seconds']);\n      return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':');\n    },\n    //https://en.wikipedia.org/wiki/Template:Deg2HMS\n    deg2hms: tmpl => {\n      //this template should do the conversion\n      let obj = toJSON$3(tmpl, ['degrees']);\n      return (obj.degrees || '') + '°';\n    },\n    hms2deg: tmpl => {\n      //this template should do the conversion too\n      let obj = toJSON$3(tmpl, ['hours', 'minutes', 'seconds']);\n      return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':');\n    },\n    decdeg: tmpl => {\n      //this template should do the conversion too\n      let obj = toJSON$3(tmpl, ['deg', 'min', 'sec', 'hem', 'rnd']);\n      return (obj.deg || obj.degrees) + '°';\n    },\n    //https://en.wikipedia.org/wiki/Template:Sortname\n    sortname: tmpl => {\n      let order = ['first', 'last', 'target', 'sort'];\n      let obj = toJSON$3(tmpl, order);\n      let name = `${obj.first || ''} ${obj.last || ''}`;\n      name = name.trim();\n\n      if (obj.nolink) {\n        return obj.target || name;\n      }\n\n      if (obj.dab) {\n        name += ` (${obj.dab})`;\n\n        if (obj.target) {\n          obj.target += ` (${obj.dab})`;\n        }\n      }\n\n      if (obj.target) {\n        return `[[${obj.target}|${name}]]`;\n      }\n\n      return `[[${name}]]`;\n    },\n    // https://en.wikipedia.org/wiki/Template:First_word\n    'first word': tmpl => {\n      let obj = toJSON$3(tmpl, ['text']);\n      let str = obj.text;\n\n      if (obj.sep) {\n        return str.split(obj.sep)[0];\n      }\n\n      return str.split(' ')[0];\n    },\n    trunc: tmpl => {\n      let order = ['str', 'len'];\n      let obj = toJSON$3(tmpl, order);\n      return obj.str.substr(0, obj.len);\n    },\n    'str mid': tmpl => {\n      let order = ['str', 'start', 'end'];\n      let obj = toJSON$3(tmpl, order);\n      let start = parseInt(obj.start, 10) - 1;\n      let end = parseInt(obj.end, 10);\n      return obj.str.substr(start, end);\n    },\n    reign: tmpl => {\n      let order = ['start', 'end'];\n      let obj = toJSON$3(tmpl, order);\n      return `(r. ${obj.start} – ${obj.end})`;\n    },\n    circa: tmpl => {\n      let obj = toJSON$3(tmpl, ['year']);\n      return `c. ${obj.year}`;\n    },\n    // https://en.wikipedia.org/wiki/Template:Decade_link\n    'decade link': tmpl => {\n      let obj = toJSON$3(tmpl, ['year']);\n      return `${obj.year}|${obj.year}s`;\n    },\n    // https://en.wikipedia.org/wiki/Template:Decade\n    decade: tmpl => {\n      let obj = toJSON$3(tmpl, ['year']);\n      let year = Number(obj.year);\n      year = parseInt(year / 10, 10) * 10; // round to decade\n\n      return `${year}s`;\n    },\n    // https://en.wikipedia.org/wiki/Template:Century\n    century: tmpl => {\n      let obj = toJSON$3(tmpl, ['year']);\n      let year = Number(obj.year);\n      year = parseInt(year / 100, 10) + 1;\n      return `${year}`;\n    },\n    //https://en.wikipedia.org/wiki/Template:Radic\n    radic: tmpl => {\n      let order = ['after', 'before'];\n      let obj = toJSON$3(tmpl, order);\n      return `${obj.before || ''}√${obj.after || ''}`;\n    },\n    'medical cases chart/row': tmpl => {\n      // Deprecated template; we keep it.\n      return tmpl;\n    },\n    //https://en.wikipedia.org/wiki/Template:OldStyleDate\n    oldstyledate: tmpl => {\n      let order = ['date', 'year'];\n      let obj = toJSON$3(tmpl, order);\n      return obj.year ? obj.date + ' ' + obj.year : obj.date;\n    },\n    //formatting things - https://en.wikipedia.org/wiki/Template:Nobold\n    braces: tmpl => {\n      let obj = toJSON$3(tmpl, ['text']);\n      let attrs = '';\n\n      if (obj.list) {\n        attrs = '|' + obj.list.join('|');\n      }\n\n      return '{{' + (obj.text || '') + attrs + '}}';\n    },\n    hlist: tmpl => {\n      let obj = toJSON$3(tmpl);\n      obj.list = obj.list || [];\n      return obj.list.join(' · ');\n    },\n    pagelist: tmpl => {\n      let arr = toJSON$3(tmpl).list || [];\n      return arr.join(', ');\n    },\n    //actually rendering these links removes the text.\n    //https://en.wikipedia.org/wiki/Template:Catlist\n    catlist: tmpl => {\n      let arr = toJSON$3(tmpl).list || [];\n      return arr.join(', ');\n    },\n    //https://en.wikipedia.org/wiki/Template:Br_separated_entries\n    'br separated entries': tmpl => {\n      let arr = toJSON$3(tmpl).list || [];\n      return arr.join('\\n\\n');\n    },\n    'comma separated entries': tmpl => {\n      let arr = toJSON$3(tmpl).list || [];\n      return arr.join(', ');\n    },\n    //https://en.wikipedia.org/wiki/Template:Bare_anchored_list\n    'anchored list': tmpl => {\n      let arr = toJSON$3(tmpl).list || [];\n      arr = arr.map((str, i) => `${i + 1}. ${str}`);\n      return arr.join('\\n\\n');\n    },\n    'bulleted list': tmpl => {\n      let arr = toJSON$3(tmpl).list || [];\n      arr = arr.filter(f => f);\n      arr = arr.map(str => '• ' + str);\n      return arr.join('\\n\\n');\n    },\n    //a strange, newline-based list - https://en.wikipedia.org/wiki/Template:Plainlist\n    plainlist: tmpl => {\n      tmpl = strip(tmpl);\n      let arr = tmpl.split('|').slice(1); //remove the title\n\n      arr = arr.join('|').split(/\\n ?\\* ?/); //split on newline\n\n      arr = arr.filter(s => s);\n      return arr.join('\\n\\n');\n    },\n    //https://en.wikipedia.org/wiki/Template:Term\n    term: tmpl => {\n      let obj = toJSON$3(tmpl, ['term']);\n      return `${obj.term}:`;\n    },\n    linum: tmpl => {\n      let obj = toJSON$3(tmpl, ['num', 'text']);\n      return `${obj.num}. ${obj.text}`;\n    },\n    'block indent': tmpl => {\n      let obj = toJSON$3(tmpl);\n\n      if (obj['1']) {\n        return '\\n' + obj['1'] + '\\n';\n      }\n\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Lbs\n    lbs: tmpl => {\n      let obj = toJSON$3(tmpl, ['text']);\n      return `[[${obj.text} Lifeboat Station|${obj.text}]]`;\n    },\n    //Foo-class\n    lbc: tmpl => {\n      let obj = toJSON$3(tmpl, ['text']);\n      return `[[${obj.text}-class lifeboat|${obj.text}-class]]`;\n    },\n    lbb: tmpl => {\n      let obj = toJSON$3(tmpl, ['text']);\n      return `[[${obj.text}-class lifeboat|${obj.text}]]`;\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    '#dateformat': tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let obj = toJSON$3(tmpl, ['date', 'format']);\n      return obj.date;\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    lc: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let obj = toJSON$3(tmpl, ['text']);\n      return (obj.text || '').toLowerCase();\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    uc: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let obj = toJSON$3(tmpl, ['text']);\n      return (obj.text || '').toUpperCase();\n    },\n    lcfirst: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let text = toJSON$3(tmpl, ['text']).text;\n\n      if (!text) {\n        return '';\n      }\n\n      return text[0].toLowerCase() + text.substr(1);\n    },\n    ucfirst: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let text = toJSON$3(tmpl, ['text']).text;\n\n      if (!text) {\n        return '';\n      }\n\n      return text[0].toUpperCase() + text.substr(1);\n    },\n    padleft: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let obj = toJSON$3(tmpl, ['text', 'num']);\n      let text = obj.text || '';\n      return text.padStart(obj.num, obj.str || '0');\n    },\n    padright: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let obj = toJSON$3(tmpl, ['text', 'num']);\n      let text = obj.text || '';\n      return text.padEnd(obj.num, obj.str || '0');\n    },\n    //https://en.wikipedia.org/wiki/Template:Abbrlink\n    abbrlink: tmpl => {\n      let obj = toJSON$3(tmpl, ['abbr', 'page']);\n\n      if (obj.page) {\n        return `[[${obj.page}|${obj.abbr}]]`;\n      }\n\n      return `[[${obj.abbr}]]`;\n    },\n    // https://en.wikipedia.org/wiki/Template:Own\n    own: tmpl => {\n      let obj = toJSON$3(tmpl, ['author']);\n      let str = 'Own work';\n\n      if (obj.author) {\n        str += ' by ' + obj.author;\n      }\n\n      return str;\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    formatnum: tmpl => {\n      tmpl = tmpl.replace(/:/, '|');\n      let obj = toJSON$3(tmpl, ['number']);\n      let str = obj.number || '';\n      str = str.replace(/,/g, '');\n      let num = Number(str);\n      return num.toLocaleString() || '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Frac\n    frac: tmpl => {\n      let order = ['a', 'b', 'c'];\n      let obj = toJSON$3(tmpl, order);\n\n      if (obj.c) {\n        return `${obj.a} ${obj.b}/${obj.c}`;\n      }\n\n      if (obj.b) {\n        return `${obj.a}/${obj.b}`;\n      }\n\n      return `1/${obj.b}`;\n    },\n    //https://en.wikipedia.org/wiki/Template:Convert#Ranges_of_values\n    convert: tmpl => {\n      let order = ['num', 'two', 'three', 'four'];\n      let obj = toJSON$3(tmpl, order); //todo: support plural units\n\n      if (obj.two === '-' || obj.two === 'to' || obj.two === 'and') {\n        if (obj.four) {\n          return `${obj.num} ${obj.two} ${obj.three} ${obj.four}`;\n        }\n\n        return `${obj.num} ${obj.two} ${obj.three}`;\n      }\n\n      return `${obj.num} ${obj.two}`;\n    },\n    // Large number of aliases - https://en.wikipedia.org/wiki/Template:Tl\n    tl: tmpl => {\n      let order = ['first', 'second'];\n      let obj = toJSON$3(tmpl, order);\n      return obj.second || obj.first;\n    },\n    //this one's a little different\n    won: tmpl => {\n      let data = toJSON$3(tmpl, ['text']);\n      return data.place || data.text || lib$1.titlecase(data.template);\n    },\n    //a convulated way to make a xml tag - https://en.wikipedia.org/wiki/Template:Tag\n    tag: tmpl => {\n      let obj = toJSON$3(tmpl, ['tag', 'open']);\n      const ignore = {\n        span: true,\n        div: true,\n        p: true\n      }; //pair, empty, close, single\n\n      if (!obj.open || obj.open === 'pair') {\n        //just skip generating spans and things..\n        if (ignore[obj.tag]) {\n          return obj.content || '';\n        }\n\n        return `<${obj.tag} ${obj.attribs || ''}>${obj.content || ''}</${obj.tag}>`;\n      }\n\n      return '';\n    },\n    //dumb inflector - https://en.wikipedia.org/wiki/Template:Plural\n    plural: tmpl => {\n      tmpl = tmpl.replace(/plural:/, 'plural|');\n      let order = ['num', 'word'];\n      let obj = toJSON$3(tmpl, order);\n      let num = Number(obj.num);\n      let word = obj.word;\n\n      if (num !== 1) {\n        if (/.y$/.test(word)) {\n          word = word.replace(/y$/, 'ies');\n        } else {\n          word += 's';\n        }\n      }\n\n      return num + ' ' + word;\n    },\n    //https://en.wikipedia.org/wiki/Template:DEC\n    dec: tmpl => {\n      let obj = toJSON$3(tmpl, ['degrees', 'minutes', 'seconds']);\n      let str = (obj.degrees || 0) + '°';\n\n      if (obj.minutes) {\n        str += obj.minutes + `′`;\n      }\n\n      if (obj.seconds) {\n        str += obj.seconds + '″';\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Val\n    val: tmpl => {\n      let obj = toJSON$3(tmpl, ['number', 'uncertainty']);\n      let num = obj.number;\n\n      if (num && Number(num)) {\n        num = Number(num).toLocaleString();\n      }\n\n      let str = num || ''; //prefix/suffix\n\n      if (obj.p) {\n        str = obj.p + str;\n      }\n\n      if (obj.s) {\n        str = obj.s + str;\n      } //add units, too\n\n\n      if (obj.u || obj.ul || obj.upl) {\n        str = str + ' ' + (obj.u || obj.ul || obj.upl);\n      }\n\n      return str;\n    },\n    //{{percentage | numerator | denominator | decimals to round to (zero or greater) }}\n    percentage: tmpl => {\n      let obj = toJSON$3(tmpl, ['numerator', 'denominator', 'decimals']);\n      let num = lib$1.percentage(obj);\n\n      if (num === null) {\n        return '';\n      }\n\n      return num + '%';\n    },\n    // {{Percent-done|done=N|total=N|digits=N}}\n    'percent-done': tmpl => {\n      let obj = toJSON$3(tmpl, ['done', 'total', 'digits']);\n      let num = lib$1.percentage({\n        numerator: obj.done,\n        denominator: obj.total,\n        decimals: obj.digits\n      });\n\n      if (num === null) {\n        return '';\n      }\n\n      return `${obj.done} (${num}%) done`;\n    }\n  };\n  functions$2.ra;\n  functions$2.deg2hms;\n  functions$2.hms2deg;\n  functions$2.decdeg;\n  functions$2.sortname;\n  functions$2.trunc;\n  functions$2.reign;\n  functions$2.circa;\n  functions$2.decade;\n  functions$2.century;\n  functions$2.radic;\n  functions$2.oldstyledate;\n  functions$2.braces;\n  functions$2.hlist;\n  functions$2.pagelist;\n  functions$2.catlist;\n  functions$2.plainlist;\n  functions$2.term;\n  functions$2.linum;\n  functions$2.lbs;\n  functions$2.lbc;\n  functions$2.lbb;\n  functions$2.lc;\n  functions$2.uc;\n  functions$2.lcfirst;\n  functions$2.ucfirst;\n  functions$2.padleft;\n  functions$2.padright;\n  functions$2.abbrlink;\n  functions$2.own;\n  functions$2.formatnum;\n  functions$2.frac;\n  functions$2.convert;\n  functions$2.tl;\n  functions$2.won;\n  functions$2.tag;\n  functions$2.plural;\n  functions$2.dec;\n  functions$2.val;\n  functions$2.percentage;\n\n  var flags$1 = [['🇦🇩', 'and', 'andorra'], ['🇦🇪', 'are', 'united arab emirates'], ['🇦🇫', 'afg', 'afghanistan'], ['🇦🇬', 'atg', 'antigua and barbuda'], ['🇦🇮', 'aia', 'anguilla'], ['🇦🇱', 'alb', 'albania'], ['🇦🇲', 'arm', 'armenia'], ['🇦🇴', 'ago', 'angola'], ['🇦🇶', 'ata', 'antarctica'], ['🇦🇷', 'arg', 'argentina'], ['🇦🇸', 'asm', 'american samoa'], ['🇦🇹', 'aut', 'austria'], ['🇦🇺', 'aus', 'australia'], ['🇦🇼', 'abw', 'aruba'], ['🇦🇽', 'ala', 'åland islands'], ['🇦🇿', 'aze', 'azerbaijan'], ['🇧🇦', 'bih', 'bosnia and herzegovina'], ['🇧🇧', 'brb', 'barbados'], ['🇧🇩', 'bgd', 'bangladesh'], ['🇧🇪', 'bel', 'belgium'], ['🇧🇫', 'bfa', 'burkina faso'], ['🇧🇬', 'bgr', 'bulgaria'], ['🇧🇬', 'bul', 'bulgaria'], //dupe\n  ['🇧🇭', 'bhr', 'bahrain'], ['🇧🇮', 'bdi', 'burundi'], ['🇧🇯', 'ben', 'benin'], ['🇧🇱', 'blm', 'saint barthélemy'], ['🇧🇲', 'bmu', 'bermuda'], ['🇧🇳', 'brn', 'brunei darussalam'], ['🇧🇴', 'bol', 'bolivia'], ['🇧🇶', 'bes', 'bonaire, sint eustatius and saba'], ['🇧🇷', 'bra', 'brazil'], ['🇧🇸', 'bhs', 'bahamas'], ['🇧🇹', 'btn', 'bhutan'], ['🇧🇻', 'bvt', 'bouvet island'], ['🇧🇼', 'bwa', 'botswana'], ['🇧🇾', 'blr', 'belarus'], ['🇧🇿', 'blz', 'belize'], ['🇨🇦', 'can', 'canada'], ['🇨🇨', 'cck', 'cocos (keeling) islands'], ['🇨🇩', 'cod', 'congo'], ['🇨🇫', 'caf', 'central african republic'], ['🇨🇬', 'cog', 'congo'], ['🇨🇭', 'che', 'switzerland'], ['🇨🇮', 'civ', 'côte d\\'ivoire'], ['🇨🇰', 'cok', 'cook islands'], ['🇨🇱', 'chl', 'chile'], ['🇨🇲', 'cmr', 'cameroon'], ['🇨🇳', 'chn', 'china'], ['🇨🇴', 'col', 'colombia'], ['🇨🇷', 'cri', 'costa rica'], ['🇨🇺', 'cub', 'cuba'], ['🇨🇻', 'cpv', 'cape verde'], ['🇨🇼', 'cuw', 'curaçao'], ['🇨🇽', 'cxr', 'christmas island'], ['🇨🇾', 'cyp', 'cyprus'], ['🇨🇿', 'cze', 'czech republic'], ['🇩🇪', 'deu', 'germany'], ['🇩🇪', 'ger', 'germany'], //alias\n  ['🇩🇯', 'dji', 'djibouti'], ['🇩🇰', 'dnk', 'denmark'], ['🇩🇲', 'dma', 'dominica'], ['🇩🇴', 'dom', 'dominican republic'], ['🇩🇿', 'dza', 'algeria'], ['🇪🇨', 'ecu', 'ecuador'], ['🇪🇪', 'est', 'estonia'], ['🇪🇬', 'egy', 'egypt'], ['🇪🇭', 'esh', 'western sahara'], ['🇪🇷', 'eri', 'eritrea'], ['🇪🇸', 'esp', 'spain'], ['🇪🇹', 'eth', 'ethiopia'], ['🇫🇮', 'fin', 'finland'], ['🇫🇯', 'fji', 'fiji'], ['🇫🇰', 'flk', 'falkland islands (malvinas)'], ['🇫🇲', 'fsm', 'micronesia'], ['🇫🇴', 'fro', 'faroe islands'], ['🇫🇷', 'fra', 'france'], ['🇬🇦', 'gab', 'gabon'], ['🇬🇧', 'gbr', 'united kingdom'], ['🇬🇩', 'grd', 'grenada'], //['🇬🇪', 'geo', 'georgia'],\n  ['🇬🇫', 'guf', 'french guiana'], ['🇬🇬', 'ggy', 'guernsey'], ['🇬🇭', 'gha', 'ghana'], ['🇬🇮', 'gib', 'gibraltar'], ['🇬🇱', 'grl', 'greenland'], ['🇬🇲', 'gmb', 'gambia'], ['🇬🇳', 'gin', 'guinea'], ['🇬🇵', 'glp', 'guadeloupe'], ['🇬🇶', 'gnq', 'equatorial guinea'], ['🇬🇷', 'grc', 'greece'], ['🇬🇸', 'sgs', 'south georgia'], ['🇬🇹', 'gtm', 'guatemala'], ['🇬🇺', 'gum', 'guam'], ['🇬🇼', 'gnb', 'guinea-bissau'], ['🇬🇾', 'guy', 'guyana'], ['🇭🇰', 'hkg', 'hong kong'], ['🇭🇲', 'hmd', 'heard island and mcdonald islands'], ['🇭🇳', 'hnd', 'honduras'], ['🇭🇷', 'hrv', 'croatia'], ['🇭🇹', 'hti', 'haiti'], ['🇭🇺', 'hun', 'hungary'], ['🇮🇩', 'idn', 'indonesia'], ['🇮🇪', 'irl', 'ireland'], ['🇮🇱', 'isr', 'israel'], ['🇮🇲', 'imn', 'isle of man'], ['🇮🇳', 'ind', 'india'], ['🇮🇴', 'iot', 'british indian ocean territory'], ['🇮🇶', 'irq', 'iraq'], ['🇮🇷', 'irn', 'iran'], ['🇮🇸', 'isl', 'iceland'], ['🇮🇹', 'ita', 'italy'], ['🇯🇪', 'jey', 'jersey'], ['🇯🇲', 'jam', 'jamaica'], ['🇯🇴', 'jor', 'jordan'], ['🇯🇵', 'jpn', 'japan'], ['🇰🇪', 'ken', 'kenya'], ['🇰🇬', 'kgz', 'kyrgyzstan'], ['🇰🇭', 'khm', 'cambodia'], ['🇰🇮', 'kir', 'kiribati'], ['🇰🇲', 'com', 'comoros'], ['🇰🇳', 'kna', 'saint kitts and nevis'], ['🇰🇵', 'prk', 'north korea'], ['🇰🇷', 'kor', 'south korea'], ['🇰🇼', 'kwt', 'kuwait'], ['🇰🇾', 'cym', 'cayman islands'], ['🇰🇿', 'kaz', 'kazakhstan'], ['🇱🇦', 'lao', 'lao people\\'s democratic republic'], ['🇱🇧', 'lbn', 'lebanon'], ['🇱🇨', 'lca', 'saint lucia'], ['🇱🇮', 'lie', 'liechtenstein'], ['🇱🇰', 'lka', 'sri lanka'], ['🇱🇷', 'lbr', 'liberia'], ['🇱🇸', 'lso', 'lesotho'], ['🇱🇹', 'ltu', 'lithuania'], ['🇱🇺', 'lux', 'luxembourg'], ['🇱🇻', 'lva', 'latvia'], ['🇱🇾', 'lby', 'libya'], ['🇲🇦', 'mar', 'morocco'], ['🇲🇨', 'mco', 'monaco'], ['🇲🇩', 'mda', 'moldova'], ['🇲🇪', 'mne', 'montenegro'], ['🇲🇫', 'maf', 'saint martin (french part)'], ['🇲🇬', 'mdg', 'madagascar'], ['🇲🇭', 'mhl', 'marshall islands'], ['🇲🇰', 'mkd', 'macedonia'], ['🇲🇱', 'mli', 'mali'], ['🇲🇲', 'mmr', 'myanmar'], ['🇲🇳', 'mng', 'mongolia'], ['🇲🇴', 'mac', 'macao'], ['🇲🇵', 'mnp', 'northern mariana islands'], ['🇲🇶', 'mtq', 'martinique'], ['🇲🇷', 'mrt', 'mauritania'], ['🇲🇸', 'msr', 'montserrat'], ['🇲🇹', 'mlt', 'malta'], ['🇲🇺', 'mus', 'mauritius'], ['🇲🇻', 'mdv', 'maldives'], ['🇲🇼', 'mwi', 'malawi'], ['🇲🇽', 'mex', 'mexico'], ['🇲🇾', 'mys', 'malaysia'], ['🇲🇿', 'moz', 'mozambique'], ['🇳🇦', 'nam', 'namibia'], ['🇳🇨', 'ncl', 'new caledonia'], ['🇳🇪', 'ner', 'niger'], ['🇳🇫', 'nfk', 'norfolk island'], ['🇳🇬', 'nga', 'nigeria'], ['🇳🇮', 'nic', 'nicaragua'], ['🇳🇱', 'nld', 'netherlands'], ['🇳🇴', 'nor', 'norway'], ['🇳🇵', 'npl', 'nepal'], ['🇳🇷', 'nru', 'nauru'], ['🇳🇺', 'niu', 'niue'], ['🇳🇿', 'nzl', 'new zealand'], ['🇴🇲', 'omn', 'oman'], ['🇵🇦', 'pan', 'panama'], ['🇵🇪', 'per', 'peru'], ['🇵🇫', 'pyf', 'french polynesia'], ['🇵🇬', 'png', 'papua new guinea'], ['🇵🇭', 'phl', 'philippines'], ['🇵🇰', 'pak', 'pakistan'], ['🇵🇱', 'pol', 'poland'], ['🇵🇲', 'spm', 'saint pierre and miquelon'], ['🇵🇳', 'pcn', 'pitcairn'], ['🇵🇷', 'pri', 'puerto rico'], ['🇵🇸', 'pse', 'palestinian territory'], ['🇵🇹', 'prt', 'portugal'], ['🇵🇼', 'plw', 'palau'], ['🇵🇾', 'pry', 'paraguay'], ['🇶🇦', 'qat', 'qatar'], ['🇷🇪', 'reu', 'réunion'], ['🇷🇴', 'rou', 'romania'], ['🇷🇸', 'srb', 'serbia'], ['🇷🇺', 'rus', 'russia'], ['🇷🇼', 'rwa', 'rwanda'], ['🇸🇦', 'sau', 'saudi arabia'], ['🇸🇧', 'slb', 'solomon islands'], ['🇸🇨', 'syc', 'seychelles'], ['🇸🇩', 'sdn', 'sudan'], ['🇸🇪', 'swe', 'sweden'], ['🇸🇬', 'sgp', 'singapore'], ['🇸🇭', 'shn', 'saint helena, ascension and tristan da cunha'], ['🇸🇮', 'svn', 'slovenia'], ['🇸🇯', 'sjm', 'svalbard and jan mayen'], ['🇸🇰', 'svk', 'slovakia'], ['🇸🇱', 'sle', 'sierra leone'], ['🇸🇲', 'smr', 'san marino'], ['🇸🇳', 'sen', 'senegal'], ['🇸🇴', 'som', 'somalia'], ['🇸🇷', 'sur', 'suriname'], ['🇸🇸', 'ssd', 'south sudan'], ['🇸🇹', 'stp', 'sao tome and principe'], ['🇸🇻', 'slv', 'el salvador'], ['🇸🇽', 'sxm', 'sint maarten (dutch part)'], ['🇸🇾', 'syr', 'syrian arab republic'], ['🇸🇿', 'swz', 'swaziland'], ['🇹🇨', 'tca', 'turks and caicos islands'], ['🇹🇩', 'tcd', 'chad'], ['🇹🇫', 'atf', 'french southern territories'], ['🇹🇬', 'tgo', 'togo'], ['🇹🇭', 'tha', 'thailand'], ['🇹🇯', 'tjk', 'tajikistan'], ['🇹🇰', 'tkl', 'tokelau'], ['🇹🇱', 'tls', 'timor-leste'], ['🇹🇲', 'tkm', 'turkmenistan'], ['🇹🇳', 'tun', 'tunisia'], ['🇹🇴', 'ton', 'tonga'], ['🇹🇷', 'tur', 'turkey'], ['🇹🇹', 'tto', 'trinidad and tobago'], ['🇹🇻', 'tuv', 'tuvalu'], ['🇹🇼', 'twn', 'taiwan'], ['🇹🇿', 'tza', 'tanzania'], ['🇺🇦', 'ukr', 'ukraine'], ['🇺🇬', 'uga', 'uganda'], ['🇺🇲', 'umi', 'united states minor outlying islands'], ['🇺🇸', 'us', 'united states'], //alias\n  ['🇺🇸', 'usa', 'united states'], ['🇺🇾', 'ury', 'uruguay'], ['🇺🇿', 'uzb', 'uzbekistan'], ['🇻🇦', 'vat', 'vatican city'], ['🇻🇨', 'vct', 'saint vincent and the grenadines'], ['🇻🇪', 'ven', 'venezuela'], ['🇻🇬', 'vgb', 'virgin islands, british'], ['🇻🇮', 'vir', 'virgin islands, u.s.'], ['🇻🇳', 'vnm', 'viet nam'], ['🇻🇺', 'vut', 'vanuatu'], ['🇼🇫', 'wlf', 'wallis and futuna'], ['🇼🇸', 'wsm', 'samoa'], ['🇾🇪', 'yem', 'yemen'], ['🇾🇹', 'myt', 'mayotte'], ['🇿🇦', 'zaf', 'south africa'], ['🇿🇲', 'zmb', 'zambia'], ['🇿🇼 ', 'zwe', 'zimbabwe'], //others (later unicode versions)\n  ['🇺🇳', 'un', 'united nations'], ['🏴󠁧󠁢󠁥󠁮󠁧󠁿󠁧󠁢󠁥󠁮󠁧󠁿', 'eng', 'england'], ['🏴󠁧󠁢󠁳󠁣󠁴󠁿', 'sct', 'scotland'], ['🏴󠁧󠁢󠁷󠁬󠁳󠁿', 'wal', 'wales'], ['🇪🇺', 'eu', 'european union']];\n\n  var flags = flags$1;\n\n  let templates$9 = {\n    //https://en.wikipedia.org/wiki/Template:Flag\n    // {{flag|USA}} →  USA\n    flag: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      let name = obj.flag || '';\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || [];\n      let flag = found[0] || '';\n      return `${flag} [[${found[2]}|${name}]]`;\n    },\n    // {{flagcountry|USA}} →  United States\n    flagcountry: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || [];\n      let flag = found[0] || '';\n      return `${flag} [[${found[2]}]]`;\n    },\n    // (unlinked flag-country)\n    flagcu: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || [];\n      let flag = found[0] || '';\n      return `${flag} ${found[2]}`;\n    },\n    //https://en.wikipedia.org/wiki/Template:Flagicon\n    // {{flagicon|USA}} → United States\n    flagicon: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]);\n\n      if (!found) {\n        return '';\n      }\n\n      return `[[${found[2]}|${found[0]}]]`;\n    },\n    //unlinked flagicon\n    flagdeco: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]) || [];\n      return found[0] || '';\n    },\n    //same, but a soccer team\n    fb: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]);\n\n      if (!found) {\n        return '';\n      }\n\n      return `${found[0]} [[${found[2]} national football team|${found[2]}]]`;\n    },\n    fbicon: tmpl => {\n      let order = ['flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]);\n\n      if (!found) {\n        return '';\n      }\n\n      return ` [[${found[2]} national football team|${found[0]}]]`;\n    },\n    flagathlete: tmpl => {\n      let order = ['name', 'flag', 'variant'];\n      let obj = toJSON$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      let found = flags.find(a => obj.flag === a[1] || obj.flag === a[2]);\n\n      if (!found) {\n        return `[[${obj.name || ''}]]`;\n      }\n\n      return `${found[0]} [[${obj.name || ''}]] (${found[1].toUpperCase()})`;\n    }\n  }; //support {{can}}\n\n  flags.forEach(a => {\n    templates$9[a[1]] = () => {\n      return a[0];\n    };\n  });\n  var flags_1 = templates$9;\n\n  const titlecase = lib$1.titlecase; //https://en.wikipedia.org/wiki/Template:Yes\n\n  let templates$8 = {};\n  let cells = ['rh', 'rh2', 'yes', 'no', 'maybe', 'eliminated', 'lost', 'safe', 'active', 'site active', 'coming soon', 'good', 'won', 'nom', 'sho', 'longlisted', 'tba', 'success', 'operational', 'failure', 'partial', 'regional', 'maybecheck', 'partial success', 'partial failure', 'okay', 'yes-no', 'some', 'nonpartisan', 'pending', 'unofficial', 'unofficial2', 'usually', 'rarely', 'sometimes', 'any', 'varies', 'black', 'non-album single', 'unreleased', 'unknown', 'perhaps', 'depends', 'included', 'dropped', 'terminated', 'beta', 'table-experimental', 'free', 'proprietary', 'nonfree', 'needs', 'nightly', 'release-candidate', 'planned', 'scheduled', 'incorrect', 'no result', 'cmain', 'calso starring', 'crecurring', 'cguest', 'not yet', 'optional'];\n  cells.forEach(str => {\n    templates$8[str] = tmpl => {\n      let data = toJSON$3(tmpl, ['text']);\n      return data.text || titlecase(data.template);\n    };\n  }); //these ones have a text result\n\n  let moreCells = [['active fire', 'Active'], ['site active', 'Active'], ['site inactive', 'Inactive'], ['yes2', ''], ['no2', ''], ['ya', '✅'], ['na', '❌'], ['nom', 'Nominated'], ['sho', 'Shortlisted'], ['tba', 'TBA'], ['maybecheck', '✔️'], ['okay', 'Neutral'], ['n/a', 'N/A'], ['sdash', '—'], ['dunno', '?'], ['draw', ''], ['cnone', ''], ['nocontest', '']];\n  moreCells.forEach(a => {\n    templates$8[a[0]] = tmpl => {\n      let data = toJSON$3(tmpl, ['text']);\n      return data.text || a[1];\n    };\n  });\n  var tableCell = templates$8;\n\n  var require$$0$6 = hardcoded;\n\n  var require$$1$5 = shorthand$1;\n\n  var require$$2$4 = functions$2;\n\n  var require$$3$2 = flags_1;\n\n  var require$$4$2 = tableCell;\n\n  var textOnly = Object.assign({}, require$$0$6, require$$1$5, require$$2$4, require$$3$2, require$$4$2);\n\n  let templates$7 = {}; // these all have ['id', 'name']\n\n  let idName = ['goodreads author', 'twitter', 'facebook', 'instagram', 'tumblr', 'pinterest', 'espn nfl', 'espn nhl', 'espn fc', 'hockeydb', 'fifa player', 'worldcat', 'worldcat id', 'nfl player', 'ted speaker', 'playmate'];\n  idName.forEach(name => {\n    templates$7[name] = ['id', 'name'];\n  });\n  var idName_1 = templates$7;\n\n  let templates$6 = {}; // these all have ['id', 'title', 'description', 'section']\n\n  let idTitle = ['imdb title', //https://en.wikipedia.org/wiki/Template:IMDb_title\n  'imdb name', 'imdb episode', 'imdb event', 'afi film', 'allmovie title', 'allgame', 'tcmdb title', 'discogs artist', 'discogs label', 'discogs release', 'discogs master', 'librivox author', 'musicbrainz artist', 'musicbrainz label', 'musicbrainz recording', 'musicbrainz release', 'musicbrainz work', 'youtube', 'goodreads book', 'dmoz' //https://en.wikipedia.org/wiki/Template:DMOZ\n  ];\n  idTitle.forEach(name => {\n    templates$6[name] = ['id', 'title', 'description', 'section'];\n  });\n  var idTitle_1 = templates$6;\n\n  var functions$1 = {\n    // https://en.wikipedia.org/wiki/Template:IPA\n    ipa: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['transcription', 'lang', 'audio']);\n      obj.lang = lib$1.getLang(obj.template);\n      obj.template = 'ipa';\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:IPAc-en\n    ipac: (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      obj.transcription = (obj.list || []).join(',');\n      delete obj.list;\n      obj.lang = lib$1.getLang(obj.template);\n      obj.template = 'ipac';\n      list.push(obj);\n      return '';\n    },\n    quote: (tmpl, list) => {\n      let order = ['text', 'author'];\n      let obj = toJSON$3(tmpl, order);\n      list.push(obj); //create plaintext version\n\n      if (obj.text) {\n        let str = `\"${obj.text}\"`;\n\n        if (obj.author) {\n          str += '\\n\\n';\n          str += `    - ${obj.author}`;\n        }\n\n        return str + '\\n';\n      }\n\n      return '';\n    },\n    //this one sucks - https://en.wikipedia.org/wiki/Template:GNIS\n    'cite gnis': (tmpl, list) => {\n      let order = ['id', 'name', 'type'];\n      let obj = toJSON$3(tmpl, order);\n      obj.type = 'gnis';\n      obj.template = 'citation';\n      list.push(obj);\n      return '';\n    },\n    'spoken wikipedia': (tmpl, list) => {\n      let order = ['file', 'date'];\n      let obj = toJSON$3(tmpl, order);\n      obj.template = 'audio';\n      list.push(obj);\n      return '';\n    },\n    //yellow card\n    yel: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['min']);\n      list.push(obj);\n\n      if (obj.min) {\n        return `yellow: ${obj.min || ''}'`; //no yellow-card emoji\n      }\n\n      return '';\n    },\n    subon: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['min']);\n      list.push(obj);\n\n      if (obj.min) {\n        return `sub on: ${obj.min || ''}'`; //no yellow-card emoji\n      }\n\n      return '';\n    },\n    suboff: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['min']);\n      list.push(obj);\n\n      if (obj.min) {\n        return `sub off: ${obj.min || ''}'`; //no yellow-card emoji\n      }\n\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Sfn\n    sfn: (tmpl, list, parser, alias) => {\n      let order = ['author', 'year', 'location'];\n      let obj = toJSON$3(tmpl, order);\n\n      if (alias) {\n        obj.name = obj.template;\n        obj.teplate = alias;\n      }\n\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Redirect\n    redirect: (tmpl, list) => {\n      let data = toJSON$3(tmpl, ['redirect']);\n      let lines = data.list || [];\n      let links = [];\n\n      for (let i = 0; i < lines.length; i += 2) {\n        links.push({\n          page: lines[i + 1],\n          desc: lines[i]\n        });\n      }\n\n      let obj = {\n        template: 'redirect',\n        redirect: data.redirect,\n        links: links\n      };\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Sister_project_links\n    'sister project links': (tmpl, list) => {\n      let data = toJSON$3(tmpl); //rename 'wd' to 'wikidata'\n\n      let links = {};\n      Object.keys(lib$1.sisterProjects).forEach(k => {\n        if (data.hasOwnProperty(k) === true) {\n          links[lib$1.sisterProjects[k]] = data[k]; //.text();\n        }\n      });\n      let obj = {\n        template: 'sister project links',\n        links: links\n      };\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Subject_bar\n    'subject bar': (tmpl, list) => {\n      let data = toJSON$3(tmpl);\n      Object.keys(data).forEach(k => {\n        //rename 'voy' to 'wikivoyage'\n        if (lib$1.sisterProjects.hasOwnProperty(k)) {\n          data[lib$1.sisterProjects[k]] = data[k];\n          delete data[k];\n        }\n      });\n      let obj = {\n        template: 'subject bar',\n        links: data\n      };\n      list.push(obj);\n      return '';\n    },\n    //amazingly, this one does not obey any known patterns\n    //https://en.wikipedia.org/wiki/Template:Gallery\n    gallery: (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      let images = (obj.list || []).filter(line => /^ *File ?:/.test(line));\n      images = images.map(file => {\n        let img = {\n          file: file\n        }; // todo: add lang and domain information\n\n        return new require$$3$3(img).json();\n      });\n      obj = {\n        template: 'gallery',\n        images: images\n      };\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Sky\n    sky: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['asc_hours', 'asc_minutes', 'asc_seconds', 'dec_sign', 'dec_degrees', 'dec_minutes', 'dec_seconds', 'distance']);\n      let template = {\n        template: 'sky',\n        ascension: {\n          hours: obj.asc_hours,\n          minutes: obj.asc_minutes,\n          seconds: obj.asc_seconds\n        },\n        declination: {\n          sign: obj.dec_sign,\n          degrees: obj.dec_degrees,\n          minutes: obj.dec_minutes,\n          seconds: obj.dec_seconds\n        },\n        distance: obj.distance\n      };\n      list.push(template);\n      return '';\n    },\n    // Parse https://en.wikipedia.org/wiki/Template:Medical_cases_chart -- see\n    // https://en.wikipedia.org/wiki/Module:Medical_cases_chart for the original\n    // parsing code.\n    'medical cases chart': (tmpl, list) => {\n      let order = ['date', 'deathsExpr', 'recoveriesExpr', 'casesExpr', '4thExpr', '5thExpr', 'col1', 'col1Change', 'col2', 'col2Change'];\n      let obj = toJSON$3(tmpl);\n      obj.data = obj.data || '';\n      let rows = obj.data.split('\\n'); // Mimic row parsing in _buildBars in the Lua source, from the following\n      // line on:\n      //\n      //     for parameter in mw.text.gsplit(line, ';') do\n\n      let dataArray = rows.map(row => {\n        let parameters = row.split(';');\n        let rowObject = {\n          options: new Map()\n        };\n        let positionalIndex = 0;\n\n        for (let i = 0; i < parameters.length; i++) {\n          let parameter = parameters[i].trim();\n\n          if (parameter.match(/^[a-zA-Z_]/)) {\n            // Named argument\n            let [key, value] = parameter.split('='); // At this point, the Lua code evaluates alttot1 and alttot2 values as\n            // #expr expressions, but we just pass them through. See also:\n            // https://www.mediawiki.org/wiki/Help:Extension:ParserFunctions##expr\n\n            if (value === undefined) {\n              value = null;\n            }\n\n            rowObject.options.set(key, value);\n          } else {\n            // Positional argument\n            // Here again, the Lua code evaluates arguments at index 1 through 5\n            // as #expr expressions, but we just pass them through.\n            if (positionalIndex < order.length) {\n              rowObject[order[positionalIndex]] = parameter;\n            }\n\n            positionalIndex++;\n          }\n        }\n\n        for (; positionalIndex < order.length; positionalIndex++) {\n          rowObject[order[positionalIndex]] = null;\n        }\n\n        return rowObject;\n      });\n      obj.data = dataArray;\n      list.push(obj);\n      return '';\n    },\n    graph: (tmpl, list) => {\n      let data = toJSON$3(tmpl);\n\n      if (data.x) {\n        data.x = data.x.split(',').map(str => str.trim());\n      }\n\n      if (data.y) {\n        data.y = data.y.split(',').map(str => str.trim());\n      }\n\n      let y = 1;\n\n      while (data['y' + y]) {\n        data['y' + y] = data['y' + y].split(',').map(str => str.trim());\n        y += 1;\n      }\n\n      list.push(data);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Historical_populations\n    'historical populations': (tmpl, list) => {\n      let data = toJSON$3(tmpl);\n      data.list = data.list || [];\n      let years = [];\n\n      for (let i = 0; i < data.list.length; i += 2) {\n        let num = data.list[i + 1];\n        years.push({\n          year: data.list[i],\n          val: Number(num) || num\n        });\n      }\n\n      data.data = years;\n      delete data.list;\n      list.push(data);\n      return '';\n    },\n    // this one is a handful!\n    //https://en.wikipedia.org/wiki/Template:Weather_box\n    'weather box': (tmpl, list) => {\n      const hasMonth = /^jan /i;\n      const isYear = /^year /i;\n      let obj = toJSON$3(tmpl);\n      const monthList = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n      let byMonth = {};\n      let properties = Object.keys(obj).filter(k => hasMonth.test(k));\n      properties = properties.map(k => k.replace(hasMonth, ''));\n      properties.forEach(prop => {\n        byMonth[prop] = [];\n        monthList.forEach(m => {\n          let key = `${m} ${prop}`;\n\n          if (obj.hasOwnProperty(key)) {\n            let num = lib$1.toNumber(obj[key]);\n            delete obj[key];\n            byMonth[prop].push(num);\n          }\n        });\n      }); //add these to original\n\n      obj.byMonth = byMonth; //collect year-based data\n\n      let byYear = {};\n      Object.keys(obj).forEach(k => {\n        if (isYear.test(k)) {\n          let prop = k.replace(isYear, '');\n          byYear[prop] = obj[k];\n          delete obj[k];\n        }\n      });\n      obj.byYear = byYear;\n      list.push(obj);\n      return '';\n    },\n    //The 36 parameters are: 12 monthly highs (C), 12 lows (total 24) plus an optional 12 monthly rain/precipitation\n    //https://en.wikipedia.org/wiki/Template:Weather_box/concise_C\n    'weather box/concise c': (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      obj.list = obj.list.map(s => lib$1.toNumber(s));\n      obj.byMonth = {\n        'high c': obj.list.slice(0, 12),\n        'low c': obj.list.slice(12, 24),\n        'rain mm': obj.list.slice(24, 36)\n      };\n      delete obj.list;\n      obj.template = 'weather box';\n      list.push(obj);\n      return '';\n    },\n    'weather box/concise f': (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      obj.list = obj.list.map(s => lib$1.toNumber(s));\n      obj.byMonth = {\n        'high f': obj.list.slice(0, 12),\n        'low f': obj.list.slice(12, 24),\n        'rain inch': obj.list.slice(24, 36)\n      };\n      delete obj.list;\n      obj.template = 'weather box';\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Climate_chart\n    'climate chart': (tmpl, list) => {\n      let lines = toJSON$3(tmpl).list || [];\n      let title = lines[0];\n      let source = lines[38];\n      lines = lines.slice(1); //amazingly, they use '−' symbol here instead of negatives...\n\n      lines = lines.map(str => {\n        if (str && str[0] === '−') {\n          str = str.replace(/−/, '-');\n        }\n\n        return str;\n      });\n      let months = []; //groups of three, for 12 months\n\n      for (let i = 0; i < 36; i += 3) {\n        months.push({\n          low: lib$1.toNumber(lines[i]),\n          high: lib$1.toNumber(lines[i + 1]),\n          precip: lib$1.toNumber(lines[i + 2])\n        });\n      }\n\n      let obj = {\n        template: 'climate chart',\n        data: {\n          title: title,\n          source: source,\n          months: months\n        }\n      };\n      list.push(obj);\n      return '';\n    }\n  };\n  functions$1.ipa;\n  functions$1.ipac;\n  functions$1.quote;\n  functions$1.yel;\n  functions$1.subon;\n  functions$1.suboff;\n  functions$1.sfn;\n  functions$1.redirect;\n  functions$1.gallery;\n  functions$1.sky;\n  functions$1.graph;\n\n  var require$$0$5 = idName_1;\n\n  var require$$1$4 = idTitle_1;\n\n  var require$$2$3 = functions$1;\n\n  let templates$5 = {\n    //https://en.wikipedia.org/wiki/Category:External_link_templates\n    'find a grave': ['id', 'name', 'work', 'last', 'first', 'date', 'accessdate'],\n    congbio: ['id', 'name', 'date'],\n    'hollywood walk of fame': ['name'],\n    'wide image': ['file', 'width', 'caption'],\n    audio: ['file', 'text', 'type'],\n    rp: ['page'],\n    'short description': ['description'],\n    'coord missing': ['region'],\n    unreferenced: ['date'],\n    'taxon info': ['taxon', 'item'],\n    //https://en.wikipedia.org/wiki/Template:Taxon_info\n    'portuguese name': ['first', 'second', 'suffix'],\n    // https://en.wikipedia.org/wiki/Template:Portuguese_name\n    geo: ['lat', 'lon', 'zoom'] //https://en.wikivoyage.org/wiki/Template:Geo\n\n  };\n  templates$5 = Object.assign(templates$5, require$$0$5, require$$1$4, require$$2$3);\n  var dataOnly = templates$5;\n\n  var shorthand = {\n    mlbplayer: {\n      props: ['number', 'name', 'il'],\n      out: 'name'\n    },\n    syntaxhighlight: {\n      props: [],\n      out: 'code'\n    },\n    samp: {\n      props: ['1'],\n      out: '1'\n    },\n    //https://en.wikipedia.org/wiki/Template:Sub\n    sub: {\n      props: ['text'],\n      out: 'text'\n    },\n    //https://en.wikipedia.org/wiki/Template:Sup\n    sup: {\n      props: ['text'],\n      out: 'text'\n    },\n    //https://en.wikipedia.org/wiki/Template:Chem2\n    chem2: {\n      props: ['equation'],\n      out: 'equation'\n    },\n    //https://en.wikipedia.org/wiki/Template:Interlanguage_link\n    ill: {\n      props: ['text', 'lan1', 'text1', 'lan2', 'text2'],\n      out: 'text'\n    },\n    //https://en.wikipedia.org/wiki/Template:Abbr\n    abbr: {\n      props: ['abbr', 'meaning', 'ipa'],\n      out: 'abbr'\n    } // name: {\n    //   props: [],\n    //   out: '',\n    // },\n\n  };\n  shorthand.mlbplayer;\n  shorthand.syntaxhighlight;\n  shorthand.samp;\n  shorthand.sub;\n  shorthand.sup;\n  shorthand.chem2;\n  shorthand.ill;\n  shorthand.abbr;\n\n  let templates$4 = {\n    // https://en.wikipedia.org/wiki/Template:Math\n    math: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['formula']);\n      list.push(obj);\n      return '\\n\\n' + (obj.formula || '') + '\\n\\n';\n    },\n    isbn: (tmpl, list) => {\n      let order = ['id', 'id2', 'id3'];\n      let obj = toJSON$3(tmpl, order);\n      list.push(obj);\n      return 'ISBN: ' + (obj.id || '');\n    },\n    //https://en.wikipedia.org/wiki/Template:Based_on\n    'based on': (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['title', 'author']);\n      list.push(obj);\n      return `${obj.title} by ${obj.author || ''}`;\n    },\n    //barrels of oil https://en.wikipedia.org/wiki/Template:Bbl_to_t\n    'bbl to t': (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['barrels']);\n      list.push(obj);\n\n      if (obj.barrels === '0') {\n        return obj.barrels + ' barrel';\n      }\n\n      return obj.barrels + ' barrels';\n    },\n    //minor planet - https://en.wikipedia.org/wiki/Template:MPC\n    mpc: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['number', 'text']);\n      list.push(obj);\n      return `[https://minorplanetcenter.net/db_search/show_object?object_id=P/2011+NO1 ${obj.text || obj.number}]`;\n    },\n    pengoal: (tmpl, list) => {\n      list.push({\n        template: 'pengoal'\n      });\n      return '✅';\n    },\n    penmiss: (tmpl, list) => {\n      list.push({\n        template: 'penmiss'\n      });\n      return '❌';\n    },\n    // https://en.wikipedia.org/wiki/Template:Ordered_list\n    'ordered list': (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      list.push(obj);\n      obj.list = obj.list || [];\n      let lines = obj.list.map((str, i) => `${i + 1}. ${str}`);\n      return lines.join('\\n\\n');\n    },\n    // https://en.wikipedia.org/wiki/Template:Title_year\n    'title year': (tmpl, _list, _alias, _parse, doc) => {\n      let obj = toJSON$3(tmpl, ['match', 'nomatch', 'page']);\n      let title = obj.page || doc.title();\n\n      if (title) {\n        let m = title.match(/\\b[0-9]{4}\\b/); //parse the year out of the title's name\n\n        if (m) {\n          return m[0];\n        }\n      }\n\n      return obj.nomatch || ''; //use default response\n    },\n    // https://en.wikipedia.org/wiki/Template:Title_century\n    'title century': (tmpl, _list, _alias, _parse, doc) => {\n      let obj = toJSON$3(tmpl, ['match', 'nomatch', 'page']);\n      let title = obj.page || doc.title();\n\n      if (title) {\n        let m = title.match(/\\b([0-9]+)(st|nd|rd|th)\\b/); //parse the century out of the title's name\n\n        if (m) {\n          return m[1] || '';\n        }\n      }\n\n      return obj.nomatch || ''; //use default response\n    },\n    // https://en.wikipedia.org/wiki/Template:Title_decade\n    'title decade': (tmpl, _list, _alias, _parse, doc) => {\n      let obj = toJSON$3(tmpl, ['match', 'nomatch', 'page']);\n      let title = obj.page || doc.title();\n\n      if (title) {\n        let m = title.match(/\\b([0-9]+)s\\b/); //parse the decade out of the title's name\n\n        if (m) {\n          return m[1] || '';\n        }\n      }\n\n      return obj.nomatch || ''; //use default response\n    },\n    //https://en.wikipedia.org/wiki/Template:Nihongo\n    nihongo: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['english', 'kanji', 'romaji', 'extra']);\n      list.push(obj);\n      let str = obj.english || obj.romaji || '';\n\n      if (obj.kanji) {\n        str += ` (${obj.kanji})`;\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Marriage\n    //this one creates a template, and an inline response\n    marriage: (tmpl, list) => {\n      let data = toJSON$3(tmpl, ['spouse', 'from', 'to', 'end']);\n      list.push(data);\n      let str = data.spouse || '';\n\n      if (data.from) {\n        if (data.to) {\n          str += ` (m. ${data.from}-${data.to})`;\n        } else {\n          str += ` (m. ${data.from})`;\n        }\n      }\n\n      return str;\n    },\n    //'red' card - {{sent off|cards|min1|min2}}\n    'sent off': (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['cards']);\n      let result = {\n        template: 'sent off',\n        cards: obj.cards,\n        minutes: obj.list || []\n      };\n      list.push(result);\n      let mins = result.minutes.map(m => m + \"'\").join(', ');\n      return 'sent off: ' + mins;\n    },\n    transl: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['lang', 'text', 'text2']); // support 3-param\n\n      if (obj.text2) {\n        obj.iso = obj.text;\n        obj.text = obj.text2;\n        delete obj.text2;\n      }\n\n      list.push(obj);\n      return obj.text || '';\n    },\n    //show/hide: https://en.wikipedia.org/wiki/Template:Collapsible_list\n    'collapsible list': (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      list.push(obj);\n      let str = '';\n\n      if (obj.title) {\n        str += `'''${obj.title}'''` + '\\n\\n';\n      }\n\n      if (!obj.list) {\n        obj.list = [];\n\n        for (let i = 1; i < 10; i += 1) {\n          if (obj[i]) {\n            obj.list.push(obj[i]);\n            delete obj[i];\n          }\n        }\n      }\n\n      obj.list = obj.list.filter(s => s);\n      str += obj.list.join('\\n\\n');\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Columns-list\n    'columns-list': (tmpl, list) => {\n      let arr = toJSON$3(tmpl).list || [];\n      let str = arr[0] || '';\n      let lines = str.split(/\\n/).filter(f => f);\n      lines = lines.map(s => s.replace(/\\*/, ''));\n      list.push({\n        template: 'columns-list',\n        list: lines\n      });\n      lines = lines.map(s => '• ' + s);\n      return lines.join('\\n\\n');\n    },\n    //https://en.wikipedia.org/wiki/Template:Height - {{height|ft=6|in=1}}\n    height: (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      list.push(obj);\n      let result = [];\n      let units = ['m', 'cm', 'ft', 'in']; //order matters\n\n      units.forEach(unit => {\n        if (obj.hasOwnProperty(unit) === true) {\n          result.push(obj[unit] + unit);\n        }\n      });\n      return result.join(' ');\n    },\n    //https://en.wikipedia.org/wiki/Template:Sic\n    sic: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['one', 'two', 'three']);\n      let word = (obj.one || '') + (obj.two || ''); //support '[sic?]'\n\n      if (obj.one === '?') {\n        word = (obj.two || '') + (obj.three || '');\n      }\n\n      list.push({\n        template: 'sic',\n        word: word\n      });\n\n      if (obj.nolink === 'y') {\n        return word;\n      }\n\n      return `${word} [sic]`;\n    },\n    //\n    inrconvert: (tmpl, list) => {\n      let o = toJSON$3(tmpl, ['rupee_value', 'currency_formatting']);\n      list.push(o);\n      const mults = {\n        k: 1000,\n        m: 1000000,\n        b: 1000000000,\n        t: 1000000000000,\n        l: 100000,\n        c: 10000000,\n        lc: 1000000000000\n      };\n\n      if (o.currency_formatting) {\n        let multiplier = mults[o.currency_formatting] || 1;\n        o.rupee_value = o.rupee_value * multiplier;\n      }\n\n      return `inr ${o.rupee_value || ''}`;\n    },\n    //fraction - https://en.wikipedia.org/wiki/Template:Sfrac\n    frac: (tmpl, list) => {\n      let order = ['a', 'b', 'c'];\n      let obj = toJSON$3(tmpl, order);\n      let data = {\n        template: 'sfrac'\n      };\n\n      if (obj.c) {\n        data.integer = obj.a;\n        data.numerator = obj.b;\n        data.denominator = obj.c;\n      } else if (obj.b) {\n        data.numerator = obj.a;\n        data.denominator = obj.b;\n      } else {\n        data.numerator = 1;\n        data.denominator = obj.a;\n      }\n\n      list.push(data);\n\n      if (data.integer) {\n        return `${data.integer} ${data.numerator}⁄${data.denominator}`;\n      }\n\n      return `${data.numerator}⁄${data.denominator}`;\n    },\n    'winning percentage': (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['wins', 'losses', 'ties']);\n      list.push(obj);\n      let wins = Number(obj.wins);\n      let losses = Number(obj.losses);\n      let ties = Number(obj.ties) || 0;\n      let games = wins + losses + ties;\n\n      if (obj.ignore_ties === 'y') {\n        ties = 0;\n      }\n\n      if (ties) {\n        wins += ties / 2;\n      }\n\n      let num = lib$1.percentage({\n        numerator: wins,\n        denominator: games,\n        decimals: 1\n      });\n\n      if (num === null) {\n        return '';\n      }\n\n      return `.${num * 10}`;\n    },\n    winlosspct: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['wins', 'losses']);\n      list.push(obj);\n      let wins = Number(obj.wins);\n      let losses = Number(obj.losses);\n      let num = lib$1.percentage({\n        numerator: wins,\n        denominator: wins + losses,\n        decimals: 1\n      });\n\n      if (num === null) {\n        return '';\n      }\n\n      num = `.${num * 10}`;\n      return `${wins || 0} || ${losses || 0} || ${num || '-'}`;\n    },\n    //https://en.wikipedia.org/wiki/Template:Video_game_release\n    'video game release': (tmpl, list) => {\n      let order = ['region', 'date', 'region2', 'date2', 'region3', 'date3', 'region4', 'date4'];\n      let obj = toJSON$3(tmpl, order);\n      let template = {\n        template: 'video game release',\n        releases: []\n      };\n\n      for (let i = 0; i < order.length; i += 2) {\n        if (obj[order[i]]) {\n          template.releases.push({\n            region: obj[order[i]],\n            date: obj[order[i + 1]]\n          });\n        }\n      }\n\n      list.push(template);\n      let str = template.releases.map(o => `${o.region}: ${o.date || ''}`).join('\\n\\n');\n      return '\\n' + str + '\\n';\n    },\n    // https://en.m.wikipedia.org/wiki/Template:USS\n    uss: (tmpl, list) => {\n      let obj = toJSON$3(tmpl, ['name', 'id']);\n      list.push(obj);\n\n      if (obj.id) {\n        return `[[USS ${obj.name} (${obj.id})|USS ''${obj.name}'' (${obj.id})]]`;\n      }\n\n      return `[[USS ${obj.name}|USS ''${obj.name}'']]`;\n    }\n  };\n  var functions = templates$4;\n\n  const codes$1 = {\n    '£': 'GB£',\n    // https://en.wikipedia.org/wiki/Template:GBP\n    '¥': '¥',\n    // https://en.wikipedia.org/wiki/Template:JPY\n    '৳': '৳',\n    // https://en.wikipedia.org/wiki/Template:BDT\n    '₩': '₩',\n    // https://en.wikipedia.org/wiki/Template:SK_won\n    '€': '€',\n    // https://en.wikipedia.org/wiki/Template:€\n    '₱': '₱',\n    // https://en.wikipedia.org/wiki/Template:Philippine_peso\n    '₹': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    '₽': '₽',\n    // https://en.wikipedia.org/wiki/Template:RUB\n    'cn¥': 'CN¥',\n    // https://en.wikipedia.org/wiki/Template:CNY\n    'gb£': 'GB£',\n    // https://en.wikipedia.org/wiki/Template:GBP\n    'india rs': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'indian rupee symbol': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'indian rupee': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'indian rupees': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'philippine peso': '₱',\n    // https://en.wikipedia.org/wiki/Template:Philippine_peso\n    'russian ruble': '₽',\n    // https://en.wikipedia.org/wiki/Template:Russian_ruble\n    'SK won': '₩',\n    // https://en.wikipedia.org/wiki/Template:SK_won\n    'turkish lira': 'TRY',\n    //https://en.wikipedia.org/wiki/Template:Turkish_lira\n    a$: 'A$',\n    // https://en.wikipedia.org/wiki/Template:AUD\n    au$: 'A$',\n    //https://en.wikipedia.org/wiki/Template:AUD\n    aud: 'A$',\n    //https://en.wikipedia.org/wiki/Template:AUD\n    bdt: 'BDT',\n    //https://en.wikipedia.org/wiki/Template:BDT\n    brl: 'BRL',\n    //https://en.wikipedia.org/wiki/Template:BRL\n    ca$: 'CA$',\n    // https://en.wikipedia.org/wiki/Template:CAD\n    cad: 'CA$',\n    // https://en.wikipedia.org/wiki/Template:CAD\n    chf: 'CHF',\n    // https://en.wikipedia.org/wiki/Template:CHF\n    cny: 'CN¥',\n    // https://en.wikipedia.org/wiki/Template:CNY\n    czk: 'czk',\n    // https://en.wikipedia.org/wiki/Template:CZK\n    dkk: 'dkk',\n    // https://en.wikipedia.org/wiki/Template:DKK\n    dkk2: 'dkk',\n    // https://en.wikipedia.org/wiki/Template:DKK\n    euro: '€',\n    // https://en.wikipedia.org/wiki/Template:€\n    gbp: 'GB£',\n    // https://en.wikipedia.org/wiki/Template:GBP\n    hk$: 'HK$',\n    // https://en.wikipedia.org/wiki/Template:HKD\n    hkd: 'HK$',\n    // https://en.wikipedia.org/wiki/Template:HKD\n    ils: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    inr: '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    jpy: '¥',\n    // https://en.wikipedia.org/wiki/Template:JPY\n    myr: 'MYR',\n    // https://en.wikipedia.org/wiki/Template:MYR\n    nis: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    nok: 'NOK',\n    //https://en.wikipedia.org/wiki/Template:NOK\n    nok2: 'NOK',\n    //https://en.wikipedia.org/wiki/Template:NOK\n    nz$: 'NZ$',\n    //https://en.wikipedia.org/wiki/Template:NZD\n    nzd: 'NZ$',\n    //https://en.wikipedia.org/wiki/Template:NZD\n    peso: 'peso',\n    //https://en.wikipedia.org/wiki/Template:Peso\n    pkr: '₨',\n    // https://en.wikipedia.org/wiki/Template:Pakistani_Rupee\n    r$: 'BRL',\n    //https://en.wikipedia.org/wiki/Template:BRL\n    rmb: 'CN¥',\n    // https://en.wikipedia.org/wiki/Template:CNY\n    rub: '₽',\n    // https://en.wikipedia.org/wiki/Template:RUB\n    ruble: '₽',\n    // https://en.wikipedia.org/wiki/Template:Ruble\n    rupee: '₹',\n    // https://en.wikipedia.org/wiki/Template:Rupee\n    s$: 'sgd',\n    // https://en.wikipedia.org/wiki/Template:SGD\n    sek: 'SEK',\n    // https://en.wikipedia.org/wiki/Template:SEK\n    sek2: 'SEK',\n    // https://en.wikipedia.org/wiki/Template:SEK\n    sfr: 'CHF',\n    // https://en.wikipedia.org/wiki/Template:CHF\n    sgd: 'sgd',\n    // https://en.wikipedia.org/wiki/Template:SGD\n    shekel: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    sheqel: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    ttd: 'TTD',\n    //https://en.wikipedia.org/wiki/Template:TTD\n    us$: 'US$',\n    // https://en.wikipedia.org/wiki/Template:US$\n    usd: 'US$',\n    // https://en.wikipedia.org/wiki/Template:US$\n    yen: '¥',\n    // https://en.wikipedia.org/wiki/Template:JPY\n    zar: 'R' //https://en.wikipedia.org/wiki/Template:ZAR\n\n  };\n\n  const parseCurrency = (tmpl, list) => {\n    let o = toJSON$3(tmpl, ['amount', 'code']);\n    list.push(o);\n    let code = o.template || '';\n\n    if (code === 'currency') {\n      code = o.code;\n\n      if (!code) {\n        o.code = code = 'usd'; //Special case when currency template has no code argument\n      }\n    } else if (code === '' || code === 'monnaie' || code === 'unité' || code === 'nombre' || code === 'nb') {\n      code = o.code;\n    }\n\n    code = (code || '').toLowerCase();\n\n    if (code === 'us') {\n      o.code = code = 'usd';\n    } else if (code === 'uk') {\n      o.code = code = 'gbp';\n    }\n\n    let str = `${codes$1[code] || ''}${o.amount || ''}`; //support unknown currencies after the number - like '5 BTC'\n\n    if (o.code && !codes$1[o.code.toLowerCase()]) {\n      str += ' ' + o.code;\n    }\n\n    return str;\n  };\n\n  let templates$3 = {\n    currency: parseCurrency\n  }; //and the others fit the same pattern\n\n  Object.keys(codes$1).forEach(k => {\n    templates$3[k] = parseCurrency;\n  });\n  var currency = templates$3;\n\n  const toOrdinal = function (i) {\n    let j = i % 10;\n    let k = i % 100;\n\n    if (j === 1 && k !== 11) {\n      return i + 'st';\n    }\n\n    if (j === 2 && k !== 12) {\n      return i + 'nd';\n    }\n\n    if (j === 3 && k !== 13) {\n      return i + 'rd';\n    }\n\n    return i + 'th';\n  }; //this is allowed to be rough\n\n\n  const day = 1000 * 60 * 60 * 24;\n  const month = day * 30;\n  const year = day * 365;\n\n  const getEpoch = function (obj) {\n    return new Date(`${obj.year}-${obj.month || 0}-${obj.date || 1}`).getTime();\n  }; //very rough!\n\n\n  const delta$1 = function (from, to) {\n    from = getEpoch(from);\n    to = getEpoch(to);\n    let diff = to - from;\n    let obj = {}; //get years\n\n    let years = Math.floor(diff / year, 10);\n\n    if (years > 0) {\n      obj.years = years;\n      diff -= obj.years * year;\n    } //get months\n\n\n    let monthCount = Math.floor(diff / month, 10);\n\n    if (monthCount > 0) {\n      obj.months = monthCount;\n      diff -= obj.months * month;\n    } //get days\n\n\n    let days = Math.floor(diff / day, 10);\n\n    if (days > 0) {\n      obj.days = days; // diff -= (obj.days * day);\n    }\n\n    return obj;\n  }; //not all too fancy - used in {{timesince}}\n\n\n  const timeSince = function (str) {\n    let d = new Date(str);\n\n    if (isNaN(d.getTime())) {\n      return '';\n    }\n\n    let now = new Date();\n    let delt = now.getTime() - d.getTime();\n    let predicate = 'ago';\n\n    if (delt < 0) {\n      predicate = 'from now';\n      delt = Math.abs(delt);\n    } //figure out units\n\n\n    let hours = delt / 1000 / 60 / 60;\n    let days = hours / 24;\n\n    if (days < 365) {\n      return parseInt(days, 10) + ' days ' + predicate;\n    }\n\n    let years = days / 365;\n    return parseInt(years, 10) + ' years ' + predicate;\n  };\n\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var _lib$2 = {\n    days: days,\n    timeSince: timeSince,\n    delta: delta$1,\n    toOrdinal: toOrdinal\n  };\n\n  //assorted parsing methods for date/time templates\n  const months$1 = [undefined, //1-based months.. :/\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const monthName = months$1.reduce((h, str, i) => {\n    if (i === 0) {\n      return h;\n    }\n\n    h[str.toLowerCase()] = i;\n    return h;\n  }, {}); //parse year|month|date numbers\n\n  const ymd = function (arr) {\n    let obj = {};\n    let units = ['year', 'month', 'date', 'hour', 'minute', 'second']; //parse each unit in sequence..\n\n    for (let i = 0; i < units.length; i += 1) {\n      //skip it\n      if (!arr[i] && arr[1] !== 0) {\n        continue;\n      }\n\n      let num = parseInt(arr[i], 10);\n\n      if (isNaN(num) === false) {\n        obj[units[i]] = num; //we good.\n      } else if (units[i] === 'month' && monthName.hasOwnProperty(arr[i])) {\n        //try for month-name, like 'january\n        let month = monthName[arr[i]];\n        obj[units[i]] = month;\n      } else {\n        //we dead. so skip this unit\n        delete obj[units[i]];\n      }\n    } //try for timezone,too ftw\n\n\n    let last = arr[arr.length - 1] || '';\n    last = String(last);\n\n    if (last.toLowerCase() === 'z') {\n      obj.tz = 'UTC';\n    } else if (/[+-][0-9]+:[0-9]/.test(last)) {\n      obj.tz = arr[6];\n    }\n\n    return obj;\n  }; //zero-pad a number\n\n\n  const pad = function (num) {\n    if (num < 10) {\n      return '0' + num;\n    }\n\n    return String(num);\n  };\n\n  const toText$1 = function (date) {\n    //eg '1995'\n    let str = String(date.year || '');\n\n    if (date.month !== undefined && months$1.hasOwnProperty(date.month) === true) {\n      if (date.date === undefined) {\n        //January 1995\n        str = `${months$1[date.month]} ${date.year}`;\n      } else {\n        //January 5, 1995\n        str = `${months$1[date.month]} ${date.date}, ${date.year}`; //add times, if available\n\n        if (date.hour !== undefined && date.minute !== undefined) {\n          let time = `${pad(date.hour)}:${pad(date.minute)}`;\n\n          if (date.second !== undefined) {\n            time = time + ':' + pad(date.second);\n          }\n\n          str = time + ', ' + str; //add timezone, if there, at the end in brackets\n        }\n\n        if (date.tz) {\n          str += ` (${date.tz})`;\n        }\n      }\n    }\n\n    return str;\n  };\n\n  var _format = {\n    toText: toText$1,\n    ymd: ymd\n  }; // console.log(toText(ymd([2018, 3, 28])));\n\n  var lib = _lib$2;\n\n  var format = _format;\n\n  const delta = lib.delta; //wrap it up as a template\n\n  const template$1 = function (date) {\n    return {\n      template: 'date',\n      data: date\n    };\n  };\n\n  const getBoth = function (tmpl) {\n    tmpl = strip(tmpl);\n    let arr = tmpl.split('|');\n    let from = format.ymd(arr.slice(1, 4));\n    let to = arr.slice(4, 7); //assume now, if 'to' is empty\n\n    if (to.length === 0) {\n      let d = new Date();\n      to = [d.getFullYear(), d.getMonth(), d.getDate()];\n    }\n\n    to = format.ymd(to);\n    return {\n      from: from,\n      to: to\n    };\n  };\n\n  const parsers$1 = {\n    //generic {{date|year|month|date}} template\n    date: (tmpl, list) => {\n      let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'timezone'];\n      let obj = toJSON$3(tmpl, order);\n      let data = format.ymd([obj.year, obj.month, obj.date || obj.day]);\n      obj.text = format.toText(data); //make the replacement string\n\n      if (obj.timezone) {\n        if (obj.timezone === 'Z') {\n          obj.timezone = 'UTC';\n        }\n\n        obj.text += ` (${obj.timezone})`;\n      }\n\n      if (obj.hour && obj.minute) {\n        if (obj.second) {\n          obj.text = `${obj.hour}:${obj.minute}:${obj.second}, ` + obj.text;\n        } else {\n          obj.text = `${obj.hour}:${obj.minute}, ` + obj.text;\n        }\n      }\n\n      if (obj.text) {\n        list.push(template$1(obj));\n      }\n\n      return obj.text;\n    },\n    //support parsing of 'February 10, 1992'\n    natural_date: (tmpl, list) => {\n      let order = ['text'];\n      let obj = toJSON$3(tmpl, order);\n      let str = obj.text || ''; // - just a year\n\n      let date = {};\n\n      if (/^[0-9]{4}$/.test(str)) {\n        date.year = parseInt(str, 10);\n      } else {\n        //parse the date, using the js date object (for now?)\n        let txt = str.replace(/[a-z]+\\/[a-z]+/i, '');\n        txt = txt.replace(/[0-9]+:[0-9]+(am|pm)?/i, '');\n        let d = new Date(txt);\n\n        if (isNaN(d.getTime()) === false) {\n          date.year = d.getFullYear();\n          date.month = d.getMonth() + 1;\n          date.date = d.getDate();\n        }\n      }\n\n      list.push(template$1(date));\n      return str.trim();\n    },\n    //just grab the first value, and assume it's a year\n    one_year: (tmpl, list) => {\n      let order = ['year'];\n      let obj = toJSON$3(tmpl, order);\n      let year = Number(obj.year);\n      list.push(template$1({\n        year: year\n      }));\n      return String(year);\n    },\n    //assume 'y|m|d' | 'y|m|d' // {{BirthDeathAge|B|1976|6|6|1990|8|8}}\n    two_dates: (tmpl, list) => {\n      let order = ['b', 'birth_year', 'birth_month', 'birth_date', 'death_year', 'death_month', 'death_date'];\n      let obj = toJSON$3(tmpl, order); //'b' means show birth-date, otherwise show death-date\n\n      if (obj.b && obj.b.toLowerCase() === 'b') {\n        let date = format.ymd([obj.birth_year, obj.birth_month, obj.birth_date]);\n        list.push(template$1(date));\n        return format.toText(date);\n      }\n\n      let date = format.ymd([obj.death_year, obj.death_month, obj.death_date]);\n      list.push(template$1(date));\n      return format.toText(date);\n    },\n    age: tmpl => {\n      let d = getBoth(tmpl);\n      let diff = delta(d.from, d.to);\n      return diff.years || 0;\n    },\n    'diff-y': tmpl => {\n      let d = getBoth(tmpl);\n      let diff = delta(d.from, d.to);\n\n      if (diff.years === 1) {\n        return diff.years + ' year';\n      }\n\n      return (diff.years || 0) + ' years';\n    },\n    'diff-ym': tmpl => {\n      let d = getBoth(tmpl);\n      let diff = delta(d.from, d.to);\n      let arr = [];\n\n      if (diff.years === 1) {\n        arr.push(diff.years + ' year');\n      } else if (diff.years && diff.years !== 0) {\n        arr.push(diff.years + ' years');\n      }\n\n      if (diff.months === 1) {\n        arr.push('1 month');\n      } else if (diff.months && diff.months !== 0) {\n        arr.push(diff.months + ' months');\n      }\n\n      return arr.join(', ');\n    },\n    'diff-ymd': tmpl => {\n      let d = getBoth(tmpl);\n      let diff = delta(d.from, d.to);\n      let arr = [];\n\n      if (diff.years === 1) {\n        arr.push(diff.years + ' year');\n      } else if (diff.years && diff.years !== 0) {\n        arr.push(diff.years + ' years');\n      }\n\n      if (diff.months === 1) {\n        arr.push('1 month');\n      } else if (diff.months && diff.months !== 0) {\n        arr.push(diff.months + ' months');\n      }\n\n      if (diff.days === 1) {\n        arr.push('1 day');\n      } else if (diff.days && diff.days !== 0) {\n        arr.push(diff.days + ' days');\n      }\n\n      return arr.join(', ');\n    },\n    'diff-yd': tmpl => {\n      let d = getBoth(tmpl);\n      let diff = delta(d.from, d.to);\n      let arr = [];\n\n      if (diff.years === 1) {\n        arr.push(diff.years + ' year');\n      } else if (diff.years && diff.years !== 0) {\n        arr.push(diff.years + ' years');\n      } //ergh...\n\n\n      diff.days += (diff.months || 0) * 30;\n\n      if (diff.days === 1) {\n        arr.push('1 day');\n      } else if (diff.days && diff.days !== 0) {\n        arr.push(diff.days + ' days');\n      }\n\n      return arr.join(', ');\n    },\n    'diff-d': tmpl => {\n      let d = getBoth(tmpl);\n      let diff = delta(d.from, d.to);\n      let arr = []; //ergh...\n\n      diff.days += (diff.years || 0) * 365;\n      diff.days += (diff.months || 0) * 30;\n\n      if (diff.days === 1) {\n        arr.push('1 day');\n      } else if (diff.days && diff.days !== 0) {\n        arr.push(diff.days + ' days');\n      }\n\n      return arr.join(', ');\n    }\n  };\n  var _parsers = parsers$1;\n\n  var parsers = _parsers;\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; //date- templates we support\n\n  var dates = {\n    currentday: () => {\n      let d = new Date();\n      return String(d.getDate());\n    },\n    currentdayname: () => {\n      let d = new Date();\n      return lib.days[d.getDay()];\n    },\n    currentmonth: () => {\n      let d = new Date();\n      return months[d.getMonth()];\n    },\n    currentyear: () => {\n      let d = new Date();\n      return String(d.getFullYear());\n    },\n    monthyear: () => {\n      let d = new Date();\n      return months[d.getMonth()] + ' ' + d.getFullYear();\n    },\n    'monthyear-1': () => {\n      let d = new Date();\n      d.setMonth(d.getMonth() - 1);\n      return months[d.getMonth()] + ' ' + d.getFullYear();\n    },\n    'monthyear+1': () => {\n      let d = new Date();\n      d.setMonth(d.getMonth() + 1);\n      return months[d.getMonth()] + ' ' + d.getFullYear();\n    },\n    'time ago': tmpl => {\n      let order = ['date', 'fmt'];\n      let time = toJSON$3(tmpl, order).date;\n      return lib.timeSince(time);\n    },\n    //https://en.wikipedia.org/wiki/Template:Birth_date_and_age\n    'birth date and age': (tmpl, list) => {\n      let order = ['year', 'month', 'day'];\n      let obj = toJSON$3(tmpl, order); //support 'one property' version\n\n      if (obj.year && /[a-z]/i.test(obj.year)) {\n        return parsers.natural_date(tmpl, list);\n      }\n\n      list.push(obj);\n      obj = format.ymd([obj.year, obj.month, obj.day]);\n      return format.toText(obj);\n    },\n    'birth year and age': (tmpl, list) => {\n      let order = ['birth_year', 'birth_month'];\n      let obj = toJSON$3(tmpl, order); //support 'one property' version\n\n      if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n        return parsers.natural_date(tmpl, list);\n      }\n\n      list.push(obj);\n      let age = new Date().getFullYear() - parseInt(obj.birth_year, 10);\n      obj = format.ymd([obj.birth_year, obj.birth_month]);\n      let str = format.toText(obj);\n\n      if (age) {\n        str += ` (age ${age})`;\n      }\n\n      return str;\n    },\n    'death year and age': (tmpl, list) => {\n      let order = ['death_year', 'birth_year', 'death_month'];\n      let obj = toJSON$3(tmpl, order); //support 'one property' version\n\n      if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n        return parsers.natural_date(tmpl, list);\n      }\n\n      list.push(obj);\n      obj = format.ymd([obj.death_year, obj.death_month]);\n      return format.toText(obj);\n    },\n    //https://en.wikipedia.org/wiki/Template:Birth_date_and_age2\n    'birth date and age2': (tmpl, list) => {\n      let order = ['at_year', 'at_month', 'at_day', 'birth_year', 'birth_month', 'birth_day'];\n      let obj = toJSON$3(tmpl, order);\n      list.push(obj);\n      obj = format.ymd([obj.birth_year, obj.birth_month, obj.birth_day]);\n      return format.toText(obj);\n    },\n    //https://en.wikipedia.org/wiki/Template:Birth_based_on_age_as_of_date\n    'birth based on age as of date': (tmpl, list) => {\n      let order = ['age', 'year', 'month', 'day'];\n      let obj = toJSON$3(tmpl, order);\n      list.push(obj);\n      let age = parseInt(obj.age, 10);\n      let year = parseInt(obj.year, 10);\n      let born = year - age;\n\n      if (born && age) {\n        return `${born} (age ${obj.age})`;\n      }\n\n      return `(age ${obj.age})`;\n    },\n    //https://en.wikipedia.org/wiki/Template:Death_date_and_given_age\n    'death date and given age': (tmpl, list) => {\n      let order = ['year', 'month', 'day', 'age'];\n      let obj = toJSON$3(tmpl, order);\n      list.push(obj);\n      obj = format.ymd([obj.year, obj.month, obj.day]);\n      let str = format.toText(obj);\n\n      if (obj.age) {\n        str += ` (age ${obj.age})`;\n      }\n\n      return str;\n    },\n    //sortable dates -\n    dts: tmpl => {\n      //remove formatting stuff, ewww\n      tmpl = tmpl.replace(/\\|format=[ymd]+/i, '');\n      tmpl = tmpl.replace(/\\|abbr=(on|off)/i, '');\n      let order = ['year', 'month', 'date', 'bc'];\n      let obj = toJSON$3(tmpl, order);\n\n      if (obj.date && obj.month && obj.year) {\n        //render 'june 5 2018'\n        if (/[a-z]/.test(obj.month) === true) {\n          return [obj.month, obj.date, obj.year].join(' ');\n        }\n\n        return [obj.year, obj.month, obj.date].join('-');\n      }\n\n      if (obj.month && obj.year) {\n        return [obj.year, obj.month].join('-');\n      }\n\n      if (obj.year) {\n        if (obj.year < 0) {\n          obj.year = Math.abs(obj.year) + ' BC';\n        }\n\n        return obj.year;\n      }\n\n      return '';\n    },\n    //we can't do timezones, so fake this one a little bit\n    //https://en.wikipedia.org/wiki/Template:Time\n    time: () => {\n      let d = new Date();\n      let obj = format.ymd([d.getFullYear(), d.getMonth(), d.getDate()]);\n      return format.toText(obj);\n    },\n    // https://en.wikipedia.org/wiki/Template:MILLENNIUM\n    millennium: tmpl => {\n      let obj = toJSON$3(tmpl, ['year']);\n      let year = Number(obj.year);\n      year = parseInt(year / 1000, 10) + 1;\n\n      if (obj.abbr && obj.abbr === 'y') {\n        if (year < 0) {\n          return `${lib.toOrdinal(Math.abs(year))} BC`;\n        }\n\n        return `${lib.toOrdinal(year)}`;\n      }\n\n      return `${lib.toOrdinal(year)} millennium`;\n    },\n    //date/age/time templates\n    start: parsers.date,\n    'start-date': parsers.natural_date,\n    birthdeathage: parsers.two_dates,\n    age: parsers.age,\n    'age nts': parsers.age,\n    'age in years': parsers['diff-y'],\n    'age in years and months': parsers['diff-ym'],\n    'age in years, months and days': parsers['diff-ymd'],\n    'age in years and days': parsers['diff-yd'],\n    'age in days': parsers['diff-d'] // 'birth date and age2': date,\n    // 'age in years, months, weeks and days': true,\n    // 'age as of date': true,\n\n  };\n  dates.currentday;\n  dates.currentdayname;\n  dates.currentmonth;\n  dates.currentyear;\n  dates.monthyear;\n  dates.dts;\n  dates.time;\n  dates.millennium;\n  dates.start;\n  dates.birthdeathage;\n  dates.age;\n\n  /**\n   * converts DMS (decimal-minute-second) geo format to lat/lng format.\n   * major thank you to https://github.com/gmaclennan/parse-dms and https://github.com/WSDOT-GIS/dms-js 👏\n   **/\n\n  function parseDMS(arr) {\n    let hemisphere = arr.pop();\n    let degrees = Number(arr[0] || 0);\n    let minutes = Number(arr[1] || 0);\n    let seconds = Number(arr[2] || 0);\n\n    if (typeof hemisphere !== 'string' || isNaN(degrees)) {\n      return null;\n    }\n\n    let sign = 1;\n\n    if (/[SW]/i.test(hemisphere)) {\n      sign = -1;\n    }\n\n    return sign * (degrees + minutes / 60 + seconds / 3600);\n  }\n\n  const round = function (num) {\n    if (typeof num !== 'number') {\n      return num;\n    }\n\n    let places = 100000;\n    return Math.round(num * places) / places;\n  }; //these hemispheres mean negative decimals\n\n\n  const negative = {\n    s: true,\n    w: true\n  };\n\n  const findLatLng = function (arr) {\n    const types = arr.map(s => typeof s).join('|'); //support {{lat|lng}}\n\n    if (arr.length === 2 && types === 'number|number') {\n      return {\n        lat: arr[0],\n        lon: arr[1]\n      };\n    } //support {{dd|N/S|dd|E/W}}\n\n\n    if (arr.length === 4 && types === 'number|string|number|string') {\n      if (negative[arr[1].toLowerCase()]) {\n        arr[0] *= -1;\n      }\n\n      if (arr[3].toLowerCase() === 'w') {\n        arr[2] *= -1;\n      }\n\n      return {\n        lat: arr[0],\n        lon: arr[2]\n      };\n    } //support {{dd|mm|N/S|dd|mm|E/W}}\n\n\n    if (arr.length === 6) {\n      return {\n        lat: parseDMS(arr.slice(0, 3)),\n        lon: parseDMS(arr.slice(3))\n      };\n    } //support {{dd|mm|ss|N/S|dd|mm|ss|E/W}}\n\n\n    if (arr.length === 8) {\n      return {\n        lat: parseDMS(arr.slice(0, 4)),\n        lon: parseDMS(arr.slice(4))\n      };\n    }\n\n    return {};\n  };\n\n  const parseParams = function (obj) {\n    obj.list = obj.list || [];\n    obj.list = obj.list.map(str => {\n      let num = Number(str);\n\n      if (!isNaN(num)) {\n        return num;\n      } //these are weird\n\n\n      let split = str.split(/:/);\n\n      if (split.length > 1) {\n        obj.props = obj.props || {};\n        obj.props[split[0]] = split.slice(1).join(':');\n        return null;\n      }\n\n      return str;\n    });\n    obj.list = obj.list.filter(s => s !== null);\n    return obj;\n  };\n\n  const parseCoor$1 = function (tmpl) {\n    let obj = toJSON$3(tmpl);\n    obj = parseParams(obj);\n    let tmp = findLatLng(obj.list);\n    obj.lat = round(tmp.lat);\n    obj.lon = round(tmp.lon);\n    obj.template = 'coord';\n    delete obj.list;\n    return obj;\n  }; //console.log(parseDms([57, 18, 22, 'N']));\n  //console.log(parseDms([4, 27, 32, 'W']));\n\n\n  var _lib$1 = parseCoor$1; // {{Coor title dms|dd|mm|ss|N/S|dd|mm|ss|E/W|template parameters}}\n\n  var parseCoor = _lib$1;\n\n  const templates$2 = {\n    coord: (tmpl, list) => {\n      let obj = parseCoor(tmpl);\n      list.push(obj); //display inline, by default\n\n      if (!obj.display || obj.display.indexOf('inline') !== -1) {\n        return `${obj.lat || ''}°N, ${obj.lon || ''}°W`;\n      }\n\n      return '';\n    }\n  }; //{{coord|latitude|longitude|coordinate parameters|template parameters}}\n  //{{coord|dd|N/S|dd|E/W|coordinate parameters|template parameters}}\n  //{{coord|dd|mm|N/S|dd|mm|E/W|coordinate parameters|template parameters}}\n  //{{coord|dd|mm|ss|N/S|dd|mm|ss|E/W|coordinate parameters|template parameters}}\n\n  var geo = templates$2;\n\n  const generic = function (tmpl, list, _parser, alias) {\n    let obj = toJSON$3(tmpl);\n\n    if (alias) {\n      obj.name = obj.template;\n      obj.template = alias;\n    }\n\n    list.push(obj);\n    return '';\n  }; // it may seem redundant,\n  // but we need these templates for our i18n mappings\n\n\n  const misc = {\n    persondata: generic,\n    taxobox: generic,\n    citation: generic,\n    portal: generic,\n    reflist: generic,\n    'cite book': generic,\n    'cite journal': generic,\n    'cite web': generic,\n    'commons cat': generic,\n    'election box candidate': generic,\n    'election box begin': generic,\n    main: generic\n  };\n  var misc_1 = misc;\n\n  const codes = {\n    adx: 'adx',\n    //https://en.wikipedia.org/wiki/Template:Abu_Dhabi_Securities_Exchange\n    aim: 'aim',\n    //https://en.wikipedia.org/wiki/Template:Alternative_Investment_Market\n    amex: 'amex',\n    //https://en.wikipedia.org/wiki/Template:NYSE_American\n    asx: 'asx',\n    //https://en.wikipedia.org/wiki/Template:Australian_Securities_Exchange\n    athex: 'athex',\n    //https://en.wikipedia.org/wiki/Template:Athens_Exchange\n    b3: 'b3',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa (redirects to B3 (stock exchange))\n    'B3 (stock exchange)': 'B3 (stock exchange)',\n    //https://en.wikipedia.org/wiki/Template:B3_(stock_exchange)\n    barbadosse: 'barbadosse',\n    //https://en.wikipedia.org/wiki/Template:Barbados_Stock_Exchange\n    bbv: 'bbv',\n    //https://en.wikipedia.org/wiki/Template:La_Paz_Stock_Exchange\n    bcba: 'bcba',\n    //https://en.wikipedia.org/wiki/Template:Buenos_Aires_Stock_Exchange\n    bcs: 'bcs',\n    //https://en.wikipedia.org/wiki/Template:Santiago_Stock_Exchange\n    bhse: 'bhse',\n    //https://en.wikipedia.org/wiki/Template:Bahrain_Bourse\n    bist: 'bist',\n    //https://en.wikipedia.org/wiki/Template:Borsa_Istanbul\n    bit: 'bit',\n    //https://en.wikipedia.org/wiki/Template:Borsa_Italiana\n    'bm&f bovespa': 'b3',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    'bm&f': 'b3',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    bmad: 'bmad',\n    //https://en.wikipedia.org/wiki/Template:Bolsa_de_Madrid\n    bmv: 'bmv',\n    //https://en.wikipedia.org/wiki/Template:Mexican_Stock_Exchange\n    'bombay stock exchange': 'bombay stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n    'botswana stock exchange': 'botswana stock exchange',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    bpse: 'bpse',\n    //https://en.wikipedia.org/wiki/Template:Budapest_Stock_Exchange\n    bse: 'bse',\n    //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n    bsx: 'bsx',\n    //https://en.wikipedia.org/wiki/Template:Bermuda_Stock_Exchange\n    bvb: 'bvb',\n    //https://en.wikipedia.org/wiki/Template:Bucharest_Stock_Exchange\n    bvc: 'bvc',\n    //https://en.wikipedia.org/wiki/Template:Colombian_Securities_Exchange\n    bvl: 'bvl',\n    //https://en.wikipedia.org/wiki/Template:Lima_Stock_Exchange\n    bvpasa: 'bvpasa',\n    //https://en.wikipedia.org/wiki/Template:BVPASA\n    bwse: 'bwse',\n    //https://en.wikipedia.org/wiki/Template:Botswana_Stock_Exchange\n    'canadian securities exchange': 'canadian securities exchange',\n    //https://en.wikipedia.org/wiki/Template:Canadian_Securities_Exchange\n    cse: 'cse',\n    //https://en.wikipedia.org/wiki/Template:Chittagong_Stock_Exchange\n    darse: 'darse',\n    //https://en.wikipedia.org/wiki/Template:Dar_es_Salaam_Stock_Exchange\n    dfm: 'dfm',\n    //https://en.wikipedia.org/wiki/Template:Dubai_Financial_Market\n    dse: 'dse',\n    //https://en.wikipedia.org/wiki/Template:Dhaka_Stock_Exchange\n    euronext: 'euronext',\n    //https://en.wikipedia.org/wiki/Template:Euronext\n    euronextparis: 'euronextparis',\n    //https://en.wikipedia.org/wiki/Template:EuronextParis\n    fse: 'fse',\n    //https://en.wikipedia.org/wiki/Template:Fukuoka_Stock_Exchange\n    fwb: 'fwb',\n    //https://en.wikipedia.org/wiki/Template:Frankfurt_Stock_Exchange\n    gse: 'gse',\n    //https://en.wikipedia.org/wiki/Template:Ghana_Stock_Exchange\n    gtsm: 'gtsm',\n    //https://en.wikipedia.org/wiki/Template:Gre_Tai_Securities_Market\n    idx: 'idx',\n    //https://en.wikipedia.org/wiki/Template:Indonesia_Stock_Exchange\n    ise: 'ise',\n    //https://en.wikipedia.org/wiki/Template:Irish_Stock_Exchange\n    iseq: 'iseq',\n    //https://en.wikipedia.org/wiki/Template:Irish_Stock_Exchange\n    isin: 'isin',\n    //https://en.wikipedia.org/wiki/Template:ISIN\n    jasdaq: 'jasdaq',\n    //https://en.wikipedia.org/wiki/Template:JASDAQ\n    jse: 'jse',\n    //https://en.wikipedia.org/wiki/Template:Johannesburg_Stock_Exchange\n    kase: 'kase',\n    //https://en.wikipedia.org/wiki/Template:Kazakhstan_Stock_Exchange\n    kn: 'kn',\n    //https://en.wikipedia.org/wiki/Template:Nairobi_Securities_Exchange\n    krx: 'krx',\n    //https://en.wikipedia.org/wiki/Template:Korea_Exchange\n    lse: 'lse',\n    //https://en.wikipedia.org/wiki/Template:London_Stock_Exchange\n    luxse: 'luxse',\n    //https://en.wikipedia.org/wiki/Template:Luxembourg_Stock_Exchange\n    'malta stock exchange': 'malta stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Malta_Stock_Exchange\n    mai: 'mai',\n    //https://en.wikipedia.org/wiki/Template:Market_for_Alternative_Investment\n    mcx: 'mcx',\n    //https://en.wikipedia.org/wiki/Template:Moscow_Exchange\n    mutf: 'mutf',\n    //https://en.wikipedia.org/wiki/Template:Mutual_fund\n    myx: 'myx',\n    //https://en.wikipedia.org/wiki/Template:Bursa_Malaysia\n    nag: 'nag',\n    //https://en.wikipedia.org/wiki/Template:Nagoya_Stock_Exchange\n    'nasdaq dubai': 'nasdaq dubai',\n    //https://en.wikipedia.org/wiki/Template:NASDAQ_Dubai\n    nasdaq: 'nasdaq',\n    //https://en.wikipedia.org/wiki/Template:NASDAQ\n    neeq: 'neeq',\n    //https://en.wikipedia.org/wiki/Template:NEEQ\n    nepse: 'nepse',\n    //https://en.wikipedia.org/wiki/Template:Nepal_Stock_Exchange\n    nex: 'nex',\n    //https://en.wikipedia.org/wiki/Template:TSXV_NEX\n    nse: 'nse',\n    //https://en.wikipedia.org/wiki/Template:National_Stock_Exchange_of_India\n    newconnect: 'newconnect',\n    //https://en.wikipedia.org/wiki/Template:NewConnect\n    'nyse arca': 'nyse arca',\n    //https://en.wikipedia.org/wiki/Template:NYSE_Arca\n    nyse: 'nyse',\n    //https://en.wikipedia.org/wiki/Template:New_York_Stock_Exchange\n    nzx: 'nzx',\n    //https://en.wikipedia.org/wiki/Template:New_Zealand_Exchange\n    'omx baltic': 'omx baltic',\n    //https://en.wikipedia.org/wiki/Template:OMX_Baltic\n    omx: 'omx',\n    //https://en.wikipedia.org/wiki/Template:OMX\n    ose: 'ose',\n    //https://en.wikipedia.org/wiki/Template:Oslo_Stock_Exchange\n    'otc expert': 'otc expert',\n    //https://en.wikipedia.org/wiki/Template:OTC_Expert\n    'otc grey': 'otc grey',\n    //https://en.wikipedia.org/wiki/template:grey_market\n    'otc pink': 'otc pink',\n    //https://en.wikipedia.org/wiki/Template:OTC_Pink\n    otcqb: 'otcqb',\n    //https://en.wikipedia.org/wiki/Template:OTCQB\n    otcqx: 'otcqx',\n    //https://en.wikipedia.org/wiki/Template:OTCQX\n    'pfts ukraine stock exchange': 'pfts ukraine stock exchange',\n    //https://en.wikipedia.org/wiki/Template:PFTS_Ukraine_Stock_Exchange\n    'philippine stock exchange': 'philippine stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Philippine_Stock_Exchange\n    prse: 'prse',\n    //https://en.wikipedia.org/wiki/Template:Prague_Stock_Exchange\n    psx: 'psx',\n    //https://en.wikipedia.org/wiki/Template:Pakistan_Stock_Exchange\n    karse: 'karse',\n    //https://en.wikipedia.org/w/index.php?title=Template:Karse&redirect=no (redirects to psx)\n    qe: 'qe',\n    //https://en.wikipedia.org/wiki/Template:Qatar_Stock_Exchange\n    'saudi stock exchange': 'saudi stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Saudi_Stock_Exchange\n    sehk: 'sehk',\n    //https://en.wikipedia.org/wiki/Template:Hong_Kong_Stock_Exchange\n    'Stock Exchange of Thailand': 'Stock Exchange of Thailand',\n    //https://en.wikipedia.org/wiki/Template:Stock_Exchange_of_Thailand (alternative for SET)\n    set: 'set',\n    //https://en.wikipedia.org/wiki/Template:Stock_Exchange_of_Thailand\n    sgx: 'sgx',\n    //https://en.wikipedia.org/wiki/Template:Singapore_Exchange\n    sse: 'sse',\n    //https://en.wikipedia.org/wiki/Template:Shanghai_Stock_Exchange\n    swx: 'swx',\n    //https://en.wikipedia.org/wiki/Template:SIX_Swiss_Exchange\n    szse: 'szse',\n    //https://en.wikipedia.org/wiki/Template:Shenzhen_Stock_Exchange\n    tase: 'tase',\n    //https://en.wikipedia.org/wiki/Template:Tel_Aviv_Stock_Exchange\n    'tsx-v': 'tsx-v',\n    //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n    tsx: 'tsx',\n    //https://en.wikipedia.org/wiki/Template:Toronto_Stock_Exchange\n    tsxv: 'tsxv',\n    //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n    ttse: 'ttse',\n    //https://en.wikipedia.org/wiki/Template:Trinidad_and_Tobago_Stock_Exchange\n    twse: 'twse',\n    //https://en.wikipedia.org/wiki/Template:Taiwan_Stock_Exchange\n    tyo: 'tyo',\n    //https://en.wikipedia.org/wiki/Template:Tokyo_Stock_Exchange\n    wbag: 'wbag',\n    //https://en.wikipedia.org/wiki/Template:Wiener_B%C3%B6rse\n    wse: 'wse',\n    //https://en.wikipedia.org/wiki/Template:Warsaw_Stock_Exchange\n    'zagreb stock exchange': 'zagreb stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n    'zimbabwe stock exchange': 'zimbabwe stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Zimbabwe_Stock_Exchange\n    zse: 'zse' //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n\n  };\n\n  const parseStockExchange = (tmpl, list) => {\n    let o = toJSON$3(tmpl, ['ticketnumber', 'code']);\n    list.push(o);\n    let code = o.template || '';\n\n    if (code === '') {\n      code = o.code;\n    }\n\n    code = (code || '').toLowerCase();\n    let str = codes[code] || '';\n\n    if (o.ticketnumber) {\n      str = `${str}: ${o.ticketnumber}`;\n    }\n\n    if (o.code && !codes[o.code.toLowerCase()]) {\n      str += ' ' + o.code;\n    }\n\n    return str;\n  };\n\n  const exchanges = {}; //the others fit the same pattern..\n\n  Object.keys(codes).forEach(k => {\n    exchanges[k] = parseStockExchange;\n  });\n  var stockExchanges = exchanges;\n\n  const zeroPad = function (num) {\n    num = String(num);\n\n    if (num.length === 1) {\n      num = '0' + num;\n    }\n\n    return num;\n  };\n\n  const parseTeam = function (obj, round, team) {\n    if (obj[`rd${round}-team${zeroPad(team)}`]) {\n      team = zeroPad(team);\n    }\n\n    let score = obj[`rd${round}-score${team}`];\n    let num = Number(score);\n\n    if (isNaN(num) === false) {\n      score = num;\n    }\n\n    return {\n      team: obj[`rd${round}-team${team}`],\n      score: score,\n      seed: obj[`rd${round}-seed${team}`]\n    };\n  }; // https://en.wikipedia.org/wiki/Category:Tournament_bracket_templates\n  //these are weird.\n\n\n  const playoffBracket = function (tmpl) {\n    let rounds = [];\n    let obj = toJSON$3(tmpl); //try some rounds\n\n    for (let i = 1; i < 7; i += 1) {\n      let round = [];\n\n      for (let t = 1; t < 16; t += 2) {\n        let key = `rd${i}-team`;\n\n        if (obj[key + t] || obj[key + zeroPad(t)]) {\n          let one = parseTeam(obj, i, t);\n          let two = parseTeam(obj, i, t + 1);\n          round.push([one, two]);\n        } else {\n          break;\n        }\n      }\n\n      if (round.length > 0) {\n        rounds.push(round);\n      }\n    }\n\n    return {\n      template: 'playoffbracket',\n      rounds: rounds\n    };\n  };\n\n  var _lib = playoffBracket;\n\n  var require$$7 = _lib;\n\n  let sports = {\n    //playoff brackets\n    '4teambracket': function (tmpl, list) {\n      let obj = require$$7(tmpl);\n      list.push(obj);\n      return '';\n    },\n    player: (tmpl, list) => {\n      let res = toJSON$3(tmpl, ['number', 'country', 'name', 'dl']);\n      list.push(res);\n      let str = `[[${res.name}]]`;\n\n      if (res.country) {\n        let country = (res.country || '').toLowerCase();\n        let flag = flags.find(a => country === a[1] || country === a[2]) || [];\n\n        if (flag && flag[0]) {\n          str = flag[0] + '  ' + str;\n        }\n      }\n\n      if (res.number) {\n        str = res.number + ' ' + str;\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Goal\n    goal: (tmpl, list) => {\n      let res = toJSON$3(tmpl);\n      let obj = {\n        template: 'goal',\n        data: []\n      };\n      let arr = res.list || [];\n\n      for (let i = 0; i < arr.length; i += 2) {\n        obj.data.push({\n          min: arr[i],\n          note: arr[i + 1] || ''\n        });\n      }\n\n      list.push(obj); //generate a little text summary\n\n      let summary = '⚽ ';\n      summary += obj.data.map(o => {\n        let note = o.note;\n\n        if (note) {\n          note = ` (${note})`;\n        }\n\n        return o.min + \"'\" + note;\n      }).join(', ');\n      return summary;\n    },\n    //a transcluded sports module - https://en.m.wikipedia.org/w/index.php?title=Special:WhatLinksHere/Module:Sports_table\n    // https://en.wikipedia.org/wiki/Template:2020–21_NHL_North_Division_standings\n    'sports table': (tmpl, list) => {\n      let obj = toJSON$3(tmpl);\n      let byTeam = {};\n      let teams = Object.keys(obj).filter(k => /^team[0-9]/.test(k)).map(k => obj[k].toLowerCase());\n      teams.forEach(team => {\n        byTeam[team] = {\n          name: obj[`name_${team}`],\n          win: Number(obj[`win_${team}`]) || 0,\n          loss: Number(obj[`loss_${team}`]) || 0,\n          tie: Number(obj[`tie_${team}`]) || 0,\n          otloss: Number(obj[`otloss_${team}`]) || 0,\n          goals_for: Number(obj[`gf_${team}`]) || 0,\n          goals_against: Number(obj[`ga_${team}`]) || 0\n        };\n      });\n      let res = {\n        date: obj.update,\n        header: obj.table_header,\n        teams: byTeam\n      };\n      list.push(res);\n    }\n  };\n  var sports_1 = sports;\n\n  var require$$0$4 = shorthand;\n\n  var require$$1$3 = functions;\n\n  var require$$2$2 = currency;\n\n  var require$$3$1 = dates;\n\n  var require$$4$1 = geo;\n\n  var require$$5$1 = misc_1;\n\n  var require$$6 = stockExchanges;\n\n  var require$$8 = sports_1;\n\n  var textAndData = Object.assign({}, require$$0$4, require$$1$3, require$$2$2, require$$3$1, require$$4$1, require$$5$1, require$$6, require$$7, require$$8, require$$7, require$$8);\n\n  var aliases = aliases_1;\n\n  var require$$0$3 = textOnly;\n\n  var require$$1$2 = dataOnly;\n\n  var require$$2$1 = textAndData;\n\n  let templates$1 = Object.assign({}, require$$0$3, require$$1$2, require$$2$1);\n  Object.keys(aliases).forEach(k => {\n    // if (templates[aliases[k]] === undefined) {\n    //   console.error(`Missing template: '${aliases[k]}'`)\n    // }\n    templates$1[k] = templates$1[aliases[k]];\n  });\n  var custom = templates$1; // console.log(Object.keys(templates).length)\n\n  var ignore = _ignore;\n\n  var infobox = _infobox;\n\n  var templates = custom;\n\n  const {\n    isArray: isArray$2,\n    isObject\n  } = require$$0$9;\n  const nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']; //this gets all the {{template}} objects and decides how to parse them\n\n  const parseTemplate$1 = function (tmpl, doc) {\n    let name = tmpl.name; // dont bother with some junk templates\n\n    if (ignore.hasOwnProperty(name) === true) {\n      return [''];\n    } //{{infobox settlement...}}\n\n\n    if (infobox.isInfobox(name) === true) {\n      let obj = toJSON$3(tmpl.body, [], 'raw'); // list.push(infobox.format(obj))\n\n      return ['', infobox.format(obj)];\n    } //cite book, cite arxiv...\n\n\n    if (/^cite [a-z]/.test(name) === true) {\n      let obj = toJSON$3(tmpl.body);\n      obj.type = obj.template;\n      obj.template = 'citation'; // list.push(obj)\n\n      return ['', obj];\n    } // ok, here we go!\n    //parse some known templates\n\n\n    if (templates.hasOwnProperty(name) === true) {\n      //handle number-syntax\n      if (typeof templates[name] === 'number') {\n        let obj = toJSON$3(tmpl.body, nums);\n        let key = String(templates[name]);\n        return [obj[key] || ''];\n      } //handle string-syntax\n\n\n      if (typeof templates[name] === 'string') {\n        return [templates[name]];\n      } //handle array sytax\n\n\n      if (isArray$2(templates[name]) === true) {\n        let obj = toJSON$3(tmpl.body, templates[name]); // list.push(obj)\n\n        return ['', obj];\n      } //handle object sytax\n\n\n      if (isObject(templates[name]) === true) {\n        let obj = toJSON$3(tmpl.body, templates[name].props); // list.push(obj)\n\n        return [obj[templates[name].out], obj];\n      } //handle function syntax\n\n\n      if (typeof templates[name] === 'function') {\n        // let json = toJSON(tmpl.body)\n        //(tmpl, list, alias, doc)\n        let arr = [];\n        let txt = templates[name](tmpl.body, arr, toJSON$3, null, doc);\n        return [txt, arr[0]];\n      }\n    } //an unknown template with data, so just keep it.\n\n\n    let json = toJSON$3(tmpl.body);\n\n    if (Object.keys(json).length === 0) {\n      // list.push(json)\n      json = null;\n    } //..then remove it\n\n\n    return ['', json];\n  };\n\n  var parse$3 = parseTemplate$1;\n\n  const toJson$1 = function (infobox, options) {\n    let json = Object.keys(infobox.data).reduce((h, k) => {\n      if (infobox.data[k]) {\n        h[k] = infobox.data[k].json();\n      }\n\n      return h;\n    }, {}); //support mongo-encoding keys\n\n    if (options.encode === true) {\n      json = encode.encodeObj(json);\n    }\n\n    return json;\n  };\n\n  var toJson_1 = toJson$1;\n\n  var toJson = toJson_1;\n\n  const {\n    isArray: isArray$1\n  } = require$$0$9;\n\n  const normalize = (str = '') => {\n    str = str.toLowerCase();\n    str = str.replace(/[-_]/g, ' ');\n    return str.trim();\n  }; //a formal key-value data table about a topic\n\n\n  const Infobox = function (obj, wiki) {\n    this._type = obj.type;\n    this.domain = obj.domain;\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: obj.data\n    });\n    Object.defineProperty(this, 'wiki', {\n      enumerable: false,\n      value: wiki\n    });\n  };\n\n  const methods$1 = {\n    type: function () {\n      return this._type;\n    },\n    links: function (n) {\n      let arr = [];\n      Object.keys(this.data).forEach(k => {\n        this.data[k].links().forEach(l => arr.push(l));\n      });\n\n      if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        let link = arr.find(o => o.page() === n);\n        return link === undefined ? [] : [link];\n      }\n\n      return arr;\n    },\n    image: function () {\n      let s = this.data.image || this.data.image2 || this.data.logo || this.data.image_skyline || this.data.image_flag;\n\n      if (!s) {\n        return null;\n      }\n\n      let obj = s.json();\n      obj.file = obj.text;\n      obj.text = '';\n      obj.domain = this.domain; // add domain information for image\n\n      return new require$$3$3(obj);\n    },\n    get: function (keys) {\n      let allKeys = Object.keys(this.data);\n\n      if (typeof keys === 'string') {\n        let key = normalize(keys);\n\n        for (let i = 0; i < allKeys.length; i += 1) {\n          let tmp = normalize(allKeys[i]);\n\n          if (key === tmp) {\n            return this.data[allKeys[i]];\n          }\n        }\n\n        return new require$$2$6();\n      }\n\n      if (isArray$1(keys)) {\n        // support array-input\n        keys = keys.map(normalize);\n        return keys.map(k => {\n          for (let i = 0; i < allKeys.length; i += 1) {\n            let tmp = normalize(allKeys[i]);\n\n            if (k === tmp) {\n              return this.data[allKeys[i]];\n            }\n          }\n\n          return new require$$2$6();\n        });\n      }\n\n      return new require$$2$6();\n    },\n    text: function () {\n      return '';\n    },\n    json: function (options) {\n      options = options || {};\n      return toJson(this, options);\n    },\n    wikitext: function () {\n      return this.wiki || '';\n    },\n    keyValue: function () {\n      return Object.keys(this.data).reduce((h, k) => {\n        if (this.data[k]) {\n          h[k] = this.data[k].text();\n        }\n\n        return h;\n      }, {});\n    }\n  }; //aliases\n\n  Object.keys(methods$1).forEach(k => {\n    Infobox.prototype[k] = methods$1[k];\n  });\n  Infobox.prototype.data = Infobox.prototype.keyValue;\n  Infobox.prototype.template = Infobox.prototype.type;\n  Infobox.prototype.images = Infobox.prototype.image;\n  var Infobox_1 = Infobox;\n\n  const toText = require$$0$7.fromText;\n  const methods = {\n    text: function () {\n      let str = this._text || '';\n      return toText(str).text();\n    },\n    json: function () {\n      return this.data || {};\n    },\n    wikitext: function () {\n      return this.wiki || '';\n    }\n  };\n\n  const Template = function (data, text = '', wiki = '') {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n    Object.defineProperty(this, '_text', {\n      enumerable: false,\n      value: text\n    });\n    Object.defineProperty(this, 'wiki', {\n      enumerable: false,\n      value: wiki\n    });\n  };\n\n  Object.keys(methods).forEach(k => {\n    Template.prototype[k] = methods[k];\n  });\n  var Template_1 = Template;\n\n  var require$$4 = Infobox_1;\n\n  var require$$9 = Template_1;\n\n  const isCitation = /^(cite |citation)/i;\n  const referenceTypes = {\n    citation: true,\n    refn: true,\n    harvnb: true,\n    source: true //wikinews\n\n  }; // split Infoboxes from templates and references\n\n  const sortOut$1 = function (list, domain) {\n    let res = {\n      infoboxes: [],\n      templates: [],\n      references: []\n    }; //remove references and infoboxes from our list\n\n    list.forEach(obj => {\n      let json = obj.json;\n      let kind = json.template || json.type || json.name; // is it a Reference?\n\n      if (referenceTypes[kind] === true || isCitation.test(kind) === true) {\n        res.references.push(new require$$7$1(json, obj.wiki));\n        return;\n      } // is it an Infobox?\n\n\n      if (json.template === 'infobox' && json.subbox !== 'yes') {\n        json.domain = domain; //infoboxes need this for images, i guess\n\n        json.data = json.data || {}; //validate it a little\n\n        res.infoboxes.push(new require$$4(json, obj.wiki));\n        return;\n      } // otherwise, it's just a template\n\n\n      res.templates.push(new require$$9(json, obj.text, obj.wiki));\n    });\n    return res;\n  };\n\n  var sortOut_1 = sortOut$1;\n\n  var findTemplates = _01Nested;\n\n  var parseTemplate = parse$3;\n\n  var sortOut = sortOut_1;\n\n  const allTemplates = function (wiki, doc) {\n    let list = []; //nested data-structure of templates\n\n    let nested = findTemplates(wiki); //recursive template-parser\n\n    const parseNested = function (obj, parent) {\n      obj.parent = parent; //do tail-first recursion\n\n      if (obj.children && obj.children.length > 0) {\n        obj.children.forEach(ch => parseNested(ch, obj));\n      } //parse template into json, return replacement wikitext\n\n\n      let [text, json] = parseTemplate(obj, doc);\n      obj.wiki = text;\n\n      if (json) {\n        list.push({\n          name: obj.name,\n          wiki: obj.body,\n          text: text,\n          json: json\n        });\n      } //remove the text from every parent\n\n\n      const removeIt = function (node, body, out) {\n        if (node.parent) {\n          node.parent.body = node.parent.body.replace(body, out);\n          removeIt(node.parent, body, out);\n        }\n      };\n\n      removeIt(obj, obj.body, obj.wiki);\n      wiki = wiki.replace(obj.body, obj.wiki);\n    }; //kick it off\n\n\n    nested.forEach(node => parseNested(node, null)); //remove the templates from our wiki text\n\n    nested.forEach(node => {\n      wiki = wiki.replace(node.body, node.wiki);\n    });\n    return {\n      list: list,\n      wiki: wiki\n    };\n  }; //find + parse all templates in the section\n\n\n  const process = function (section, doc) {\n    // find+parse them all\n    let {\n      list,\n      wiki\n    } = allTemplates(section._wiki, doc); // split-out references and infoboxes\n\n    let domain = doc ? doc._domain : null;\n    let {\n      infoboxes,\n      references,\n      templates\n    } = sortOut(list, domain); //sort-out the templates we decide to keep\n\n    section._infoboxes = section._infoboxes || [];\n    section._references = section._references || [];\n    section._templates = section._templates || [];\n    section._infoboxes = section._infoboxes.concat(infoboxes);\n    section._references = section._references.concat(references);\n    section._templates = section._templates.concat(templates);\n    section._wiki = wiki;\n  };\n\n  var template = process;\n\n  const parseSentence$1 = require$$0$7.fromText; //okay, <gallery> is a xml-tag, with newline-separated data, somehow pivoted by '|'...\n  //all deities help us. truly -> https://en.wikipedia.org/wiki/Help:Gallery_tag\n  //- not to be confused with https://en.wikipedia.org/wiki/Template:Gallery...\n\n  /**\n   *\n   * @private\n   * @param {object} catcher\n   * @param {Document} doc\n   * @param {Section} section\n   */\n\n  const parseGallery$1 = function (catcher, doc, section) {\n    catcher.text = catcher.text.replace(/<gallery([^>]*)>([\\s\\S]+)<\\/gallery>/g, (_, attrs, inside) => {\n      let images = inside.split(/\\n/g);\n      images = images.filter(str => str && str.trim() !== ''); //parse the line, which has an image and sometimes a caption\n\n      images = images.map(str => {\n        let arr = str.split(/\\|/);\n        let obj = {\n          file: arr[0].trim(),\n          lang: doc.lang(),\n          domain: doc.domain()\n        };\n        let img = new require$$3$3(obj).json();\n        let caption = arr.slice(1).join('|');\n\n        if (caption !== '') {\n          img.caption = parseSentence$1(caption);\n        }\n\n        return img;\n      }); //add it to our templates list\n\n      if (images.length > 0) {\n        catcher.templates.push({\n          template: 'gallery',\n          images: images,\n          pos: section.title\n        });\n      } //return empty string to remove the template from the wiki text\n\n\n      return '';\n    });\n  };\n\n  var gallery = parseGallery$1;\n\n  var require$$3 = template;\n\n  /**\n   * parses out the `Election_box` template from the wiki text\n   *\n   * this is a non-traditional template, for some reason\n   * https://en.wikipedia.org/wiki/Template:Election_box\n   *\n   * @private\n   * @param {object} catcher an object to provide and catch data\n   */\n\n  const parseElection$1 = function (catcher) {\n    catcher.text = catcher.text.replace(/\\{\\{election box begin([\\s\\S]+?)\\{\\{election box end\\}\\}/gi, tmpl => {\n      let data = {\n        _wiki: tmpl,\n        _templates: []\n      }; //put it through our full template parser..\n\n      require$$3(data); //okay, pull it apart into something sensible..\n\n      let templates = data._templates.map(t => t.json());\n\n      let start = templates.find(t => t.template === 'election box') || {};\n      let candidates = templates.filter(t => t.template === 'election box candidate');\n      let summary = templates.find(t => t.template === 'election box gain' || t.template === 'election box hold') || {};\n\n      if (candidates.length > 0 || summary) {\n        catcher.templates.push({\n          template: 'election box',\n          title: start.title,\n          candidates: candidates,\n          summary: summary.data\n        });\n      } //return empty string to remove the template from the wiki text\n\n\n      return '';\n    });\n  };\n\n  var election = parseElection$1;\n\n  const keys = {\n    coach: ['team', 'year', 'g', 'w', 'l', 'w-l%', 'finish', 'pg', 'pw', 'pl', 'pw-l%'],\n    player: ['year', 'team', 'gp', 'gs', 'mpg', 'fg%', '3p%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg'],\n    roster: ['player', 'gp', 'gs', 'mpg', 'fg%', '3fg%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg']\n  };\n  /**\n   * https://en.wikipedia.org/wiki/Template:NBA_player_statistics_start\n   *\n   * @private\n   * @param {object} catcher\n   */\n\n  const parseNBA$1 = function (catcher) {\n    catcher.text = catcher.text.replace(/\\{\\{nba (coach|player|roster) statistics start([\\s\\S]+?)\\{\\{s-end\\}\\}/gi, (tmpl, name) => {\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '');\n      tmpl = tmpl.replace(/\\{\\{s-end\\}\\}/, '');\n      name = name.toLowerCase().trim();\n      let headers = '! ' + keys[name].join(' !! ');\n      let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}';\n      let rows = tableParser(table);\n      rows = rows.map(row => {\n        Object.keys(row).forEach(k => {\n          row[k] = row[k].text();\n        });\n        return row;\n      });\n      catcher.templates.push({\n        template: 'NBA ' + name + ' statistics',\n        data: rows\n      }); //return empty string to remove the template from the wiki text\n\n      return '';\n    });\n  };\n\n  var nba = parseNBA$1;\n\n  //this is pretty nuts\n\n  const whichHeadings = function (tmpl) {\n    let headings = ['#', 'date', 'opponent', 'score', 'win', 'loss', 'save', 'attendance', 'record'];\n\n    if (/\\|stadium=y/i.test(tmpl) === true) {\n      headings.splice(7, 0, 'stadium'); //save, stadium, attendance\n    }\n\n    if (/\\|time=y/i.test(tmpl) === true) {\n      headings.splice(7, 0, 'time'); //save, time, stadium, attendance\n    }\n\n    if (/\\|box=y/i.test(tmpl) === true) {\n      headings.push('box'); //record, box\n    }\n\n    return headings;\n  };\n  /**\n   *\n   * @private\n   * @param {object} catcher\n   */\n\n\n  const parseMlb$1 = function (catcher) {\n    catcher.text = catcher.text.replace(/\\{\\{mlb game log (section|month)[\\s\\S]+?\\{\\{mlb game log (section|month) end\\}\\}/gi, tmpl => {\n      let headings = whichHeadings(tmpl);\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '');\n      tmpl = tmpl.replace(/\\{\\{mlb game log (section|month) end\\}\\}/i, '');\n      let headers = '! ' + headings.join(' !! ');\n      let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}';\n      let rows = tableParser(table);\n      rows = rows.map(row => {\n        Object.keys(row).forEach(k => {\n          row[k] = row[k].text();\n        });\n        return row;\n      });\n      catcher.templates.push({\n        template: 'mlb game log section',\n        data: rows\n      }); //return empty string to remove the template from the wiki text\n\n      return '';\n    });\n  };\n\n  var mlb = parseMlb$1;\n\n  let headings = ['res', 'record', 'opponent', 'method', 'event', 'date', 'round', 'time', 'location', 'notes'];\n  /**\n   *\n   * https://en.wikipedia.org/wiki/Template:MMA_record_start\n   *\n   * @private\n   * @param {object} catcher\n   */\n\n  const parseMMA$1 = function (catcher) {\n    catcher.text = catcher.text.replace(/\\{\\{mma record start[\\s\\S]+?\\{\\{end\\}\\}/gi, tmpl => {\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '');\n      tmpl = tmpl.replace(/\\{\\{end\\}\\}/i, '');\n      let headers = '! ' + headings.join(' !! ');\n      let table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}';\n      let rows = tableParser(table);\n      rows = rows.map(row => {\n        Object.keys(row).forEach(k => {\n          row[k] = row[k].text();\n        });\n        return row;\n      });\n      catcher.templates.push({\n        template: 'mma record start',\n        data: rows\n      }); //return empty string to remove the template from the wiki text\n\n      return '';\n    });\n  };\n\n  var mma = parseMMA$1;\n\n  const parseSentence = require$$0$7.fromText;\n  /**\n   * try to parse out the math and chem templates\n   *\n   * xml <math>y=mx+b</math> support\n   * https://en.wikipedia.org/wiki/Help:Displaying_a_formula\n   *\n   * @private\n   * @param {object} catcher\n   */\n\n  const parseMath$1 = function (catcher) {\n    catcher.text = catcher.text.replace(/<math([^>]*)>([\\s\\S]+)<\\/math>/g, (_, attrs, inside) => {\n      //clean it up a little?\n      let formula = parseSentence(inside).text();\n      catcher.templates.push({\n        template: 'math',\n        formula: formula,\n        raw: inside\n      }); //should we at least try to render it in plaintext? :/\n\n      if (formula && formula.length < 12) {\n        return formula;\n      } //return empty string to remove the template from the wiki text\n\n\n      return '';\n    }); //try chemistry version too\n\n    catcher.text = catcher.text.replace(/<chem([^>]*)>([\\s\\S]+?)<\\/chem>/g, (_, attrs, inside) => {\n      catcher.templates.push({\n        template: 'chem',\n        data: inside\n      }); //return empty string to remove the template from the wiki text\n\n      return '';\n    });\n  };\n\n  var math = parseMath$1;\n\n  var parseGallery = gallery;\n\n  var parseElection = election;\n\n  var parseNBA = nba;\n\n  var parseMlb = mlb;\n\n  var parseMMA = mma;\n\n  var parseMath = math;\n\n  /**\n   * parses out non standard templates\n   *\n   * Most templates are '{{template}}',\n   * but then, some are '<template></template>' others are {{start}}...{{end}}\n   * -> the templates here are of the second type.\n   *\n   * @private\n   * @param {Section} section\n   * @param {Document} doc\n   * @returns {Object} wikitext\n   */\n\n  const xmlTemplates = function (section, doc) {\n    const res = {\n      templates: [],\n      text: section._wiki\n    };\n    parseElection(res);\n    parseGallery(res, doc, section);\n    parseMath(res);\n    parseMlb(res);\n    parseMMA(res);\n    parseNBA(res); // turn them into Template objects\n\n    res.templates = res.templates.map(obj => new require$$9(obj));\n    return res;\n  };\n\n  var startToEnd = xmlTemplates;\n\n  var toJSON$1 = toJson$6;\n\n  var require$$0$2 = heading;\n\n  var require$$1$1 = table;\n\n  var require$$2 = _03Paragraph;\n\n  var require$$5 = startToEnd;\n\n  const parse$2 = {\n    heading: require$$0$2,\n    table: require$$1$1,\n    paragraphs: require$$2,\n    templates: require$$3,\n    references: require$$4$3,\n    startEndTemplates: require$$5\n  };\n  const defaults$2 = {\n    tables: true,\n    references: true,\n    paragraphs: true,\n    templates: true,\n    infoboxes: true\n  };\n  /**\n   * the Section class represents the different sections of the article.\n   * we look for the == title == syntax and split and parse the sections from there\n   *\n   * @class\n   */\n\n  class Section {\n    /**\n     * the stuff between headings - 'History' section for example\n     *\n     * @param {object} data the data already gathered about the section\n     * @param {Document} doc the document that this section belongs to\n     */\n    constructor(data, doc) {\n      let props = {\n        doc: doc,\n        title: data.title || '',\n        depth: data.depth,\n        wiki: data.wiki || '',\n        templates: [],\n        tables: [],\n        infoboxes: [],\n        references: [],\n        paragraphs: []\n      };\n      Object.keys(props).forEach(k => {\n        Object.defineProperty(this, '_' + k, {\n          enumerable: false,\n          writable: true,\n          value: props[k]\n        });\n      }); //parse-out <template></template>' and {{start}}...{{end}} templates\n\n      const startEndTemplates = parse$2.startEndTemplates(this, doc);\n      this._wiki = startEndTemplates.text;\n      this._templates = this._templates.concat(startEndTemplates.templates); //parse-out the <ref></ref> tags\n\n      parse$2.references(this); //parse-out all {{templates}}\n\n      parse$2.templates(this, doc); //parse the tables\n\n      parse$2.table(this); //now parse all double-newlines\n\n      parse$2.paragraphs(this, doc);\n    }\n    /**\n     * returns the title of a section. if no title is available then it returns empty string\n     *\n     * @returns {string} the title of the section\n     */\n\n\n    title() {\n      return this._title || '';\n    }\n    /**\n     * returns the index of the current section in the document\n     *\n     * @returns {number | null} the index of the current section in the document\n     */\n\n\n    index() {\n      if (!this._doc) {\n        return null;\n      }\n\n      let index = this._doc.sections().indexOf(this);\n\n      if (index === -1) {\n        return null;\n      }\n\n      return index;\n    }\n    /**\n     * returns the depth (or indentation) of the section\n     * aka how many levels deep is this section located\n     *\n     * @returns {number} the depth of the section\n     */\n\n\n    depth() {\n      return this._depth;\n    }\n    /**\n     * returns the depth (or indentation) of the section\n     * aka how many levels deep is this section located\n     *\n     * @returns {number} the depth of the section\n     */\n\n\n    indentation() {\n      return this.depth();\n    }\n    /**\n     * returns all sentences in the section\n     * if an clue is provided then it returns the sentence at clue-th index\n     *\n     * @returns {object | object[]} all sentences in an array or the clue-th sentence\n     */\n\n\n    sentences() {\n      return this.paragraphs().reduce((list, p) => {\n        return list.concat(p.sentences());\n      }, []);\n    }\n    /**\n     * returns all paragraphs in the section\n     * if an clue is provided then it returns the paragraph at clue-th index\n     *\n     * @returns {object | object[]} all paragraphs in an array or the clue-th paragraph\n     */\n\n\n    paragraphs() {\n      return this._paragraphs || [];\n    }\n    /**\n     * returns all links in the section\n     * if an clue is provided and it is a number then it returns the link at clue-th index\n     * if an clue is provided and it is a string then it returns the link at the that content\n     *\n     * @param {number| string} [clue] the clue for selecting the link\n     * @returns {object | object[]} all links in an array or the clue-th link or the link with the content of clue\n     */\n\n\n    links(clue) {\n      let arr = [];\n      this.infoboxes().forEach(templ => {\n        arr.push(templ.links());\n      });\n      this.sentences().forEach(s => {\n        arr.push(s.links());\n      });\n      this.tables().forEach(t => {\n        arr.push(t.links());\n      });\n      this.lists().forEach(list => {\n        arr.push(list.links());\n      });\n      arr = arr.reduce((acc, val) => acc.concat(val), []) //flatten the array\n      .filter(val => val !== undefined); //filter out all the undefined from the flattened empty arrays\n\n      if (typeof clue === 'string') {\n        let link = arr.find(o => o.page().toLowerCase() === clue.toLowerCase());\n        return link === undefined ? [] : [link];\n      }\n\n      return arr;\n    }\n    /**\n     * returns all tables in the section\n     * if an clue is provided then it returns the table at clue-th index\n     *\n     * @returns {object | object[]} all tables in an array or the clue-th infobox\n     */\n\n\n    tables() {\n      return this._tables || [];\n    }\n    /**\n     * returns all templates in the section\n     * if an clue is provided and clue is a number then it returns the template at clue-th index\n     * if an clue is provided and clue is a string then it returns all template with that name\n     *\n     * @param {number|string} [clue] the clue for selecting the template\n     * @returns {object | object[]} all templates in an array or the clue-th template or all template name `clue`\n     */\n\n\n    templates(clue) {\n      let arr = this._templates || []; // arr = arr.map((t) => t.json())\n\n      if (typeof clue === 'string') {\n        clue = clue.toLowerCase();\n        return arr.filter(o => o.data.template === clue || o.data.name === clue);\n      }\n\n      return arr;\n    }\n    /**\n     * returns all infoboxes in the section\n     * if an clue is provided then it returns the infobox at clue-th index\n     *\n     * @param {number|string} [clue] the clue for selecting the infobox\n     * @returns {object | object[]} all infoboxes in an array or the clue-th infobox\n     */\n\n\n    infoboxes(clue) {\n      let arr = this._infoboxes || [];\n\n      if (typeof clue === 'string') {\n        clue = clue.replace(/^infobox /i, '');\n        clue = clue.trim().toLowerCase();\n        return arr.filter(info => info._type === clue);\n      }\n\n      return arr;\n    }\n    /**\n     * returns all lists in the section\n     * if an clue is provided then it returns the list at clue-th index\n     *\n     * @returns {object | object[]} all lists in an array or the clue-th list\n     */\n\n\n    coordinates() {\n      let arr = [...this.templates('coord'), ...this.templates('coor')];\n      return arr.map(tmpl => tmpl.json());\n    }\n    /**\n     * returns all lists in the section\n     * if an clue is provided then it returns the list at clue-th index\n     *\n     * @returns {object | object[]} all lists in an array or the clue-th list\n     */\n\n\n    lists() {\n      let arr = [];\n      this.paragraphs().forEach(p => {\n        arr = arr.concat(p.lists());\n      });\n      return arr;\n    }\n    /**\n     * returns all interwiki links in the section\n     * if an clue is provided then it returns the interwiki link at clue-th index\n     *\n     * @returns {object | object[]} all interwiki links in an array or the clue-th interwiki link\n     */\n\n\n    interwiki() {\n      let arr = [];\n      this.paragraphs().forEach(p => {\n        arr = arr.concat(p.interwiki());\n      });\n      return arr;\n    }\n    /**\n     * returns all images in the section\n     * if an clue is provided then it returns the image at clue-th index\n     *\n     * @returns {Image | Image[]} all images in an array or the clue-th image\n     */\n\n\n    images() {\n      let arr = [];\n      this.paragraphs().forEach(p => {\n        arr = arr.concat(p.images());\n      });\n      return arr;\n    }\n    /**\n     * returns all references in the section\n     * if an clue is provided then it returns the reference at clue-th index\n     *\n     * @returns {object | object[]} all references in an array or the clue-th reference\n     */\n\n\n    references() {\n      return this._references || [];\n    } //transformations\n\n    /**\n     * Removes the section from the document\n     *\n     * @returns {null|Document} the document without this section. or null if there is no document\n     */\n\n\n    remove() {\n      if (!this._doc) {\n        return null;\n      }\n\n      let bads = {};\n      bads[this.title()] = true; //remove children too\n\n      this.children().forEach(sec => bads[sec.title()] = true);\n\n      let sections = this._doc.sections();\n\n      sections = sections.filter(sec => bads.hasOwnProperty(sec.title()) !== true);\n      sections = sections.filter(sec => bads.hasOwnProperty(sec.title()) !== true);\n      this._doc._sections = sections;\n      return this._doc;\n    } //move-around sections like in jquery\n\n    /**\n     * returns the next sibling of this section\n     * if it can find one then it returns null\n     *\n     * @returns {Section|null} the next sibling\n     */\n\n\n    nextSibling() {\n      //if this section is not part of a document then we can go to the next part of the document\n      if (!this._doc) {\n        return null;\n      } //first we get the a list of sections and our own position in this list\n\n\n      let sections = this._doc.sections();\n\n      let index = this.index() || 0; //then we look trough the list looking for the next sibling\n      //aka we look the next item at the same depth as us\n      //so we start the loop at the next section in the list and go till the length of the list\n\n      for (let i = index + 1; i < sections.length; i++) {\n        //if the depth is smaller then the current depth then there is no next sibling\n        //aka the depth of the section at position i a level higher then this section then this section is the last section at this depth\n        if (sections[i].depth() < this.depth()) {\n          return null;\n        } //if the section has the same depth as the current section then it is the next sibling\n\n\n        if (sections[i].depth() === this.depth()) {\n          return sections[i];\n        }\n      } //if the loop has no results then there is no next sibling and we are at the end of the file\n\n\n      return null;\n    }\n    /**\n     * returns the next sibling of this section\n     * if it can find one then it returns null\n     *\n     * @returns {Section|null} the next sibling\n     */\n\n\n    next() {\n      return this.nextSibling();\n    }\n    /**\n     * returns the previous section\n     *\n     * @returns {Section|null} the previous section\n     */\n\n\n    lastSibling() {\n      if (!this._doc) {\n        return null;\n      }\n\n      let sections = this._doc.sections();\n\n      let index = this.index() || 0;\n      return sections[index - 1] || null;\n    }\n    /**\n     * returns the previous section\n     *\n     * @returns {Section|null} the previous section\n     */\n\n\n    last() {\n      return this.lastSibling();\n    }\n    /**\n     * returns the previous section\n     *\n     * @returns {Section|null} the previous section\n     */\n\n\n    previousSibling() {\n      return this.lastSibling();\n    }\n    /**\n     * returns the previous section\n     *\n     * @returns {Section|null} the previous section\n     */\n\n\n    previous() {\n      return this.lastSibling();\n    }\n    /**\n     * returns all the children of a section\n     *\n     * If the clue is a string then it will return the child with that exact title\n     * Else if the clue is a number then it returns the child at that index\n     * Else it returns all the children\n     *\n     * @param {number | string} [clue] A title of a section or a index of a wanted section\n     * @returns {Section | Section[] | null} A section or a array of sections\n     */\n\n\n    children(clue) {\n      if (!this._doc) {\n        return null;\n      }\n\n      let sections = this._doc.sections();\n\n      let index = this.index() || 0;\n      let children = []; //(immediately preceding sections with higher depth)\n\n      if (sections[index + 1] && sections[index + 1].depth() > this.depth()) {\n        for (let i = index + 1; i < sections.length; i += 1) {\n          if (sections[i].depth() > this.depth()) {\n            children.push(sections[i]);\n          } else {\n            break;\n          }\n        }\n      }\n\n      if (typeof clue === 'string') {\n        return children.find(s => s.title().toLowerCase() === clue.toLowerCase());\n      }\n\n      return children;\n    }\n    /**\n     * returns all the children of a section\n     *\n     * If the clue is a string then it will return the child with that exact title\n     * Else if the clue is a number then it returns the child at that index\n     * Else it returns all the children\n     *\n     * @param {number | string} [clue] A title of a section or a index of a wanted section\n     * @returns {Section | Section[] | null} A section or a array of sections\n     */\n\n\n    sections(clue) {\n      return this.children(clue);\n    }\n    /**\n     * returns all the parent of a section\n     *\n     * @returns {Section | null} A section that is the parent of a section\n     */\n\n\n    parent() {\n      if (!this._doc) {\n        return null;\n      }\n\n      let sections = this._doc.sections();\n\n      let index = this.index() || 0;\n\n      for (let i = index; i >= 0; i -= 1) {\n        if (sections[i] && sections[i].depth() < this.depth()) {\n          return sections[i];\n        }\n      }\n\n      return null;\n    } //outputs\n\n    /**\n     * returns a plaintext version of the section\n     *\n     * @param {object} options options for the text transformation\n     * @returns {string} the section in text\n     */\n\n\n    text(options) {\n      options = setDefaults(options, defaults$2);\n      return this.paragraphs().map(p => p.text(options)).join('\\n\\n');\n    }\n    /**\n     * returns original wiki markup\n     *\n     * @returns {string} the original markup\n     */\n\n\n    wikitext() {\n      return this._wiki;\n    }\n    /**\n     * returns a json version of the section\n     *\n     * @param {object} options keys to include in the resulting json\n     * @returns {object} the section in json\n     */\n\n\n    json(options) {\n      options = setDefaults(options, defaults$2);\n      return toJSON$1(this, options);\n    }\n\n  }\n\n  Section.prototype.citations = Section.prototype.references; // aliases\n\n  const singular$1 = {\n    sentences: 'sentence',\n    paragraphs: 'paragraph',\n    links: 'link',\n    tables: 'table',\n    templates: 'template',\n    infoboxes: 'infobox',\n    coordinates: 'coordinate',\n    lists: 'list',\n    images: 'image',\n    references: 'reference',\n    citations: 'citation'\n  };\n  Object.keys(singular$1).forEach(k => {\n    let sing = singular$1[k];\n\n    Section.prototype[sing] = function (clue) {\n      let arr = this[k](clue);\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr[0] || null;\n    };\n  });\n  var Section_1 = Section;\n\n  var require$$0$1 = Section_1;\n\n  const isReference = new RegExp('^(' + i18n.references.join('|') + '):?', 'i');\n  const section_reg = /(?:\\n|^)(={2,5}.{1,200}?={2,5})/g; //interpret ==heading== lines\n\n  const parse$1 = {\n    heading: require$$0$2\n  };\n  /**\n   * filters out the reference section and empty sections and\n   *\n   * @param {Section[]} sections\n   * @returns {Section[]} all the section\n   */\n\n  const removeReferenceSection = function (sections) {\n    return sections.filter((s, i) => {\n      if (isReference.test(s.title()) === true) {\n        if (s.paragraphs().length > 0) {\n          return true;\n        } //does it have some wacky templates?\n\n\n        if (s.templates().length > 0) {\n          return true;\n        } //what it has children? awkward\n\n\n        if (sections[i + 1] && sections[i + 1].depth() > s.depth()) {\n          sections[i + 1]._depth -= 1; //move it up a level?...\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n  };\n  /**\n   * this function splits the wiki texts on '=' and puts every part in a Section Object\n   * it also pre processes the section text for the Section object\n   * then it filters out the reference section\n   *\n   * @private\n   * @param {Document} doc the document that contains the wiki text\n   * @returns {Section[]} the sections that are parsed out\n   */\n\n\n  const parseSections = function (doc) {\n    let sections = [];\n\n    let splits = doc._wiki.split(section_reg);\n\n    for (let i = 0; i < splits.length; i += 2) {\n      let heading = splits[i - 1] || '';\n      let wiki = splits[i] || '';\n\n      if (wiki === '' && heading === '') {\n        //usually an empty 'intro' section\n        continue;\n      }\n\n      let data = {\n        title: '',\n        depth: null,\n        wiki: wiki\n      }; //figure-out title and depth\n\n      parse$1.heading(data, heading);\n      sections.push(new require$$0$1(data, doc));\n    } //remove empty references section\n\n\n    return removeReferenceSection(sections);\n  };\n\n  var _02Section = parseSections;\n\n  const cat_reg = new RegExp('\\\\[\\\\[:?(' + i18n.categories.join('|') + '):(.{2,178}?)]](w{0,10})', 'gi');\n  const cat_remove_reg = new RegExp('^\\\\[\\\\[:?(' + i18n.categories.join('|') + '):', 'gi');\n\n  const parse_categories = function (wiki) {\n    const categories = [];\n    let tmp = wiki.match(cat_reg); //regular links\n\n    if (tmp) {\n      tmp.forEach(function (c) {\n        c = c.replace(cat_remove_reg, '');\n        c = c.replace(/\\|?[ *]?\\]\\]$/, ''); //parse fancy ones..\n\n        c = c.replace(/\\|.*/, ''); //everything after the '|' is metadata\n\n        if (c && !c.match(/[[\\]]/)) {\n          categories.push(c.trim());\n        }\n      });\n    }\n\n    const newWiki = wiki.replace(cat_reg, '');\n    return [categories, newWiki];\n  };\n\n  var categories = parse_categories;\n\n  var sectionMap = _sectionMap;\n\n  var toJSON = toJson$9;\n\n  var isDisambig = isDisambig_1;\n\n  var redirects = redirects$1;\n\n  var preProcess = preProcess_1;\n\n  var require$$0 = _02Section;\n\n  var require$$1 = categories;\n\n  const parse = {\n    section: require$$0,\n    categories: require$$1\n  };\n  const defaults$1 = {\n    tables: true,\n    lists: true,\n    paragraphs: true\n  };\n  /**\n   * The document class is the main entry point of wtf_wikipedia.\n   * this class represents an article of wikipedia.\n   * from here you can go to the infoboxes or paragraphs\n   *\n   * @class\n   */\n\n  class Document$1 {\n    /**\n     * The constructor for the document class\n     * This function starts parsing the wiki text and sets the options in the class\n     *\n     * @param {string} [wiki] The wiki text\n     * @param {object} [options] The options for the parser\n     */\n    constructor(wiki, options) {\n      options = options || {};\n      let props = {\n        pageID: options.pageID || options.id || null,\n        namespace: options.namespace || options.ns || null,\n        lang: options.lang || options.language || null,\n        domain: options.domain || null,\n        title: options.title || null,\n        type: 'page',\n        redirectTo: null,\n        wikidata: options.wikidata || null,\n        wiki: wiki || '',\n        categories: [],\n        sections: [],\n        coordinates: []\n      }; // this._missing_templates = {} //for stats+debugging purposes\n\n      Object.keys(props).forEach(k => {\n        Object.defineProperty(this, '_' + k, {\n          enumerable: false,\n          writable: true,\n          value: props[k]\n        });\n      }); //detect if page is just redirect, and return it\n\n      if (redirects.isRedirect(this._wiki) === true) {\n        this._type = 'redirect';\n        this._redirectTo = redirects.parse(this._wiki);\n        const [categories, newWiki] = parse.categories(this._wiki);\n        this._categories = categories;\n        this._wiki = newWiki;\n        return;\n      } //give ourselves a little head-start\n\n\n      this._wiki = preProcess(this._wiki); //pull-out [[category:whatevers]]\n\n      const [categories, newWiki] = parse.categories(this._wiki);\n      this._categories = categories;\n      this._wiki = newWiki; //parse all the headings, and their texts/sentences\n\n      this._sections = parse.section(this);\n    }\n    /**\n     * Getter and setter for the tile.\n     * If string is given then this function is a setter and sets the variable and returns the set value\n     * If the string is not given then it will check if the title is available\n     * If it is available it returns the title.\n     * Else it will look if the first sentence contains a bolded phrase and assumes that's the title and returns it\n     *\n     * @param {string} [str] The title that will be set\n     * @returns {null|string} The title found or given\n     */\n\n\n    title(str) {\n      //use like a setter\n      if (str !== undefined) {\n        this._title = str;\n        return str;\n      } //if we have it already\n\n\n      if (this._title) {\n        return this._title;\n      } //guess the title of this page from first sentence bolding\n\n\n      let guess = null;\n      let sen = this.sentence();\n\n      if (sen) {\n        guess = sen.bold();\n      }\n\n      return guess;\n    }\n    /**\n     * If an pageID is given then it sets the pageID and returns the given pageID\n     * Else if the pageID is already set it returns the pageID\n     *\n     * @param {number} [id] The pageID that will be set\n     * @returns {number|null} The given or found pageID\n     */\n\n\n    pageID(id) {\n      if (id !== undefined) {\n        this._pageID = id;\n      }\n\n      return this._pageID || null;\n    }\n    /**\n     * If an WikidataID is given then it sets the WikidataID and returns the given WikidataID\n     * Else if the WikidataID is already set it returns the WikidataID\n     *\n     * @param {string} [id] The WikidataID that will be set\n     * @returns {string|null} The given or found WikidataID\n     */\n\n\n    wikidata(id) {\n      if (id !== undefined) {\n        this._wikidata = id;\n      }\n\n      return this._wikidata || null;\n    }\n    /**\n     * If an domain is given then it sets the domain and returns the given domain\n     * Else if the domain is already set it returns the domain\n     *\n     * @param {string} [str] The domain that will be set\n     * @returns {string|null} The given or found domain\n     */\n\n\n    domain(str) {\n      if (str !== undefined) {\n        this._domain = str;\n      }\n\n      return this._domain || null;\n    }\n    /**\n     * If an language is given then it sets the language and returns the given language\n     * Else if the language is already set it returns the language\n     *\n     * @param {string} [lang] The language that will be set\n     * @returns {string|null} The given or found language\n     */\n\n\n    language(lang) {\n      if (lang !== undefined) {\n        this._lang = lang;\n      }\n\n      return this._lang || null;\n    }\n    /**\n     * Gets the url of the page\n     * If the language or domain is not available we substitute 'en' and 'wikipedia.org'\n     * Then we use the template of `https://${lang}.${domain}/wiki/${title}` to make the url\n     *\n     * @returns {string|null} The url of the page\n     */\n\n\n    url() {\n      let title = this.title();\n\n      if (!title) {\n        return null;\n      }\n\n      let lang = this.language() || 'en';\n      let domain = this.domain() || 'wikipedia.org'; //replace blank to underscore\n\n      title = title.replace(/ /g, '_');\n      title = encodeURIComponent(title);\n      return `https://${lang}.${domain}/wiki/${title}`;\n    }\n    /**\n     * If an namespace is given then it sets the namespace and returns the given namespace\n     * Else if the namespace is already set it returns the namespace\n     *\n     * @param {string} [ns] The namespace that will be set\n     * @returns {string|null} The given or found namespace\n     */\n\n\n    namespace(ns) {\n      if (ns !== undefined) {\n        this._namespace = ns;\n      }\n\n      return this._namespace || null;\n    }\n    /**\n     * Returns if the page is a redirect\n     *\n     * @returns {boolean} Is the page a redirect\n     */\n\n\n    isRedirect() {\n      return this._type === 'redirect';\n    }\n    /**\n     * Returns information about the page this page redirects to\n     *\n     * @returns {null|object} The redirected page\n     */\n\n\n    redirectTo() {\n      return this._redirectTo;\n    }\n    /**\n     * This function finds out if a page is a disambiguation page\n     *\n     * @returns {boolean} Whether the page is a disambiguation page\n     */\n\n\n    isDisambiguation() {\n      return isDisambig(this);\n    }\n    /**\n     * If a clue is available return the category at that index\n     * Else return all categories\n     *\n     * @returns {string | string[]} The category at the provided index or all categories\n     */\n\n\n    categories(clue) {\n      let arr = this._categories || [];\n\n      if (typeof clue === 'number') {\n        return [arr[clue]];\n      }\n\n      return arr;\n    }\n    /**\n     * returns the sections of the document\n     *\n     * If the clue is a string then it will return the section with that exact title\n     * Else if the clue is a number then it returns the section at that index\n     * Else it returns all the sections\n     *\n     * @param {number | string} [clue] A title of a section or a index of a wanted section\n     * @returns {object | object[]} A section or a array of sections\n     */\n\n\n    sections(clue) {\n      let arr = this._sections || [];\n      arr.forEach(sec => {\n        // link-up parent and child\n        sec._doc = this;\n      }); //grab a specific section, by its title\n\n      if (typeof clue === 'string') {\n        let str = clue.toLowerCase().trim();\n        return arr.filter(s => {\n          return s.title().toLowerCase() === str;\n        });\n      } else if (typeof clue === 'number') {\n        return [arr[clue]];\n      }\n\n      return arr;\n    }\n    /**\n     * Returns the paragraphs in the document\n     *\n     * If the clue is a number then it returns the paragraph at that index\n     * Else it returns all paragraphs in an array\n     * @param {number | string} [clue] given index of a paragraph\n     * @returns {object | object[]} the selected paragraph or an array of all paragraphs\n     */\n\n\n    paragraphs(clue) {\n      let arr = [];\n      this.sections().forEach(s => {\n        arr = arr.concat(s.paragraphs());\n      });\n\n      if (typeof clue === 'number') {\n        return [arr[clue]];\n      }\n\n      return arr;\n    }\n    /**\n     * if no clue is provided, it compiles an array of sentences in the wiki text.\n     * if the clue is provided it return the sentence at the provided index\n     * @param {number | string} [clue] given index of a sentence\n     * @returns {object[]|object} an array of sentences or a single sentence\n     */\n\n\n    sentences(clue) {\n      let arr = [];\n      this.sections().forEach(sec => {\n        arr = arr.concat(sec.sentences());\n      });\n\n      if (typeof clue === 'number') {\n        return [arr[clue]];\n      }\n\n      return arr;\n    }\n    /**\n     * This function search the whole page, including the infobox and image gallery templates for images\n     * and then returns them in an array if no clue is provided.\n     * if an clue is profieded then it returns the image at the clue-th index\n     *\n     * @returns {Image[]|Image} a single image or an array of images\n     */\n\n\n    images(clue) {\n      let arr = sectionMap(this, 'images', null); //grab image from infobox, first\n\n      this.infoboxes().forEach(info => {\n        let img = info.image();\n\n        if (img) {\n          arr.unshift(img); //put it at the top\n        }\n      }); //look for 'gallery' templates, too\n\n      this.templates().forEach(obj => {\n        if (obj.data.template === 'gallery') {\n          obj.data.images = obj.data.images || [];\n          obj.data.images.forEach(img => {\n            if (!(img instanceof require$$3$3)) {\n              img.language = this.language();\n              img.domain = this.domain();\n              img = new require$$3$3(img);\n            }\n\n            arr.push(img);\n          });\n        }\n      });\n\n      if (typeof clue === 'number') {\n        return [arr[clue]];\n      }\n\n      return arr;\n    }\n    /**\n     * Return all links or if a clue is provided only the link at that index\n     *\n     * @param {number} [clue] the index of the wanted link\n     * @returns {string[]|string} all the links or the selected link\n     */\n\n\n    links(clue) {\n      return sectionMap(this, 'links', clue);\n    }\n    /**\n     * Return all inter wiki links or if a clue is provided only the inter wiki link at that index\n     *\n     * @param {number} [clue] the index of the wanted inter wiki link\n     * @returns {string[]|string} all the inter wiki links or the selected inter wiki link\n     */\n\n\n    interwiki(clue) {\n      return sectionMap(this, 'interwiki', clue);\n    }\n    /**\n     * If a clue is available return the list at that index\n     * Else return all lists\n     *\n     * @param {number} [clue] The index of the wanted list\n     * @returns {object | object[]} The list at the provided index or all lists\n     */\n\n\n    lists(clue) {\n      return sectionMap(this, 'lists', clue);\n    }\n    /**\n     * If a clue is available return the tables at that index\n     * Else return all tables\n     *\n     * @param {number} [clue] The index of the wanted table\n     * @returns {object | object[]} The table at the provided index or all tables\n     */\n\n\n    tables(clue) {\n      return sectionMap(this, 'tables', clue);\n    }\n    /**\n     * If a clue is available return the template at that index\n     * Else return all templates\n     *\n     * @param {number} [clue] The index of the wanted template\n     * @returns {object | object[]} The category at the provided index or all categories\n     */\n\n\n    templates(clue) {\n      return sectionMap(this, 'templates', clue);\n    }\n    /**\n     * If a clue is available return the references at that index\n     * Else return all references\n     *\n     * @param {number} [clue] The index of the wanted references\n     * @returns {object | object[]} The category at the provided index or all references\n     */\n\n\n    references(clue) {\n      return sectionMap(this, 'references', clue);\n    }\n    /**\n     * Returns the 0th or clue-th reference\n     *\n     * @param {number} [clue] The index of the wanted reference\n     * @returns {object|string|number} The reference at the provided index\n     */\n\n\n    citations(clue) {\n      return this.references(clue);\n    }\n    /**\n     * finds and returns all coordinates\n     * or if an clue is given, the coordinate at the index\n     *\n     * @param {number} [clue] the index of the coordinate returned\n     * @returns {object[]|object|null} if a clue is given, the coordinate of null, else an array of coordinates\n     */\n\n\n    coordinates(clue) {\n      return sectionMap(this, 'coordinates', clue);\n    }\n    /**\n     * If clue is unidentified then it returns all infoboxes\n     * If clue is a number then it returns the infobox at that index\n     * It always sorts the infoboxes by size\n     *\n     * @param {number} [clue] the index of the infobox you want to select\n     * @returns {object | object[]} the selected infobox or an array of infoboxes\n     */\n\n\n    infoboxes(clue) {\n      let arr = sectionMap(this, 'infoboxes', clue); //sort them by biggest-first\n\n      arr = arr.sort((a, b) => {\n        if (Object.keys(a.data).length > Object.keys(b.data).length) {\n          return -1;\n        }\n\n        return 1;\n      });\n      return arr;\n    }\n    /**\n     * return a plain text version of the wiki article\n     *\n     * @param {object} [options] the options for the parser\n     * @returns {string} the plain text version of the article\n     */\n\n\n    text(options) {\n      options = setDefaults(options, defaults$1); //nah, skip these.\n\n      if (this.isRedirect() === true) {\n        return '';\n      }\n\n      let arr = this.sections().map(sec => sec.text(options));\n      return arr.join('\\n\\n');\n    }\n    /**\n     * return a json version of the Document class\n     *\n     * @param {object} [options] options for the rendering\n     * @returns {object} this document as json\n     */\n\n\n    json(options) {\n      options = setDefaults(options, defaults$1);\n      return toJSON(this, options);\n    }\n    /**\n     * return original wiki markup\n     *\n     * @returns {string} markup text\n     */\n\n\n    wikitext() {\n      return this._wiki || '';\n    }\n    /**\n     * prints the title of every section\n     *\n     * @returns {Document} the document itself\n     */\n\n\n    debug() {\n      console.log('\\n');\n      this.sections().forEach(sec => {\n        let indent = ' - ';\n\n        for (let i = 0; i < sec.depth(); i += 1) {\n          indent = ' -' + indent;\n        }\n\n        console.log(indent + (sec.title() || '(Intro)'));\n      });\n      return this;\n    }\n\n  } // aliases\n\n\n  const singular = {\n    categories: 'category',\n    sections: 'section',\n    paragraphs: 'paragraph',\n    sentences: 'sentence',\n    images: 'image',\n    links: 'link',\n    // interwiki\n    lists: 'list',\n    tables: 'table',\n    templates: 'template',\n    references: 'reference',\n    citations: 'citation',\n    coordinates: 'coordinate',\n    infoboxes: 'infobox'\n  };\n  Object.keys(singular).forEach(k => {\n    let sing = singular[k];\n\n    Document$1.prototype[sing] = function (clue) {\n      let arr = this[k](clue);\n      return arr[0] || null;\n    };\n  });\n  Document$1.prototype.lang = Document$1.prototype.language;\n  Document$1.prototype.ns = Document$1.prototype.namespace;\n  Document$1.prototype.plaintext = Document$1.prototype.text;\n  Document$1.prototype.isDisambig = Document$1.prototype.isDisambiguation;\n  Document$1.prototype.citations = Document$1.prototype.references;\n  Document$1.prototype.redirectsTo = Document$1.prototype.redirectTo;\n  Document$1.prototype.redirect = Document$1.prototype.redirectTo;\n  Document$1.prototype.redirects = Document$1.prototype.redirectTo;\n  var Document_1 = Document$1;\n\n  var Document = Document_1;\n\n  const {\n    isArray\n  } = require$$0$9;\n  /**\n   * this function puts all responses into proper Document objects\n   *\n   * @private\n   * @param {Array} res\n   * @param {string | number | Array<number> | Array<string>} title\n   * @returns {null| Document | Document[]} null if there are no results or Document if there is one responses and Document array if there are multiple responses\n   */\n\n  const parseDoc$1 = function (res, title) {\n    // filter out undefined\n    res = res.filter(o => o); // put all the responses into Document formats\n\n    let docs = res.map(o => {\n      return new Document(o.wiki, o.meta);\n    }); // if the list is empty than there are no results\n\n    if (docs.length === 0) {\n      return null;\n    } // if there is only one response then we can get it out of the array\n\n\n    if (!isArray(title) && docs.length === 1) {\n      return docs[0];\n    }\n\n    return docs;\n  };\n\n  var parseDoc_1 = parseDoc$1;\n\n  /**\n   * factory for header options\n   *\n   * @private\n   * @param {object} options\n   * @returns {object} the generated options\n   */\n  const makeHeaders$1 = function (options) {\n    let agent = options.userAgent || options['User-Agent'] || options['Api-User-Agent'] || 'User of the wtf_wikipedia library';\n    let origin;\n\n    if (options.noOrigin) {\n      origin = '';\n    } else {\n      origin = options.origin || options.Origin || '*';\n    }\n\n    return {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Api-User-Agent': agent,\n        'User-Agent': agent,\n        Origin: origin,\n        'Accept-Encoding': 'gzip'\n      },\n      redirect: 'follow'\n    };\n  };\n\n  var _headers = makeHeaders$1;\n\n  var unfetch = browser;\n\n  var parseUrl = parseUrl_1;\n\n  var makeUrl = makeUrl_1;\n\n  var getResult = getResult_1;\n\n  var parseDoc = parseDoc_1;\n\n  var makeHeaders = _headers;\n\n  const isUrl = /^https?:\\/\\//;\n  /**\n   * @typedef fetchDefaults\n   * @property {string | undefined} [path]\n   * @property {string | undefined} [wiki]\n   * @property {string | undefined} [domain]\n   * @property {boolean | undefined} [follow_redirects]\n   * @property {string | undefined} [lang]\n   * @property {string | number | Array<string> | Array<number> | undefined} [title]\n   * @property {string | undefined} [Api-User-Agent]\n   */\n\n  /**\n   * @type {fetchDefaults}\n   */\n\n  const defaults = {\n    lang: 'en',\n    wiki: 'wikipedia',\n    domain: undefined,\n    follow_redirects: true,\n    path: 'api.php' //some 3rd party sites use a weird path\n\n  };\n  /**\n   * @callback fetchCallback\n   * @param {Object} error\n   * @param {(null | Document | Document[])} response\n   */\n\n  /**\n   *  fetches the page from the wiki and returns a Promise with the parsed wiki text\n   *\n   * @param {string | number | Array<number> | Array<string>} title the title, PageID, URL or an array of all three of the page(s) you want to fetch\n   * @param {fetchDefaults} [options] the options for the fetch or the language of the wiki for the article\n   * @param {fetchCallback} [callback] the callback function for the call\n   * @returns {Promise<null | Document | Document[]>} either null if the pages is not found, Document if you asked for one result, and a array of Documents if you asked for multiple pages\n   */\n\n  const fetch$2 = function (title, options, callback) {\n    // support lang as 2nd param\n    if (typeof options === 'string') {\n      options = {\n        lang: options\n      };\n    }\n\n    options = { ...defaults,\n      ...options\n    };\n    options.title = title; //parse url input\n\n    if (typeof title === 'string' && isUrl.test(title)) {\n      options = { ...options,\n        ...parseUrl(title)\n      };\n    }\n\n    const url = makeUrl(options);\n    const headers = makeHeaders(options);\n    return unfetch(url, headers).then(res => res.json()).then(res => {\n      let data = getResult(res, options);\n      data = parseDoc(data, title);\n\n      if (callback) {\n        callback(null, data);\n      }\n\n      return data;\n    }).catch(e => {\n      console.error(e);\n\n      if (callback) {\n        callback(e, null);\n      }\n\n      return null;\n    });\n  };\n\n  var _fetch = fetch$2;\n\n  var _version = '9.0.1';\n\n  /**\n   * use the native client-side fetch function\n   *\n   * @private\n   * @param {string} url the url that well be fetched\n   * @param {RequestInit} opts the options for fetch\n   * @returns {Promise<any>} the response from fetch\n   */\n\n  const request = function (url, opts) {\n    return unfetch(url, opts).then(function (res) {\n      return res.json();\n    });\n  };\n\n  var fetch$1 = request;\n\n  var fetch = _fetch;\n\n  var version = _version;\n\n  var require$$10 = fetch$1;\n\n  const wtf = function (wiki, options) {\n    return new Document(wiki, options);\n  }; //export classes for plugin development\n\n\n  const models = {\n    Doc: Document,\n    Section: require$$0$1,\n    Paragraph: require$$1$7,\n    Sentence: require$$2$6,\n    Image: require$$3$3,\n    Infobox: require$$4,\n    Link: require$$5$2,\n    List: require$$6$1,\n    Reference: require$$7$1,\n    Table: require$$8$1,\n    Template: require$$9,\n    http: require$$10,\n    wtf: wtf\n  };\n\n  wtf.fetch = function (title, options, cb) {\n    return fetch(title, options, cb);\n  };\n\n  wtf.extend = function (fn) {\n    fn(models, templates, infoboxes);\n    return this;\n  };\n\n  wtf.plugin = wtf.extend;\n  wtf.version = version;\n  var src = wtf;\n\n  return src;\n\n})));\n","const wtf = require(\"wtf_wikipedia\")\nimport html2canvas from \"html2canvas\"\n\nconst CANVAS_WIDTH = 1280\nconst CANVAS_HEIGHT = 720\n\nconst CHAPTER_RADIUS = 160\nconst IMAGE_RADIUS = 40\n\nconst API_URL = `https://en.wikipedia.org/w/api.php`\nlet scene\nlet renderer\nlet controls\nlet camera\nlet clock\n\nlet moveForward = false\nlet moveBackward = false\nlet moveLeft = false\nlet moveRight = false\nlet canJump = false\nconst velocity = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nfunction parseArticle(wikiText) {\n    const article = wtf(wikiText).json()\n    console.log(article)\n\n    let exhibition = []\n\n    let currentSectionName\n    let currentSectionImages = []\n    let currentParagraph = []\n\n    for (const section of article.sections) {\n        if (section.depth === 0) {\n            if (currentSectionName) {\n                exhibition.push({\n                    name: currentSectionName,\n                    images: currentSectionImages,\n                    paragraph: currentParagraph,\n                })\n            }\n            currentSectionName = section.title\n            currentSectionImages = []\n            currentParagraph = []\n        }\n\n        if (section?.paragraphs?.[0]?.sentences?.[0]?.text) {\n            currentParagraph.push(section.paragraphs[0].sentences[0].text)\n        }\n\n        if (!section.images) {\n            continue\n        }\n\n        for (const image of section.images) {\n            currentSectionImages.push({\n                fileName: image.file,\n                description: image.caption,\n                fileURL: image.url,\n            })\n        }\n    }\n    exhibition.push({\n        name: currentSectionName,\n        images: currentSectionImages,\n        paragraph: currentParagraph,\n    })\n    return exhibition\n}\n\nfunction render(exhibition) {\n    let output = document.getElementById(\"output\")\n\n    for (let chapter of exhibition) {\n        let header = document.createElement(\"h2\")\n        header.innerHTML = chapter.name\n        output.appendChild(header)\n        for (let img of chapter.images) {\n            fetchImage(img.fileName, img.description)\n        }\n    }\n}\n\nfunction clearObjects(obj) {\n    while (obj.children.length > 0) {\n        clearObjects(obj.children[0])\n        obj.remove(obj.children[0])\n    }\n    if (obj.geometry) obj.geometry.dispose()\n\n    if (obj.material) {\n        Object.keys(obj.material).forEach((prop) => {\n            if (!obj.material[prop]) return\n            if (\n                obj.material[prop] !== null &&\n                typeof obj.material[prop].dispose === \"function\"\n            )\n                obj.material[prop].dispose()\n        })\n        obj.material.dispose()\n    }\n}\n\nfunction render3DExhibition(exhibition) {\n    clearObjects(scene)\n    setupFloor()\n\n    for (let [i, chapter] of exhibition.entries()) {\n        let numberOfChapters = exhibition.length\n        let chapterMidpoint = new THREE.Vector3(\n            0,\n            0,\n            -CHAPTER_RADIUS\n        ).applyAxisAngle(\n            new THREE.Vector3(0, 1, 0),\n            -(i * Math.PI * 2) / numberOfChapters\n        )\n\n        let imageGroup = new THREE.Group()\n        scene.add(imageGroup)\n        imageGroup.position.x = chapterMidpoint.x\n        imageGroup.position.y = chapterMidpoint.y\n        imageGroup.position.z = chapterMidpoint.z\n        imageGroup.lookAt(new THREE.Vector3(0, 0, 0))\n\n        createTextPlane(chapter.name).then((text) => {\n            text.position.x = 0\n            text.position.y = 40\n            text.position.z = 0\n            text.scale.x = 3\n            text.scale.y = 3\n            text.scale.z = 3\n            imageGroup.add(text)\n        })\n\n        generateImageData(chapter).then(promiseArr => {\n            let numberOfImages = promiseArr.length\n            promiseArr.forEach((picturePromise, j) => {\n                picturePromise.then(picture => {\n                let imageAngle =\n                    numberOfImages > 1\n                        ? (-j * Math.PI) / (numberOfImages - 1)\n                        : -Math.PI / 2\n                let imagePosition = new THREE.Vector3(\n                    -IMAGE_RADIUS,\n                    0,\n                    0\n                ).applyAxisAngle(new THREE.Vector3(0, 1, 0), imageAngle)\n                \n                picture.position.x = imagePosition.x\n                picture.position.z = imagePosition.z\n                picture.lookAt(new THREE.Vector3(0, 0, 0))\n                picture.position.y = 10\n                imageGroup.add(picture)\n                })\n            })\n        })\n    }\n}\n\nfunction generateImageData(chapter) {\n    let imageData = []\n\n    let imagePromises = []\n\n    return new Promise((resolve) => {\n        //for regular images\n        for (let [j, img] of chapter.images.entries()) {\n            let p = window.fetch(\n                `${API_URL}?action=query&titles=${img.fileName}&format=json&prop=imageinfo&iiprop=url&origin=*`\n            )\n            imagePromises.push(p)\n        }\n\n        Promise.all(imagePromises).then((responseArr) => {\n            let jsonPromises = responseArr.map((response) => {\n                return response.json()\n            })\n            Promise.all(jsonPromises).then(function (dataArr) {\n                let picPromises = dataArr.map((data, idx) => {\n                    let url = data.query.pages[\"-1\"].imageinfo[0].url\n                    let img = {\n                        fileURL: url,\n                        description: chapter.images[idx].description,\n                    }\n                    return addPicture(img)\n                })\n\n                picPromises.unshift(createTextPlane(chapter.paragraph[0], 20))\n\n                resolve(picPromises)\n            })\n        })\n    })\n}\n\nfunction addPicture(img) {\n    return new Promise((resolve) => {\n        createImagePlane(img.fileURL).then((plane) => {\n            createTextPlane(img.description).then((textPlane) => {\n                textPlane.position.z = 1\n                textPlane.position.y = -10\n                plane.add(textPlane)\n                resolve(plane)\n            })\n        })\n    })\n}\n\nfunction fetchImage(filename, description) {\n    let output = document.getElementById(\"output\")\n\n    let img = document.createElement(\"img\")\n    img.title = description\n    output.appendChild(img)\n\n    window\n        .fetch(\n            `${API_URL}?action=query&titles=${filename}&format=json&prop=imageinfo&iiprop=url&origin=*`\n        )\n        .then((response) => {\n            response.json().then(function (data) {\n                let url = data.query.pages[\"-1\"].imageinfo[0].url\n\n                img.src = url\n            })\n        })\n}\n\nfunction generate() {\n    let topic = document.getElementById(\"topic\").value\n\n    let topicDiv = document.getElementById(\"topic\")\n    topicDiv.blur()\n\n    let outputDiv = document.getElementById(\"output\")\n    outputDiv.innerHTML = \"\"\n\n    window\n        .fetch(\n            `${API_URL}?action=query&format=json&prop=revisions&titles=${topic}&formatversion=2&rvprop=content&rvslots=*&origin=*`\n        )\n        .then((response) => {\n            response.json().then(function (data) {\n                let wikiContent =\n                    data.query.pages[0].revisions[0].slots.main.content\n                let exhibition = parseArticle(wikiContent)\n                render3DExhibition(exhibition)\n                // Hack: assume that images are on their own lines.\n            })\n        })\n}\n\nfunction getSuggestions(value) {\n    window\n        .fetch(\n            `${API_URL}?action=opensearch&format=json&formatversion=2&search=${value}&namespace=0&limit=10&origin=*`\n        )\n        .then((response) => {\n            response.json().then(function (data) {\n                let datalist = document.getElementById(\"suggestions\")\n                datalist.innerHTML = \"\"\n\n                for (let item of data[1]) {\n                    addOption(item)\n                }\n            })\n        })\n}\n\nfunction addOption(label) {\n    let datalist = document.getElementById(\"suggestions\")\n    let option = document.createElement(\"option\")\n\n    option.value = `${label}`\n    datalist.appendChild(option)\n}\n\nfunction animate() {\n    const delta = clock.getDelta()\n\n    velocity.x -= velocity.x * 10.0 * delta\n    velocity.z -= velocity.z * 10.0 * delta\n\n    velocity.y -= 9.8 * 100.0 * delta\n\n    direction.z = Number(moveForward) - Number(moveBackward)\n    direction.x = Number(moveRight) - Number(moveLeft)\n    direction.normalize()\n\n    if (moveForward || moveBackward) velocity.z -= direction.z * 400.0 * delta\n    if (moveLeft || moveRight) velocity.x -= direction.x * 400.0 * delta\n\n    controls.moveRight(-velocity.x * delta)\n    controls.moveForward(-velocity.z * delta)\n\n    controls.getObject().position.y += velocity.y * delta\n\n    if (controls.getObject().position.y < 10) {\n        velocity.y = 0\n        controls.getObject().position.y = 10\n\n        canJump = true\n    }\n\n    requestAnimationFrame(animate)\n\n    renderer.render(scene, camera)\n}\n\nfunction setupScene() {\n    clock = new THREE.Clock()\n\n    scene = new THREE.Scene()\n    scene.background = new THREE.Color(0xa3c3f7)\n\n    camera = new THREE.PerspectiveCamera(\n        75,\n        CANVAS_WIDTH / CANVAS_HEIGHT,\n        0.1,\n        1000\n    )\n\n    renderer = new THREE.WebGLRenderer({antialias: true})\n    renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT)\n    document.body.appendChild(renderer.domElement)\n\n    controls = new THREE.PointerLockControls(camera, document.body)\n    controls.movementSpeed = 150\n    controls.lookSpeed = 0.1\n    renderer.domElement.addEventListener(\"click\", function () {\n        controls.lock()\n    })\n\n    const onKeyDown = function (event) {\n        switch (event.code) {\n            case \"ArrowUp\":\n            case \"KeyW\":\n                moveForward = true\n                break\n\n            case \"ArrowLeft\":\n            case \"KeyA\":\n                moveLeft = true\n                break\n\n            case \"ArrowDown\":\n            case \"KeyS\":\n                moveBackward = true\n                break\n\n            case \"ArrowRight\":\n            case \"KeyD\":\n                moveRight = true\n                break\n\n            case \"Space\":\n                if (canJump === true) velocity.y += 350\n                canJump = false\n                break\n        }\n    }\n\n    const onKeyUp = function (event) {\n        switch (event.code) {\n            case \"ArrowUp\":\n            case \"KeyW\":\n                moveForward = false\n                break\n\n            case \"ArrowLeft\":\n            case \"KeyA\":\n                moveLeft = false\n                break\n\n            case \"ArrowDown\":\n            case \"KeyS\":\n                moveBackward = false\n                break\n\n            case \"ArrowRight\":\n            case \"KeyD\":\n                moveRight = false\n                break\n        }\n    }\n\n    document.addEventListener(\"keydown\", onKeyDown)\n    document.addEventListener(\"keyup\", onKeyUp)\n}\n\nfunction setupFloor() {\n    const light = new THREE.DirectionalLight(0xffffff, 1)\n    light.position.x = 4\n    light.castShadow = true\n    scene.add(light)\n\n    const ambient = new THREE.AmbientLight(0xffffff) // soft white light\n    scene.add(ambient)\n\n    const geometry = new THREE.CylinderGeometry(\n        CHAPTER_RADIUS + IMAGE_RADIUS,\n        CHAPTER_RADIUS + IMAGE_RADIUS,\n        10,\n        128\n    )\n    const material = new THREE.MeshStandardMaterial({color: 0x188c1c})\n    const ground = new THREE.Mesh(geometry, material)\n    scene.add(ground)\n    ground.position.y = -20\n}\n\nfunction createImagePlane(url, height = 30) {\n    return new Promise((resolve) => {\n        var texture = new THREE.TextureLoader().load(url, (texture) => {\n            let ratio = texture.image.width / texture.image.height\n            var planeGeometry = new THREE.PlaneGeometry(height * ratio, height)\n            var planeMaterial = new THREE.MeshLambertMaterial({\n                map: texture,\n                side: THREE.DoubleSide,\n            })\n\n            var plane = new THREE.Mesh(planeGeometry, planeMaterial)\n            resolve(plane)\n        })\n    })\n}\n\nfunction createTextPlane(text, height = 2) {\n    return new Promise((resolve) => {\n        let div = document.createElement(\"div\")\n        div.innerHTML = text\n        div.style.maxWidth = \"300px\"\n        div.style.display = \"inline-block\"\n        div.style.padding = \"3px\"\n        document.body.appendChild(div)\n        html2canvas(div, {logging: false}).then(function (canvas) {\n            createImagePlane(canvas.toDataURL(), height).then((plane) => {\n                resolve(plane)\n            })\n        })\n    })\n}\n\nwindow.onload = function () {\n    document.getElementById(\"topic\").addEventListener(\"keyup\", (e) => {\n        if (e.key === \"Enter\") {\n            generate()\n        }\n    })\n    document\n        .getElementById(\"generate-button\")\n        .addEventListener(\"click\", (e) => generate())\n    document\n        .getElementById(\"topic\")\n        .addEventListener(\"input\", (e) => getSuggestions(e.target.value))\n\n    setupScene()\n\n    animate()\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","d1","b1","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","body","g","sent","v","op","y","_","label","ops","pop","trys","push","verb","throw","Symbol","iterator","__spreadArray","to","from","pack","ar","l","slice","Bounds","Bounds1","left","top","width","height","add","x","w","h","fromClientRect","context","clientRect","windowBounds","fromDOMRectList","domRectList","domRect","EMPTY","toCodePoints$1","str","fromCodePoint","codePoints","charCodeAt","extra","_i","codeUnits","index","chars","codePoint","fromCharCode","lookup","Uint8Array","i$2","lookup$2","chars$2","slice16$1","slice16","view","start","end","Trie","initialValue","errorValue","highStart","highValueIndex","data","ix","UTRIE2_LSCP_INDEX_2_LENGTH","UTRIE2_INDEX_1_OFFSET","UTRIE2_INDEX_1_OFFSET$1","UTRIE2_INDEX_2_BLOCK_LENGTH$1","SP","BA","HY","CL","CP","EX","IN","NS","OP","IS","NU","PO","PR","SY","AL","EB","EM","H3","BREAK_ALLOWED","UnicodeTrie","JV","JT","ea_OP","CR","LF","SPACE","BREAK_ALLOWED$1","UnicodeTrie$1","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","polyUint16Array","ArrayBuffer","bytes","isArray","buffer","polyUint32Array","decode$1","UTRIE2_INDEX_SHIFT","UTRIE2_SHIFT_1_2","polyUint32Array$1","Uint32Array","polyUint16Array$1","Uint16Array","createTrieFromBase64$1","BREAK_NOT_ALLOWED","SPACE$1","PREFIX_POSTFIX","LINE_BREAKS","HARD_LINE_BREAKS","concat","KOREAN_SYLLABLE_BLOCK","JL","a","currentIndex","classTypes","indexOf","current","prev","previousNonSpaceClassType","type","indicies","BREAK_NOT_ALLOWED$1","forbiddenBreaks","afterIndex","before","beforeIndex","get","isAdjacentWithSpaceIgnored","HYPHEN","ID","ALPHABETICS","prevIndex","H2","count","cssFormattedClasses","options","lineBreak","_a","indices","types","classType","SA","categories","codePointsToCharacterClasses","isLetterNumber","wordBreak","map","letterNumber","undefined","Break","Break1","required","HYPHEN_MINUS","PLUS_SIGN","isDigit","isWhiteSpace","isNameStartCodePoint","isLowerCaseLetter","isUpperCaseLetter","isLetter","isNonASCIICodePoint","isNonPrintableCodePoint","c1","c2","isIdentifierStart","c3","isValidEscape","stringToNumber","c","sign","integers","parseInt","fromCodePoint$1","fraction","fracd","frac","expsign","exponent","exp","LEFT_PARENTHESIS_TOKEN","RIGHT_PARENTHESIS_TOKEN","COMMA_TOKEN","SUFFIX_MATCH_TOKEN","PREFIX_MATCH_TOKEN","COLUMN_TOKEN","DASH_MATCH_TOKEN","INCLUDE_MATCH_TOKEN","LEFT_CURLY_BRACKET_TOKEN","RIGHT_CURLY_BRACKET_TOKEN","SUBSTRING_MATCH_TOKEN","BAD_URL_TOKEN","BAD_STRING_TOKEN","CDO_TOKEN","CDC_TOKEN","COLON_TOKEN","SEMICOLON_TOKEN","RIGHT_SQUARE_BRACKET_TOKEN","WHITESPACE_TOKEN","_value","write","chunk","consumeToken","EOF_TOKEN","token","consumeCodePoint","consumeStringToken","peekCodePoint","flags","reconsumeCodePoint","consumeNumericToken","e3","e1","e2","EOF","a1","a2","a3","consumeName","LEFT_SQUARE_BRACKET_TOKEN","consumeIdentLikeToken","u1","isHex","u2","consumeWhiteSpace","shift","unshift","delta","consumeUnicodeRangeToken","digits","questionMarks","digit","endDigits","consumeUrlToken","stringToken","consumeBadUrlRemnants","consumeEscapedCodePoint","consumeStringSlice","amount","Math","min","endingCodePoint","splice","consumeNumber","repr","number","unit","Tokenizer1","hex","isSurrogateCodePoint","hexCodePoint","isNameCodePoint","Parser1","tokens","_tokens","tokenizer","Tokenizer","read","parseComponentValue","parseValues","parseComponentValues","SyntaxError","reconsumeToken","consumeComponentValue","values","consumeSimpleBlock","consumeFunction","block","isEndingTokenFor","functionToken","cssFunction","isStringToken","args","arg","forEach","Error","isLength","isLengthPercentage","parseLengthPercentageTuple","ZERO_LENGTH","HUNDRED_PERCENT","tuple","getAbsoluteValue","parent","isDimensionToken","PI","GRAD","TURN","filter","isIdentToken","ident","deg","deg1","colorFunction","SUPPORTED_COLOR_FUNCTIONS","name","r","substring","namedColor","COLORS","toUpperCase","TRANSPARENT","isTransparent","color","blue","red","alpha","green","round","getTokenColorValue","max","rgb","_context","nonFunctionArgSeparator","_b","hue2rgb","t1","t2","hue","saturation","lightness","angle","hsl","hsla","rgba","parseColor","color$1","Parser","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREEN","GREENYELLOW","GREY","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","TAN","THISTLE","TOMATO","TURQUOISE","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","CSSImageType","CSSImageType1","CSSRadialShape1","parse","BACKGROUND_CLIP","PADDING_BOX","CONTENT_BOX","BORDER_BOX","format","parseColorStop","stop","stops","lineLength","first","last","processStops","previous","stop_1","absoluteValue","stop_2","gapBegin","gapLength","gapValue","i1","angle1","corner","centerX","centerY","atan2","abs","sin","radian","cos","halfWidth","halfLineLength","yDiff","xDiff","sqrt","reduce","stat","cx","cy","distance","closest","optimumDistance","Infinity","firstToken","angle$1","parseNamedSide","isAngle","colorStop","LINEAR_GRADIENT","CLOSEST_SIDE","CIRCLE","FARTHEST_CORNER","FIFTY_PERCENT","position","isColorStop","acc","shape","CSSRadialShape","ELLIPSE","size","CSSRadialExtent","FARTHEST_SIDE","CLOSEST_CORNER","COVER","RADIAL_GRADIENT","CSSRadialExtent1","BACKGROUND_REPEAT","image_1","URL","cache","addImage","imageFunction","SUPPORTED_IMAGE_FUNCTIONS","parseFunctionArgs","prefixLinearGradient","CONTAIN","prefixRadialGradient","colorType","isNumberToken","prefix","isSupportedImage","backgroundPosition","BACKGROUND_REPEAT1","backgroundRepeat","parseBackgroundRepeat","NO_REPEAT","REPEAT_X","REPEAT_Y","REPEAT","BACKGROUND_SIZE","BACKGROUND_SIZE1","BORDER_STYLE1","backgroundSize","isBackgroundSizeInfoToken","borderColorForSide","side","borderRightColor","borderBottomColor","borderLeftColor","borderRadiusForSide","borderTopLeftRadius","FLOAT","FLOAT1","style","BORDER_STYLE","NONE","DASHED","DOUBLE","SOLID","borderStyleForSide","borderBottomStyle","borderLeftStyle","borderWidthForSide","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","direction","direction1","bit","parseDisplayValue","display1","float1","LEFT","RIGHT","INLINE_START","INLINE_END","lineBreak1","LINE_BREAK","STRICT","NORMAL","lineHeight","fontSize","listStyleImage","image","LIST_STYLE_POSITION","LIST_STYLE_POSITION1","LIST_STYLE_TYPE","LIST_STYLE_TYPE1","listStylePosition","INSIDE","OUTSIDE","OVERFLOW","OVERFLOW1","DISC","SQUARE","DECIMAL","CJK_DECIMAL","DECIMAL_LEADING_ZERO","LOWER_ROMAN","UPPER_ROMAN","LOWER_GREEK","LOWER_ALPHA","UPPER_ALPHA","ARABIC_INDIC","ARMENIAN","BENGALI","CAMBODIAN","CJK_EARTHLY_BRANCH","CJK_HEAVENLY_STEM","CJK_IDEOGRAPHIC","DEVANAGARI","ETHIOPIC_NUMERIC","GEORGIAN","GUJARATI","GURMUKHI","HEBREW","HIRAGANA","HIRAGANA_IROHA","JAPANESE_FORMAL","JAPANESE_INFORMAL","KANNADA","KATAKANA","KATAKANA_IROHA","KHMER","KOREAN_HANGUL_FORMAL","KOREAN_HANJA_FORMAL","KOREAN_HANJA_INFORMAL","LAO","LOWER_ARMENIAN","MALAYALAM","MONGOLIAN","MYANMAR","ORIYA","PERSIAN","SIMP_CHINESE_FORMAL","SIMP_CHINESE_INFORMAL","TAMIL","TELUGU","THAI","TIBETAN","TRAD_CHINESE_FORMAL","TRAD_CHINESE_INFORMAL","UPPER_ARMENIAN","DISCLOSURE_OPEN","marginTop","marginForSide","marginRight","marginBottom","marginLeft","overflow1","SCROLL","CLIP","AUTO","VISIBLE","overflowWrap","paddingForSide","paddingTop","paddingRight","paddingBottom","paddingLeft","POSITION","POSITION1","textAlign1","TEXT_ALIGN","CENTER","TEXT_TRANSFORM","position1","RELATIVE","ABSOLUTE","FIXED","STICKY","STATIC","isIdentWithValue","offsetX","blur","shadow","offsetY","TEXT_TRANSFORM1","transform","textTransform1","UPPERCASE","LOWERCASE","CAPITALIZE","transform$1","transformFunction","SUPPORTED_TRANSFORM_FUNCTIONS","matrix","matrix3d","a21","b2","a4","b4","a12","DEFAULT_VALUE","origins","VISIBILITY","visibility1","HIDDEN","WORD_BREAK","wordBreak1","BREAK_ALL","KEEP_ALL","auto","time","toLowerCase","opacity","line","accumulator","results","join","fontVariant","FONT_STYLE","OBLIQUE","ITALIC","contains","content","filtered","nonWhiteSpace","counter","increment","increments","reset","resets","duration","open_1","close_1","quotes1","open","close","depth","quote","spread","inset","PAINT_ORDER_LAYER","PAINT_ORDER_LAYER1","FILL","STROKE","layers","MARKERS","DEFAULT_VALUE1","CSSParsedDeclaration1","declaration","animationDuration","backgroundClip","backgroundColor","backgroundImage","backgroundOrigin","borderTopColor","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopStyle","borderRightStyle","boxShadow","display","float","cssFloat","fontFamily","fontStyle","fontWeight","letterSpacing","listStyleType","overflow","overflowX","overflowTuple","overflowY","paintOrder","textAlign","textDecorationColor","textDecorationLine","textDecoration","textShadow","textTransform","transformOrigin","visibility","webkitTextStrokeColor","webkitTextStrokeWidth","zIndex","isVisible","isTransformed","isPositioned","isPositionedWithZIndex","isFloating","isInlineLevel","CSSParsedPseudoDeclaration","quotes","counterIncrement","counterReset","descriptor","toString","parser","length_1","value_1","element","getAttribute","elementType","textNodes","elements","isDebugging","chars$1","i$1","lookup$1","Trie1","UTRIE2_INDEX_2_BLOCK_LENGTH","PseudoElementType","PseudoElementType1","base641","decode","codePointToClass","_graphemeBreakAtIndex","_codePoints","L","LV","V","countRI","toCodePoints","graphemeBreak","lastEnd","GraphemeBreaker","bk","breaker","graphemes","isGreenPixel","node","xmlns","loadSerializedSVG","createElementNS","document","setAttributeNS","foreignObject","svg","appendChild","img","onerror","src","encodeURIComponent","XMLSerializer","serializeToString","SUPPORT_RANGE_BOUNDS","createRange","range","getBoundingClientRect","testElement","createElement","TEST_HEIGHT","selectNode","rangeBounds","rangeHeight","removeChild","testRangeBounds","defineProperty","FEATURES","SUPPORT_WORD_BREAKING","wordSpacing","innerHTML","repeat","firstChild","textList","offset","supports","every","text","setEnd","rect","boundAhead","testIOSLineBreak","SUPPORT_SVG_DRAWING","Image","ctx","canvas","getContext","drawImage","toDataURL","testSVG","SUPPORT_FOREIGNOBJECT_DRAWING","window","fetch","fillStyle","fillRect","createForeignObjectSVG","img1","getImageData","greenImageSrc","loadSerializedSVG$1","catch","testForeignObject","SUPPORT_CORS_IMAGES","crossOrigin","SUPPORT_RESPONSE_TYPE","XMLHttpRequest","responseType","bounds","ownerDocument","wrapper","cloneNode","parentNode","replaceChild","parseBounds","setStart","getRangeBounds","breakText","styles","splitGraphemes","breakWords","forbiddenBreakpoints","nextIndex","_lineBreakAtIndex","word_1","wordSeparators","words","_loop_1","textBounds","trim","TextBounds","getClientRects","replacementNode","splitText","getWrapperBounds","parseTextBounds","transform1","replace","capitalize","m","p1","p2","ImageElementContainer1","_super","ImageElementContainer2","_this","currentSrc","intrinsicWidth","naturalWidth","CanvasElementContainer2","intrinsicHeight","SVGElementContainer1","SVGElementContainer2","setAttribute","baseVal","LIElementContainer2","OLElementContainer2","reversed","RADIO_BORDER_RADIUS","InputElementContainer2","input","checked","PASSWORD","placeholder","CHECKBOX","RADIO","CHECKBOX_BORDER_RADIUS","option","selectedIndex","SelectElementContainer2","TextareaElementContainer2","IFrameElementContainer2","iframe","contentWindow","documentElement","tree","parseTree","documentBackgroundColor","getComputedStyle","bodyBackgroundColor","root","nextNode","childNode","nextSibling","TextContainer","isSlotElement","assignedNodes","childNode1","parseNodeTree","container","createContainer","createsRealStackingContext","createsStackingContext","LIST_OWNERS","tagName","slot","shadowRoot","isTextareaElement","isSVGElement","isSelectElement","isImageElement","isCanvasElement","CanvasElementContainer1","isLIElement","LIElementContainer1","isOLElement","OLElementContainer1","InputElementContainer1","SelectElementContainer1","TextareaElementContainer1","IFrameElementContainer1","ElementContainer","isBodyElement","nodeType","Node","TEXT_NODE","ELEMENT_NODE","isElementNode","isSVGElementNode","className","CounterState","CounterState1","counters","getCounterValue","getCounterValues","counterIncrement1","counterReset1","canReset","entry","counterNames","symbols","fallback","suffix","createCounterText","string","integer","createCounterStyleWithSymbolResolver","codePointRangeLength","isNumeric","resolver","createCounterStyleFromRange","codePointRangeStart","codePointRangeEnd","floor","createCounterStyleFromSymbols","createCJKCounter","numbers","multipliers","negativeSign","tmp","coefficient","appendSuffix","spaceSuffix","defaultSuffix","cjkSuffix","createAdditiveCounter","ROMAN_UPPER","CHINESE_INFORMAL_MULTIPLIERS","CJK_TEN_COEFFICIENTS","CHINESE_FORMAL_MULTIPLIERS","CJK_ZEROS","JAPANESE_NEGATIVE","KOREAN_NEGATIVE","koreanSuffix","DocumentCloner1","scrolledElements","referenceElement","defaultView","pageXOffset","pageYOffset","iframeLoader","cloneWindow","scrollTo","windowSize","test","navigator","userAgent","scrollY","scrollX","documentClone","fonts","ready","onclone","serializeDoctype","doctype","adoptNode","iframeLoad","createElementClone","createCanvasClone","isStyleElement","createStyleClone","clone","srcset","loading","sheet","cssRules","css","css1","rule","cssText","textContent","logger","error","inlineImages","info","clonedCtx","clonedCanvas","allowTaint","putImageData","gl","attribs","getContextAttributes","preserveDrawingBuffer","warn","createTextNode","isHTMLElementNode","transitionProperty","styleBefore","clonedReferenceElement","createPseudoHideStyles","CSSParsedCounterDeclaration","resolvePseudoContent","BEFORE","child","copyStyles","insertBefore","after","styleAfter","AFTER","isIFrameElement","copyCSSStyles","scrollTop","scrollLeft","pseudoElt","anonymousReplacedElement","attr","counterStyle","counterState","counterType","delim","counterStates","counterType_1","separator","getQuote","quoteDepth","PSEUDO_HIDE_ELEMENT_CLASS_BEFORE","PSEUDO_HIDE_ELEMENT_CLASS_AFTER","newClassName","baseValue","destroy","cloneIframeContainer","border","IGNORE_ATTRIBUTE","imageReady","complete","onload","all","images","childNodes","readyState","ignoredStyleProperties","target","property","item","setProperty","getPropertyValue","internalSubset","publicId","systemId","restoreOwnerScroll","restoreNodeScroll","createStyles","PSEUDO_HIDE_ELEMENT_STYLE","CacheStorage1","CacheStorage2","getOrigin","url","link","_link","href","protocol","hostname","port","isSameOrigin","_origin","location","Cache2","_options","_cache","has","key","useCORS","useProxy","isInlineImage","isBlobImage","proxy","debug","isInlineBase64Image","imageTimeout","setTimeout","keys","xhr","status","response","reader_1","FileReader","addEventListener","readAsDataURL","queryString","timeout_1","timeout","ontimeout","send","INLINE_BASE64","INLINE_IMG","isSVG","substr","INLINE_SVG","CORNER","some","Vector","Vector1","PathType","VECTOR","deltaX","deltaY","BezierCurve1","startControl","endControl","BEZIER_CURVE","subdivide","firstHalf","ab","lerp","bc","cd","abbc","bccd","dest","reverse","path","getAbsoluteValueForTuple","tlh","tlv","trh","trv","_c","brh","brv","_d","blh","blv","factors","maxFactor","topLeftBorderDoubleOuterBox","getCurvePoints","borderLeftWidth1","borderTopWidth1","TOP_LEFT","topRightBorderDoubleOuterBox","topWidth","borderRightWidth1","TOP_RIGHT","bottomRightBorderDoubleOuterBox","bottomWidth","rightHeight","borderBottomWidth1","BOTTOM_RIGHT","bottomLeftBorderDoubleOuterBox","leftHeight","BOTTOM_LEFT","topLeftBorderDoubleInnerBox","topRightBorderDoubleInnerBox","bottomRightBorderDoubleInnerBox","bottomLeftBorderDoubleInnerBox","topLeftBorderStroke","topRightBorderStroke","bottomRightBorderStroke","bottomLeftBorderStroke","topLeftBorderBox","topRightBorderBox","bottomRightBorderBox","bottomLeftBorderBox","topLeftPaddingBox","topRightPaddingBox","bottomRightPaddingBox","bottomLeftPaddingBox","topLeftContentBox","paddingLeft1","paddingTop1","bottomRightContentBox","paddingRight1","paddingBottom1","bottomLeftContentBox","r1","r2","xm","ym","BezierCurve","oy","ox","curves","matrix1","ClipEffect","OpacityEffect","opacity1","effect","StackingContext","inlineLevel","nonInlineLevel","negativeZIndex","zeroOrAutoZIndexOrTransformedOrOpacity","positiveZIndex","nonPositionedFloats","nonPositionedInlineLevel","ElementPaint1","BoundCurves","effects","TransformEffect","borderBox","calculateBorderBoxPath","paddingBox","calculatePaddingBoxPath","equalPath","getEffects","croplessEffects","isClipEffect","inFlow","stackingContext","realStackingContext","listItems","paintContainer","createsStackingContext1","treatAsRealStackingContext","stack","order_1","order","index_1","parentStack","index_2","parseStackTree","listOwnerItems","processListItems","owner","numbering","listValue","parsePathForBorder","borderSide","createPathFromCurves","outer1","outer2","inner1","inner2","isBezierCurve","contentBox","intrinsicSize","backgroundOrigin1","backgroundPositioningArea","getBackgroundValueForIndex","backgroundClip1","backgroundImageSize","calculateBackgroundSize","sizeWidth","sizeHeight","calculateBackgroundRepeatPath","backgroundPaintingArea","isAuto","intrinsicProportion","second","hasIntrinsicValue","hasIntrinsicWidth","hasIntrinsicHeight","hasIntrinsicDimensions","hasIntrinsicProportion","width_3","height_3","FontMetrics1","_data","_document","parseMetrics","fontFamily1","fontSize1","span","margin","padding","verticalAlign","baseline","offsetTop","SAMPLE_TEXT","middle","getMetrics","CanvasRenderer2","_activeEffects","scale","fontMetrics","FontMetrics","translate","textBaseline","applyEffects","popEffect","applyEffect","save","globalAlpha","renderStackContent","paint","renderNodeContent","renderTextWithLetterSpacing","letterSpacing1","fillText","letter","measureText","createFontStyle","fontVariant1","variant","renderTextNode","paintOrder1","font","text1","paintOrderLayer","asString","textShadows","textShadow1","shadowColor","shadowOffsetX","shadowOffsetY","textDecorationLine1","ceil","strokeStyle","lineWidth","lineJoin","image1","box","renderReplacedElement","render","INPUT_COLOR","fill","restore","beginPath","arc","canvasTextAlign","computeLineHeight","_p","renderNodeBackgroundAndBorders","_e","_f","_g","_h","_j","_k","_l","_m","_o","mask","paths","moveTo","lineTo","closePath","formatPath","point","bezierCurveTo","renderRepeat","pattern","calculateBackgroundRendering","this_1","createPattern","resizeImage","backgroundImage2","calculateGradientDirection","x0","x1","y0","y1","createLinearGradient","gradient_1","addColorStop","background","isRadialGradient","top_1","gradient","rx","ry","findCorner","createRadialGradient","radialGradient_1","f1","innerPaths","renderSolidBorder","color1","curvePoints","outerPaths","parsePathForBorderDoubleOuter","calculateBackgroundCurvedPaintingArea","clip","renderBackgroundImage","deltaW","deltaH","borderBoxArea","maskOffset","shadowPaintingArea","shadowBlur","borders_1","borders","renderDashedDottedBorder","boxPaths","startX","startY","endX","endY","dashLength","spaceLength","useLineDash","multiplier","numberOfDashes","minSpace","maxSpace","path1","path2","strokePaths","createStrokePathFromCurves","parsePathForBorderStroke","DOTTED","setLineDash","lineCap","stroke","ElementPaint","renderStack","topRightContentBox","ForeignObjectRenderer2","Logger1","enabled","now","console","id","getTime","Date","Context","Context1","instanceName","instanceCount","Logger","logging","setContext","opts","resourceOptions","contextOptions","windowOptions","foreignObjectRendering","cloneOptions","documentCloner","clonedElement","backgroundColor1","renderOptions","_q","_r","_s","_t","_u","__assign","windowWidth","innerWidth","windowHeight","ignoreElements","DocumentCloner","toIFrame","scrollWidth","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","parseDocumentSize","devicePixelRatio","ForeignObjectRenderer1","removeContainer","global","factory","$53e019e655e61b94$exports","define","amd","globalThis","self","wtf","require$$0$a","o","u","ok","statusText","responseURL","responseText","json","JSON","blob","Blob","headers","entries","method","getAllResponseHeaders","n1","withCredentials","credentials","setRequestHeader","browser","default","parseUrl_1","parsed","title","pathname","decodeURIComponent","domain","host","require$$0$9","charAt","trim_whitespace","isObject","isArray$3","isInterWiki","defaults$c","action","prop","rvprop","maxlag","rvslots","origin","redirects","cleanTitle","page","makeUrl_1","params","apiPath","lang","wiki","follow_redirects","pageids","titles","obj","getResult_1","query","pages","revisions","slots","main","pageprops","meta","pageID","pageid","namespace","ns","wikidata","wikibase_item","description","_sectionMap","doc","fn","clue","arr","sections","sec","list","setDefaults_1","defaults","setDefaults","defaults$b","toJson$9","isRedirect","redirectTo","coordinates","infoboxes","plaintext","citations","references","i18n","disambig_templates","disambig_titles","alt_disambig","inTitle","RegExp","i18n_templates","byText","txt","isDisambig_1","templates","tmpl","find","template","sentence","defaults$a","caption","alt","links","thumb","toJson$7","file","thumbnail","Image1","enumerable","methods$8","fileName","encodeTitle","makeSrc","split","wikitext","k","Image_1","languages$1","aa","af","ak","als","am","an","ang","as","ast","av","ay","az","ba","bar","bcl","be","bg","bh","bi","bm","bn","bo","bpy","br","bs","bug","bxr","ca","cdo","ce","ceb","ch","cho","chr","chy","co","cr","cs","csb","cu","cv","da","de","diq","dsb","dv","dz","ee","far","el","en","eo","es","et","eu","ext","ff","fi","fj","fo","fr","frp","fur","fy","ga","gan","gd","gil","gn","got","gu","gv","ha","hak","haw","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","ilo","io","is","it","iu","ja","jbo","jv","ka","kg","ki","kj","kk","kl","km","kn","khw","ko","kr","ks","ksh","ku","kv","kw","ky","la","lad","lan","lb","lg","li","lij","lmo","ln","lo","lt","lv","mg","man","mh","mi","mk","ml","mn","mo","mr","ms","mt","mus","my","na","nah","nap","nd","nds","ne","new","ng","nl","nn","no","nr","nso","nrm","nv","ny","oc","oj","om","or","os","pa","pag","pam","pap","pdc","pi","pih","pl","pms","ps","pt","qu","rm","rmy","rn","ro","ru","rw","sa","sc","scn","sco","sd","se","sg","sh","si","simple","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tet","tg","th","ti","tk","tl","tn","tpi","tr","ts","tt","tum","tw","ty","udm","ug","uk","ur","uz","ve","vi","vec","vls","vo","wa","war","wo","xal","xh","yi","yo","za","zh","zu","wp","wm","interwiki$1","acronym","advisory","advogato","aew","appropedia","aquariumwiki","arborwiki","arxiv","atmwiki","baden","battlestarwiki","bcnbio","beacha","betawiki","bibcode","bibliowiki","bluwiki","blw","botwiki","boxrec","brickwiki","bugzilla","bulba","c2find","cellwiki","centralwikia","chej","choralwiki","citizendium","ckwiss","comixpedia","commons","communityscheme","communitywiki","comune","creativecommons","creativecommonswiki","cxej","dcc","dcdatabase","dcma","debian","delicious","devmo","dictionary","dict","disinfopedia","distributedproofreaders","distributedproofreadersca","dmoz","dmozs","doi","donate","doom_wiki","download","dbdump","dpd","drae","dreamhost","drumcorpswiki","dwjwiki","ecoreality","ecxei","elibre","emacswiki","encyc","energiewiki","englyphwiki","enkol","eokulturcentro","esolang","etherpad","ethnologue","ethnologuefamily","evowiki","exotica","fanimutationwiki","fedora","finalfantasy","finnix","flickruser","flickrphoto","floralwiki","foldoc","foundation","foundationsite","foxwiki","freebio","freebsdman","freeculturewiki","freedomdefined","freefeel","freekiwiki","freesoft","ganfyd","gardenology","gausswiki","gentoo","genwiki","gerrit","git","google","googledefine","googlegroups","guildwarswiki","guildwiki","guc","gucprefix","gutenberg","gutenbergwiki","hackerspaces","h2wiki","hammondwiki","hdl","heraldik","heroeswiki","horizonlabs","hrwiki","hrfwiki","hupwiki","iarchive","imdbname","imdbtitle","imdbcompany","imdbcharacter","incubator","infosecpedia","infosphere","issn","iuridictum","jaglyphwiki","jefo","jerseydatabase","jira","jspwiki","jstor","kamelo","karlsruhe","kinowiki","komicawiki","kontuwiki","wikitech","libreplanet","linguistlist","linuxwiki","linuxwikide","liswiki","literateprograms","livepedia","localwiki","lojban","lostpedia","lqwiki","luxo","mail","mailarchive","mariowiki","marveldatabase","meatball","mw","mediazilla","memoryalpha","metawiki","metawikimedia","metawikipedia","mineralienatlas","moinmoin","monstropedia","mosapedia","mozcom","mozillawiki","mozillazinekb","musicbrainz","mediawikiwiki","mwod","mwot","nkcells","nara","nosmoke","nost","nostalgia","oeis","oldwikisource","olpc","omegawiki","onelook","openlibrary","openstreetmap","openwetware","opera7wiki","organicdesign","orthodoxwiki","osmwiki","otrs","otrswiki","ourmedia","outreach","outreachwiki","owasp","panawiki","patwiki","personaltelco","petscan","phab","phabricator","phwiki","phpwiki","planetmath","pmeg","pmid","pokewiki","policy","proofwiki","pyrev","pythoninfo","pythonwiki","pywiki","psycle","quality","quarry","regiowiki","rev","revo","rfc","rheinneckar","robowiki","rodovid","reuterswiki","rowiki","rt","s23wiki","scholar","schoolswp","scores","scoutwiki","scramble","seapig","seattlewiki","slwiki","senseislibrary","sharemap","silcode","slashdot","sourceforge","spcom","species","squeak","stats","stewardry","strategy","strategywiki","sulutil","swtrain","svn","swinbrain","tabwiki","tclerswiki","technorati","tenwiki","testwiki","testwikidata","test2wiki","tfwiki","thelemapedia","theopedia","thinkwiki","ticket","tmbw","tmnet","tmwiki","toolforge","toollabs","tools","tswiki","translatewiki","tviv","tvtropes","twiki","tyvawiki","umap","uncyclopedia","unihan","unreal","urbandict","usej","usemod","usability","utrs","vikidia","vlos","vkol","voipinfo","votewiki","werelate","wg","wikia","wikiasite","wikiapiary","wikibooks","wikichristian","wikicities","wikicity","wikiconference","wikif1","wikifur","wikihow","wikiindex","wikilemon","wikilivres","wikilivresru","wikimedia","wikinews","wikinfo","wikinvest","wikiotics","wikipapers","wikipedia","wikipediawikipedia","wikiquote","wikisophia","wikisource","wikispecies","wikispot","wikiskripta","labsconsole","wikiti","wikiversity","wikivoyage","betawikiversity","wikiwikiweb","wiktionary","wipipedia","wlug","wmam","wmar","wmat","wmau","wmbd","wmbe","wmbr","wmca","wmch","wmcl","wmcn","wmco","wmcz","wmdc","securewikidc","wmde","wmdk","wmee","wmec","wmes","wmet","wmfdashboard","wmfi","wmfr","wmge","wmhi","wmhk","wmhu","wmid","wmil","wmin","wmit","wmke","wmmk","wmmx","wmnl","wmnyc","wmno","wmph","wmpl","wmpt","wmpunjabi","wmromd","wmrs","wmru","wmse","wmsk","wmtr","wmtw","wmua","wmuk","wmve","wmza","wm2005","wm2006","wm2007","wm2008","wm2009","wm2010","wm2011","wm2012","wm2013","wm2014","wm2015","wm2016","wm2017","wm2018","wmania","wikimania","wmteam","wmf","wmfblog","wmdeblog","wookieepedia","wowwiki","wqy","wurmpedia","viaf","zrhwiki","zum","zwiki","sep11","minnan","nb","nan","vro","cmn","lzh","rup","gsw","sgs","egl","wikt","q","chapter","voy","languages","wikis","parse_interwiki","match","site","ignore_links","external_link","link_reg","parse$8","raw","external_links","anchor","internal_links","parseLinks$1","REDIRECT_REGEX","redirects$1","ignore$2","openTag","closeTag","noThanks","kill_xml","preProcess_1","specialChar","encodeStr","encode$1","encodeObj","encode","defaults$9","paragraphs","tables","lists","toJson$6","section","images1","references1","ref","sentences","defaults$8","Link","methods$7","require$$5$2","formatting_1","bolds","italics","fmt","bold","italic","isNumber","defaults$7","formatting","toJSON$5","num","Number","isNaN","Sentence","methods$6","link1","interwiki","isEmpty","singular$3","Sentence_1","abbreviations","abbrev_reg","acronym_reg","elipses_reg","circa_reg","hasWord","parse$6","chunks","splits","flatten","naiive_split","hmm","closed","isBalanced","parseLinks","parseFmt","require$$2$6","sentenceParser","fromText","hasKey","reserved","whoCares","classname","align","break","boxsize","framestyle","item_style","collapsible","list_style_type","colwidth","strip","fmtName","require$$0$7","byParagraph","paragraph","pipeSplitter","keyMaker","keyIndex","res","parts","val","parseKey","cleanup$1","parseSentence$7","makeFormat","toJSON$4","Reference","methods$5","encyclopedia","author","toJSON$3","require$$7$1","parseSentence$6","hasCitation","parseCitation","parseInline","inline","require$$4$3","_wiki","_references","parseSentence$5","heading_reg","heading","getRowSpan","getColSpan","findRows","lines","rows","row","cleanup","handleSpans","doRowSpan","doColSpan","parseSentence$4","isHeading","headings$1","age","born","date","year","city","country","population","cleanText","firstRowHeader","parse$5","removeMidSpans","Boolean","findHeaders","want","table","parseRow","toJson_1$2","toJson$3","defaults$6","normalize$1","Table","methods$4","have","mapping","keyValue","keyvalue","keyval","tableParser","require$$8$1","openReg","closeReg","_tables","defaults$5","toJSON$2","defaults$4","Paragraph","methods$3","singular$2","citation","Paragraph_1","nested_find_1","out","open_count","close_count","j","require$$3$3","nested_find","parseSentence$3","isFile","fileNames","file_reg","imgLayouts","right","center","bottom","none","upright","sub","super","_lang","_domain","imgData","oneImage","defaults$3","List","methods$2","toText$2","require$$6$1","parseSentence$2","list_reg","bullet_reg","number_reg","has_word","isList","grabList","cleanList","require$$1$7","parseSentences","twoNewLines","parse$4","theRest","_03Paragraph","_paragraphs","_02Flat","carry","findFlat","getName","hasTemplate","parseTemplate$2","children","doEach","inside","_01Nested","_ignore","_infoboxes","editnotice","geobox","hybridbox","ichnobox","infraspeciesbox","mycomorphbox","oobox","speciesbox","subspeciesbox","taxobox","nhlteamseason","edencharacter","samurai","protein","ordination","mlbbioret","i18nReg","startReg","endReg","yearIn","_infobox","isInfobox","infobox","aliases$1","imdb","localday","localdayname","localyear","cvt","cricon","sfrac","redir","sisterlinks","multi","flagcountry","trunc","percentage","rnd","abbr","sfn","currentmonth","currency","coord","nihongo","plainlist","aliases_1","hardcoded","dot","middot","ndash","mdash","ibeam","ampersand","snds","snd","bracket","asterisk","clear","profit","loss","gain","templates$a","p3","resize","sort","shorthand$1","lib$1","titlecase","sisterProjects","commonscat","getLang","english_title","numerator","denominator","perc","dec","decimals","toFixed","toNumber","functions$2","ra","hours","minutes","seconds","deg2hms","degrees","hms2deg","decdeg","sortname","nolink","dab","sep","reign","circa","decade","century","radic","oldstyledate","braces","attrs","hlist","pagelist","catlist","f","term","linum","lbs","lbc","lbb","lc","uc","lcfirst","ucfirst","padleft","padStart","padright","padEnd","abbrlink","own","formatnum","toLocaleString","convert","two","four","three","won","place","tag","ignore","div","plural","word","ul","upl","total","templates$9","flag","found","flagcu","flagicon","flagdeco","fb","fbicon","flagathlete","flags_1","templates$8","require$$0$6","require$$1$5","require$$2$4","require$$3$2","require$$4$2","textOnly","templates$7","idName_1","templates$6","functions$1","ipa","list1","ipac","transcription","yel","subon","suboff","parser1","alias","teplate","redirect","desc","gallery","sky","ascension","asc_hours","asc_minutes","asc_seconds","declination","dec_sign","dec_degrees","dec_minutes","dec_seconds","dataArray","parameters","rowObject","Map","positionalIndex","parameter","set","graph","years","hasMonth","isYear","monthList","byMonth","properties","byYear","source","months","low","high","precip","require$$0$5","require$$1$4","require$$2$3","templates$5","congbio","audio","rp","unreferenced","geo","dataOnly","shorthand","mlbplayer","props","syntaxhighlight","samp","sup","chem2","ill","templates$4","math","formula","isbn","barrels","mpc","pengoal","penmiss","_list","_alias","_parse","nomatch","english","romaji","kanji","marriage","spouse","cards","transl","text2","iso","sic","one","inrconvert","mults","currency_formatting","rupee_value","wins","losses","ties","games","ignore_ties","winlosspct","releases","region","uss","functions","codes$1","a$","au$","aud","bdt","brl","ca$","cad","chf","cny","czk","dkk","dkk2","euro","gbp","hk$","hkd","ils","inr","jpy","myr","nis","nok","nok2","nz$","nzd","peso","pkr","r$","rmb","rub","ruble","rupee","s$","sek","sek2","sfr","sgd","shekel","sheqel","ttd","us$","usd","yen","zar","parseCurrency","code","templates$3","day","month","getEpoch","_lib$2","days","timeSince","delt","predicate","diff","monthCount","toOrdinal","months$1","monthName","pad","lib","toText","hour","minute","tz","ymd","units","month1","template$1","getBoth","getFullYear","getMonth","getDate","parsers","timezone","natural_date","one_year","year1","two_dates","birth_year","birth_month","birth_date","death_year","death_month","death_date","dates","currentday","currentdayname","getDay","currentyear","monthyear","setMonth","birth_day","dts","millennium","birthdeathage","parseDMS","hemisphere","places","negative","parseCoor","parseParams","lat","lon","findLatLng","generic","_parser","misc_1","persondata","portal","reflist","codes","adx","aim","amex","asx","athex","b3","barbadosse","bbv","bcba","bcs","bhse","bist","bmad","bmv","bpse","bse","bsx","bvb","bvc","bvl","bvpasa","bwse","cse","darse","dfm","dse","euronext","euronextparis","fse","fwb","gse","gtsm","idx","ise","iseq","isin","jasdaq","jse","kase","krx","lse","luxse","mai","mcx","mutf","myx","nag","nasdaq","neeq","nepse","nex","nse","newconnect","nyse","nzx","omx","ose","otcqb","otcqx","prse","psx","karse","qe","sehk","sgx","sse","swx","szse","tase","tsx","tsxv","ttse","twse","tyo","wbag","wse","zse","parseStockExchange","ticketnumber","exchanges","zeroPad","parseTeam","round1","team","score","seed","require$$7","rounds","require$$0$4","require$$1$3","require$$2$2","require$$3$1","require$$4$1","require$$5$1","require$$6","require$$8","player","goal","note","summary","byTeam","win","tie","otloss","goals_for","goals_against","update","header","table_header","teams","textAndData","aliases","require$$0$3","require$$1$2","require$$2$1","templates$1","isArray$2","nums","parse$3","toJson","infobox1","isArray$1","normalize","Infobox","_type","methods$1","image2","logo","image_skyline","image_flag","allKeys","Infobox_1","methods","_text","Template","require$$4","require$$9","isCitation","referenceTypes","refn","harvnb","findTemplates","parseTemplate","sortOut","kind","subbox","parseSentence$1","require$$3","nested","parseNested","removeIt","allTemplates","infoboxes1","templates1","_templates","coach","roster","mlb","catcher","headings","whichHeadings","parseSentence","parseGallery","pos","parseElection","candidates","parseNBA","parseMlb","parseMMA","parseMath","toJSON$1","require$$0$2","parse$2","startEndTemplates","defaults$2","Section","writable","_title","_doc","_depth","indentation","templ","remove","bads","_sections","lastSibling","previousSibling","singular$1","sing","require$$0$1","isReference","section_reg","parse$1","_02Section","doc1","heading1","data1","removeReferenceSection","cat_reg","cat_remove_reg","sectionMap","toJSON","isDisambig","preProcess","newWiki","defaults$1","Document$1","options1","props1","language","_redirectTo","categories1","_categories","guess","sen","_pageID","_wikidata","_namespace","isDisambiguation","log","indent","singular","redirectsTo","Document1","unfetch","parseUrl","makeUrl","getResult","parseDoc","docs","makeHeaders","options2","agent","noOrigin","Origin","isUrl","callback","wiki1","models","Doc","http","cb","plugin","extend","version","$1402b7d279f27671$var$scene","$1402b7d279f27671$var$renderer","$1402b7d279f27671$var$controls","$1402b7d279f27671$var$camera","$1402b7d279f27671$var$clock","$1402b7d279f27671$var$moveForward","$1402b7d279f27671$var$moveBackward","$1402b7d279f27671$var$moveLeft","$1402b7d279f27671$var$moveRight","$1402b7d279f27671$var$canJump","$1402b7d279f27671$var$velocity","THREE","Vector3","$1402b7d279f27671$var$direction","$1402b7d279f27671$var$clearObjects","geometry","dispose","material","$1402b7d279f27671$var$render3DExhibition","exhibition","light","DirectionalLight","castShadow","ambient","AmbientLight","CylinderGeometry","$1402b7d279f27671$var$CHAPTER_RADIUS","MeshStandardMaterial","ground","Mesh","$1402b7d279f27671$var$setupFloor","numberOfChapters","chapterMidpoint","applyAxisAngle","imageGroup","Group","z","lookAt","$1402b7d279f27671$var$createTextPlane","$1402b7d279f27671$var$generateImageData","promiseArr","numberOfImages","picturePromise","picture","imageAngle","imagePosition","imagePromises","responseArr","jsonPromises","dataArr","picPromises","fileURL","imageinfo","$1402b7d279f27671$var$createImagePlane","plane","textPlane","$1402b7d279f27671$var$generate","topic","getElementById","wikiText","article","currentSectionName","currentSectionImages","currentParagraph","$1402b7d279f27671$var$parseArticle","$1402b7d279f27671$var$addOption","datalist","$1402b7d279f27671$var$animate","getDelta","moveRight","moveForward","getObject","requestAnimationFrame","TextureLoader","load","texture1","ratio","planeGeometry","PlaneGeometry","planeMaterial","MeshLambertMaterial","DoubleSide","maxWidth","$parcel$interopDefault","$96b8a241e061fbb3$exports","$1402b7d279f27671$var$getSuggestions","Clock","Scene","Color","PerspectiveCamera","WebGLRenderer","antialias","setSize","domElement","PointerLockControls","movementSpeed","lookSpeed","lock","event"],"version":3,"file":"index.8bd846eb.js.map"}